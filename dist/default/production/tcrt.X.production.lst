

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Dec 28 20:38:23 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 1.44
    35                           ; Generated 14/09/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F45K22 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	smallconst
    70  000600                     __psmallconst:
    71                           	opt stack 0
    72  000600  00                 	db	0
    73  000601                     _AN_CHANNEL:
    74                           	opt stack 0
    75  000601  0012               	dw	18
    76  000603  001B               	dw	27
    77  000605  0009               	dw	9
    78  000607  000D               	dw	13
    79  000609  0001               	dw	1
    80  00060B  0004               	dw	4
    81  00060D  0007               	dw	7
    82  00060F  000F               	dw	15
    83  000611                     __end_of_AN_CHANNEL:
    84                           	opt stack 0
    85  000611                     _TRESHOLD:
    86                           	opt stack 0
    87  000611  8000               	dw	32768
    88  000613                     __end_of_TRESHOLD:
    89                           	opt stack 0
    90  000613  00                 	db	0	; dummy byte at the end
    91  0000                     
    92                           	psect	nvCOMRAM
    93  000038                     __pnvCOMRAM:
    94                           	opt stack 0
    95  000038                     _INT0_InterruptHandler:
    96                           	opt stack 0
    97  000038                     	ds	2
    98  0000                     _CCPR5H	set	3926
    99  0000                     _CCPR5L	set	3925
   100  0000                     _CCP5CON	set	3924
   101  0000                     _ANSELA	set	3896
   102  0000                     _ANSELE	set	3900
   103  0000                     _ANSELD	set	3899
   104  0000                     _ANSELB	set	3897
   105  0000                     _ANSELC	set	3898
   106  0000                     _LATEbits	set	3981
   107  0000                     _LATAbits	set	3977
   108  0000                     _LATBbits	set	3978
   109  0000                     _LATDbits	set	3980
   110  0000                     _LATCbits	set	3979
   111  0000                     _SSP2STATbits	set	3949
   112  0000                     _SSP2CON1bits	set	3948
   113  0000                     _SSP2BUF	set	3951
   114  0000                     _SSP2CON3	set	3945
   115  0000                     _SSP2CON1	set	3948
   116  0000                     _SSP2STAT	set	3949
   117  0000                     _OSCTUNE	set	3995
   118  0000                     _OSCCON2	set	4050
   119  0000                     _OSCCON	set	4051
   120  0000                     _INTCONbits	set	4082
   121  0000                     _RCONbits	set	4048
   122  0000                     _INTCON2bits	set	4081
   123  0000                     _WPUB	set	3937
   124  0000                     _TRISD	set	3989
   125  0000                     _TRISC	set	3988
   126  0000                     _TRISB	set	3987
   127  0000                     _TRISA	set	3986
   128  0000                     _TRISE	set	3990
   129  0000                     _LATC	set	3979
   130  0000                     _LATB	set	3978
   131  0000                     _LATA	set	3977
   132  0000                     _LATD	set	3980
   133  0000                     _LATE	set	3981
   134  0000                     _ADCON0bits	set	4034
   135  0000                     _ADRESH	set	4036
   136  0000                     _ADRESL	set	4035
   137  0000                     _ADCON2	set	4032
   138  0000                     _ADCON1	set	4033
   139  0000                     _ADCON0	set	4034
   140                           
   141                           ; #config settings
   142  0000                     
   143                           	psect	cinit
   144  0009DE                     __pcinit:
   145                           	opt stack 0
   146  0009DE                     start_initialization:
   147                           	opt stack 0
   148  0009DE                     __initialization:
   149                           	opt stack 0
   150                           
   151                           ; Clear objects allocated to COMRAM (18 bytes)
   152  0009DE  EE00  F026         	lfsr	0,__pbssCOMRAM
   153  0009E2  0E12               	movlw	18
   154  0009E4                     clear_0:
   155  0009E4  6AEE               	clrf	postinc0,c
   156  0009E6  06E8               	decf	wreg,f,c
   157  0009E8  E1FD               	bnz	clear_0
   158  0009EA                     end_of_initialization:
   159                           	opt stack 0
   160  0009EA                     __end_of__initialization:
   161                           	opt stack 0
   162  0009EA  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   163  0009EC  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   164  0009EE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165  0009F0  6EF8               	movwf	tblptru,c
   166  0009F2  0100               	movlb	0
   167  0009F4  EFBB  F004         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           
   172                           	psect	bssCOMRAM
   173  000026                     __pbssCOMRAM:
   174                           	opt stack 0
   175  000026                     _tcrt:
   176                           	opt stack 0
   177  000026                     	ds	16
   178  000036                     _ledValues:
   179                           	opt stack 0
   180  000036                     	ds	1
   181  000037                     _toRedrawLeds:
   182                           	opt stack 0
   183  000037                     	ds	1
   184                           tblptru	equ	0xFF8
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           
   188                           	psect	cstackCOMRAM
   189  000001                     __pcstackCOMRAM:
   190                           	opt stack 0
   191  000001                     ?_ADC_GetConversion:
   192                           	opt stack 0
   193  000001                     setTCRT@pos:
   194                           	opt stack 0
   195                           
   196                           ; 2 bytes @ 0x0
   197  000001                     	ds	2
   198  000003                     ??_ADC_GetConversion:
   199  000003                     setTCRT@value:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x2
   203  000003                     	ds	2
   204  000005                     ??_setTCRT:
   205  000005                     ADC_GetConversion@channel:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x4
   209  000005                     	ds	2
   210  000007                     INT0_ISR@i:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x6
   214  000007                     	ds	2
   215  000009                     ??_INTERRUPT_InterruptManager:
   216                           
   217                           ; 1 bytes @ 0x8
   218  000009                     	ds	18
   219  00001B                     SPI2_Exchange8bit@dummyRead:
   220                           	opt stack 0
   221  00001B                     INT0_SetInterruptHandler@InterruptHandler:
   222                           	opt stack 0
   223  00001B                     setLed@pos:
   224                           	opt stack 0
   225                           
   226                           ; 2 bytes @ 0x1A
   227  00001B                     	ds	1
   228  00001C                     SPI2_Exchange8bit@data:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0x1B
   232  00001C                     	ds	1
   233  00001D                     setLed@value:
   234                           	opt stack 0
   235                           
   236                           ; 2 bytes @ 0x1C
   237  00001D                     	ds	2
   238  00001F                     ??_setLed:
   239                           
   240                           ; 1 bytes @ 0x1E
   241  00001F                     	ds	2
   242  000021                     
   243                           ; 1 bytes @ 0x20
   244  000021                     	ds	2
   245  000023                     drawToLeds@i:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x22
   249  000023                     	ds	2
   250  000025                     main@ledPositionToSend:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0x24
   254  000025                     	ds	1
   255                           tblptru	equ	0xFF8
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 180 in file "main.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  ledPositionT    1   36[COMRAM] unsigned char 
   269 ;;  dummyRead       1    0        unsigned char 
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   279 ;;      Params:         0       0       0       0       0       0       0
   280 ;;      Locals:         1       0       0       0       0       0       0
   281 ;;      Temps:          0       0       0       0       0       0       0
   282 ;;      Totals:         1       0       0       0       0       0       0
   283 ;;Total ram usage:        1 bytes
   284 ;; Hardware stack levels required when called:    7
   285 ;; This function calls:
   286 ;;		_ADC_Initialize
   287 ;;		_PIN_MANAGER_Initialize
   288 ;;		_SPI2_Exchange8bit
   289 ;;		_SYSTEM_Initialize
   290 ;;		_drawToLeds
   291 ;; This function is called by:
   292 ;;		Startup code after reset
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text0
   297  000976                     __ptext0:
   298                           	opt stack 0
   299  000976                     _main:
   300                           	opt stack 24
   301                           
   302                           ;main.c: 183: SYSTEM_Initialize();
   303                           
   304                           ;incstack = 0
   305  000976  ECE0  F004         	call	_SYSTEM_Initialize	;wreg free
   306                           
   307                           ;main.c: 202: (INTCONbits.GIE = 1);
   308  00097A  8EF2               	bsf	intcon,7,c	;volatile
   309                           
   310                           ;main.c: 208: (INTCONbits.PEIE = 1);
   311  00097C  8CF2               	bsf	intcon,6,c	;volatile
   312                           
   313                           ;main.c: 213: PIN_MANAGER_Initialize();
   314  00097E  EC81  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   315                           
   316                           ;main.c: 214: ADC_Initialize();
   317  000982  EC09  F005         	call	_ADC_Initialize	;wreg free
   318  000986                     
   319                           ;main.c: 217: {
   320                           ;main.c: 221: drawToLeds();
   321  000986  EC4F  F004         	call	_drawToLeds	;wreg free
   322                           
   323                           ;main.c: 222: toRedrawLeds = 0;
   324  00098A  0E00               	movlw	0
   325  00098C  6E37               	movwf	_toRedrawLeds,c
   326                           
   327                           ;main.c: 224: uint8_t ledPositionToSend;
   328                           ;main.c: 225: uint8_t dummyRead;
   329                           ;main.c: 227: while(!toRedrawLeds)
   330  00098E  D004               	goto	l305
   331  000990                     
   332                           ;main.c: 228: {
   333                           ;main.c: 229: ledPositionToSend = SPI2_Exchange8bit(ledValues);
   334  000990  5036               	movf	_ledValues,w,c
   335  000992  ECFC  F004         	call	_SPI2_Exchange8bit
   336  000996  6E25               	movwf	main@ledPositionToSend,c
   337  000998                     l305:
   338  000998  5037               	movf	_toRedrawLeds,w,c
   339  00099A  A4D8               	btfss	status,2,c
   340  00099C  D7F4               	goto	l304
   341  00099E  D7F8               	goto	l306
   342  0009A0                     __end_of_main:
   343                           	opt stack 0
   344                           tblptru	equ	0xFF8
   345                           intcon	equ	0xFF2
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           status	equ	0xFD8
   349                           
   350 ;; *************** function _drawToLeds *****************
   351 ;; Defined at:
   352 ;;		line 160 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  i               2   34[COMRAM] int 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   366 ;;      Params:         0       0       0       0       0       0       0
   367 ;;      Locals:         2       0       0       0       0       0       0
   368 ;;      Temps:          2       0       0       0       0       0       0
   369 ;;      Totals:         4       0       0       0       0       0       0
   370 ;;Total ram usage:        4 bytes
   371 ;; Hardware stack levels used:    1
   372 ;; Hardware stack levels required when called:    5
   373 ;; This function calls:
   374 ;;		_setLed
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text1
   381  00089E                     __ptext1:
   382                           	opt stack 0
   383  00089E                     _drawToLeds:
   384                           	opt stack 25
   385                           
   386                           ;main.c: 162: ledValues = 0;
   387                           
   388                           ;incstack = 0
   389  00089E  0E00               	movlw	0
   390  0008A0  6E36               	movwf	_ledValues,c
   391                           
   392                           ;main.c: 163: for(int i = 0; i<8; i++){
   393  0008A2  0E00               	movlw	0
   394  0008A4  6E24               	movwf	drawToLeds@i+1,c
   395  0008A6  0E00               	movlw	0
   396  0008A8  6E23               	movwf	drawToLeds@i,c
   397  0008AA                     l1382:
   398  0008AA  BE24               	btfsc	drawToLeds@i+1,7,c
   399  0008AC  D006               	goto	l292
   400  0008AE  5024               	movf	drawToLeds@i+1,w,c
   401  0008B0  E127               	bnz	l294
   402  0008B2  0E08               	movlw	8
   403  0008B4  5C23               	subwf	drawToLeds@i,w,c
   404  0008B6  B0D8               	btfsc	status,0,c
   405  0008B8  0012               	return	
   406  0008BA                     l292:
   407                           
   408                           ;main.c: 165: setLed(i, tcrt[i]<TRESHOLD);
   409  0008BA  C023  F01B         	movff	drawToLeds@i,setLed@pos
   410  0008BE  C024  F01C         	movff	drawToLeds@i+1,setLed@pos+1
   411  0008C2  0E11               	movlw	low _TRESHOLD
   412  0008C4  6EF6               	movwf	tblptrl,c
   413  0008C6                     	if	1	;There is more than 1 active tblptr byte
   414  0008C6  0E06               	movlw	high _TRESHOLD
   415  0008C8  6EF7               	movwf	tblptrh,c
   416  0008CA                     	endif
   417  0008CA                     	if	0	;There are less than 3 active tblptr bytes
   418  0008CA                     	endif
   419  0008CA  90D8               	bcf	status,0,c
   420  0008CC  3423               	rlcf	drawToLeds@i,w,c
   421  0008CE  6ED9               	movwf	fsr2l,c
   422  0008D0  3424               	rlcf	drawToLeds@i+1,w,c
   423  0008D2  6EDA               	movwf	fsr2h,c
   424  0008D4  0E26               	movlw	low _tcrt
   425  0008D6  26D9               	addwf	fsr2l,f,c
   426  0008D8  0E00               	movlw	high _tcrt
   427  0008DA  22DA               	addwfc	fsr2h,f,c
   428  0008DC  0009               	tblrd		*+
   429  0008DE  50F5               	movf	tablat,w,c
   430  0008E0  5CDE               	subwf	postinc2,w,c
   431  0008E2  0009               	tblrd		*+
   432  0008E4  50F5               	movf	tablat,w,c
   433  0008E6  58DE               	subwfb	postinc2,w,c
   434  0008E8  B0D8               	btfsc	status,0,c
   435  0008EA  D002               	goto	u790
   436  0008EC  0E01               	movlw	1
   437  0008EE  D001               	goto	u800
   438  0008F0                     u790:
   439  0008F0  0E00               	movlw	0
   440  0008F2                     u800:
   441  0008F2  6E1D               	movwf	setLed@value,c
   442  0008F4  6A1E               	clrf	setLed@value+1,c
   443  0008F6  EC0A  F003         	call	_setLed	;wreg free
   444  0008FA  4A23               	infsnz	drawToLeds@i,f,c
   445  0008FC  2A24               	incf	drawToLeds@i+1,f,c
   446  0008FE  D7D5               	goto	l1382
   447  000900                     l294:
   448  000900  0012               	return		;funcret
   449  000902                     __end_of_drawToLeds:
   450                           	opt stack 0
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           intcon	equ	0xFF2
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postinc2	equ	0xFDE
   459                           fsr2h	equ	0xFDA
   460                           fsr2l	equ	0xFD9
   461                           status	equ	0xFD8
   462                           
   463 ;; *************** function _setLed *****************
   464 ;; Defined at:
   465 ;;		line 97 in file "main.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;  pos             2   26[COMRAM] int 
   468 ;;  value           2   28[COMRAM] int 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   480 ;;      Params:         4       0       0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0       0       0
   482 ;;      Temps:          2       0       0       0       0       0       0
   483 ;;      Totals:         6       0       0       0       0       0       0
   484 ;;Total ram usage:        6 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    4
   487 ;; This function calls:
   488 ;;		Nothing
   489 ;; This function is called by:
   490 ;;		_drawToLeds
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text2
   495  000614                     __ptext2:
   496                           	opt stack 0
   497  000614                     _setLed:
   498                           	opt stack 25
   499                           
   500                           ;main.c: 99: switch(pos)
   501                           
   502                           ;incstack = 0
   503  000614  D088               	goto	l263
   504  000616                     l264:
   505                           
   506                           ;main.c: 102: LATCbits.LATC4 = value;
   507  000616  B01D               	btfsc	setLed@value,0,c
   508  000618  D002               	bra	u585
   509  00061A  988B               	bcf	3979,4,c	;volatile
   510  00061C  D001               	bra	u586
   511  00061E                     u585:
   512  00061E  888B               	bsf	3979,4,c	;volatile
   513  000620                     u586:
   514                           
   515                           ;main.c: 103: if(value)
   516  000620  501D               	movf	setLed@value,w,c
   517  000622  101E               	iorwf	setLed@value+1,w,c
   518  000624  B4D8               	btfsc	status,2,c
   519  000626  D004               	goto	l265
   520                           
   521                           ;main.c: 104: ledValues = ledValues | 0b00000001;
   522  000628  5036               	movf	_ledValues,w,c
   523  00062A  0901               	iorlw	1
   524  00062C  6E36               	movwf	_ledValues,c
   525  00062E  0012               	return	
   526  000630                     l265:
   527                           
   528                           ;main.c: 105: else
   529                           ;main.c: 106: ledValues = ledValues & 0b11111110;
   530  000630  5036               	movf	_ledValues,w,c
   531  000632  0BFE               	andlw	254
   532  000634  6E36               	movwf	_ledValues,c
   533                           
   534                           ;main.c: 107: break;
   535  000636  0012               	return	
   536  000638                     l268:
   537                           
   538                           ;main.c: 109: LATDbits.LATD5 = value;
   539  000638  B01D               	btfsc	setLed@value,0,c
   540  00063A  D002               	bra	u605
   541  00063C  9A8C               	bcf	3980,5,c	;volatile
   542  00063E  D001               	bra	u606
   543  000640                     u605:
   544  000640  8A8C               	bsf	3980,5,c	;volatile
   545  000642                     u606:
   546                           
   547                           ;main.c: 110: if(value)
   548  000642  501D               	movf	setLed@value,w,c
   549  000644  101E               	iorwf	setLed@value+1,w,c
   550  000646  B4D8               	btfsc	status,2,c
   551  000648  D004               	goto	l269
   552                           
   553                           ;main.c: 111: ledValues = ledValues | 0b00000010;
   554  00064A  5036               	movf	_ledValues,w,c
   555  00064C  0902               	iorlw	2
   556  00064E  6E36               	movwf	_ledValues,c
   557  000650  0012               	return	
   558  000652                     l269:
   559                           
   560                           ;main.c: 112: else
   561                           ;main.c: 113: ledValues = ledValues & 0b11111101;
   562  000652  5036               	movf	_ledValues,w,c
   563  000654  0BFD               	andlw	253
   564  000656  6E36               	movwf	_ledValues,c
   565                           
   566                           ;main.c: 114: break;
   567  000658  0012               	return	
   568  00065A                     l271:
   569                           
   570                           ;main.c: 116: LATBbits.LATB1 = value;
   571  00065A  B01D               	btfsc	setLed@value,0,c
   572  00065C  D002               	bra	u625
   573  00065E  928A               	bcf	3978,1,c	;volatile
   574  000660  D001               	bra	u626
   575  000662                     u625:
   576  000662  828A               	bsf	3978,1,c	;volatile
   577  000664                     u626:
   578                           
   579                           ;main.c: 117: if(value)
   580  000664  501D               	movf	setLed@value,w,c
   581  000666  101E               	iorwf	setLed@value+1,w,c
   582  000668  B4D8               	btfsc	status,2,c
   583  00066A  D004               	goto	l272
   584                           
   585                           ;main.c: 118: ledValues = ledValues | 0b00000100;
   586  00066C  5036               	movf	_ledValues,w,c
   587  00066E  0904               	iorlw	4
   588  000670  6E36               	movwf	_ledValues,c
   589  000672  0012               	return	
   590  000674                     l272:
   591                           
   592                           ;main.c: 119: else
   593                           ;main.c: 120: ledValues = ledValues & 0b11111011;
   594  000674  5036               	movf	_ledValues,w,c
   595  000676  0BFB               	andlw	251
   596  000678  6E36               	movwf	_ledValues,c
   597                           
   598                           ;main.c: 121: break;
   599  00067A  0012               	return	
   600  00067C                     l274:
   601                           
   602                           ;main.c: 123: LATDbits.LATD2 = value;
   603  00067C  B01D               	btfsc	setLed@value,0,c
   604  00067E  D002               	bra	u645
   605  000680  948C               	bcf	3980,2,c	;volatile
   606  000682  D001               	bra	u646
   607  000684                     u645:
   608  000684  848C               	bsf	3980,2,c	;volatile
   609  000686                     u646:
   610                           
   611                           ;main.c: 124: if(value)
   612  000686  501D               	movf	setLed@value,w,c
   613  000688  101E               	iorwf	setLed@value+1,w,c
   614  00068A  B4D8               	btfsc	status,2,c
   615  00068C  D004               	goto	l275
   616                           
   617                           ;main.c: 125: ledValues = ledValues | 0b00001000;
   618  00068E  5036               	movf	_ledValues,w,c
   619  000690  0908               	iorlw	8
   620  000692  6E36               	movwf	_ledValues,c
   621  000694  0012               	return	
   622  000696                     l275:
   623                           
   624                           ;main.c: 126: else
   625                           ;main.c: 127: ledValues = ledValues & 0b11110111;
   626  000696  5036               	movf	_ledValues,w,c
   627  000698  0BF7               	andlw	247
   628  00069A  6E36               	movwf	_ledValues,c
   629                           
   630                           ;main.c: 128: break;
   631  00069C  0012               	return	
   632  00069E                     l277:
   633                           
   634                           ;main.c: 130: LATAbits.LATA0 = value;
   635  00069E  B01D               	btfsc	setLed@value,0,c
   636  0006A0  D002               	bra	u665
   637  0006A2  9089               	bcf	3977,0,c	;volatile
   638  0006A4  D001               	bra	u666
   639  0006A6                     u665:
   640  0006A6  8089               	bsf	3977,0,c	;volatile
   641  0006A8                     u666:
   642                           
   643                           ;main.c: 131: if(value)
   644  0006A8  501D               	movf	setLed@value,w,c
   645  0006AA  101E               	iorwf	setLed@value+1,w,c
   646  0006AC  B4D8               	btfsc	status,2,c
   647  0006AE  D004               	goto	l278
   648                           
   649                           ;main.c: 132: ledValues = ledValues | 0b00010000;
   650  0006B0  5036               	movf	_ledValues,w,c
   651  0006B2  0910               	iorlw	16
   652  0006B4  6E36               	movwf	_ledValues,c
   653  0006B6  0012               	return	
   654  0006B8                     l278:
   655                           
   656                           ;main.c: 133: else
   657                           ;main.c: 134: ledValues = ledValues & 0b11101111;
   658  0006B8  5036               	movf	_ledValues,w,c
   659  0006BA  0BEF               	andlw	239
   660  0006BC  6E36               	movwf	_ledValues,c
   661                           
   662                           ;main.c: 135: break;
   663  0006BE  0012               	return	
   664  0006C0                     l280:
   665                           
   666                           ;main.c: 137: LATAbits.LATA3 = value;
   667  0006C0  B01D               	btfsc	setLed@value,0,c
   668  0006C2  D002               	bra	u685
   669  0006C4  9689               	bcf	3977,3,c	;volatile
   670  0006C6  D001               	bra	u686
   671  0006C8                     u685:
   672  0006C8  8689               	bsf	3977,3,c	;volatile
   673  0006CA                     u686:
   674                           
   675                           ;main.c: 138: if(value)
   676  0006CA  501D               	movf	setLed@value,w,c
   677  0006CC  101E               	iorwf	setLed@value+1,w,c
   678  0006CE  B4D8               	btfsc	status,2,c
   679  0006D0  D004               	goto	l281
   680                           
   681                           ;main.c: 139: ledValues = ledValues | 0b00100000;
   682  0006D2  5036               	movf	_ledValues,w,c
   683  0006D4  0920               	iorlw	32
   684  0006D6  6E36               	movwf	_ledValues,c
   685  0006D8  0012               	return	
   686  0006DA                     l281:
   687                           
   688                           ;main.c: 140: else
   689                           ;main.c: 141: ledValues = ledValues & 0b11011111;
   690  0006DA  5036               	movf	_ledValues,w,c
   691  0006DC  0BDF               	andlw	223
   692  0006DE  6E36               	movwf	_ledValues,c
   693                           
   694                           ;main.c: 142: break;
   695  0006E0  0012               	return	
   696  0006E2                     l283:
   697                           
   698                           ;main.c: 144: LATEbits.LATE0 = value;
   699  0006E2  B01D               	btfsc	setLed@value,0,c
   700  0006E4  D002               	bra	u705
   701  0006E6  908D               	bcf	3981,0,c	;volatile
   702  0006E8  D001               	bra	u706
   703  0006EA                     u705:
   704  0006EA  808D               	bsf	3981,0,c	;volatile
   705  0006EC                     u706:
   706                           
   707                           ;main.c: 145: if(value)
   708  0006EC  501D               	movf	setLed@value,w,c
   709  0006EE  101E               	iorwf	setLed@value+1,w,c
   710  0006F0  B4D8               	btfsc	status,2,c
   711  0006F2  D004               	goto	l284
   712                           
   713                           ;main.c: 146: ledValues = ledValues | 0b01000000;
   714  0006F4  5036               	movf	_ledValues,w,c
   715  0006F6  0940               	iorlw	64
   716  0006F8  6E36               	movwf	_ledValues,c
   717  0006FA  0012               	return	
   718  0006FC                     l284:
   719                           
   720                           ;main.c: 147: else
   721                           ;main.c: 148: ledValues = ledValues & 0b10111111;
   722  0006FC  5036               	movf	_ledValues,w,c
   723  0006FE  0BBF               	andlw	191
   724  000700  6E36               	movwf	_ledValues,c
   725                           
   726                           ;main.c: 149: break;
   727  000702  0012               	return	
   728  000704                     l286:
   729                           
   730                           ;main.c: 151: LATCbits.LATC1 = value;
   731  000704  B01D               	btfsc	setLed@value,0,c
   732  000706  D002               	bra	u725
   733  000708  928B               	bcf	3979,1,c	;volatile
   734  00070A  D001               	bra	u726
   735  00070C                     u725:
   736  00070C  828B               	bsf	3979,1,c	;volatile
   737  00070E                     u726:
   738                           
   739                           ;main.c: 152: if(value)
   740  00070E  501D               	movf	setLed@value,w,c
   741  000710  101E               	iorwf	setLed@value+1,w,c
   742  000712  B4D8               	btfsc	status,2,c
   743  000714  D004               	goto	l287
   744                           
   745                           ;main.c: 153: ledValues = ledValues | 0b10000000;
   746  000716  5036               	movf	_ledValues,w,c
   747  000718  0980               	iorlw	128
   748  00071A  6E36               	movwf	_ledValues,c
   749  00071C  0012               	return	
   750  00071E                     l287:
   751                           
   752                           ;main.c: 154: else
   753                           ;main.c: 155: ledValues = ledValues & 0b01111111;
   754  00071E  5036               	movf	_ledValues,w,c
   755  000720  0B7F               	andlw	127
   756  000722  6E36               	movwf	_ledValues,c
   757                           
   758                           ;main.c: 157: }
   759                           
   760                           ;main.c: 156: break;
   761  000724  0012               	return	
   762  000726                     l263:
   763  000726  C01B  F01F         	movff	setLed@pos,??_setLed
   764  00072A  C01C  F020         	movff	setLed@pos+1,??_setLed+1
   765                           
   766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   767                           ; Switch size 1, requested type "space"
   768                           ; Number of cases is 1, Range of values is 0 to 0
   769                           ; switch strategies available:
   770                           ; Name         Instructions Cycles
   771                           ; simple_byte            4     3 (average)
   772                           ;	Chosen strategy is simple_byte
   773  00072E  5020               	movf	??_setLed+1,w,c
   774  000730  0A00               	xorlw	0	; case 0
   775  000732  A4D8               	btfss	status,2,c
   776  000734  0012               	return	
   777                           
   778                           ; Switch size 1, requested type "space"
   779                           ; Number of cases is 8, Range of values is 0 to 7
   780                           ; switch strategies available:
   781                           ; Name         Instructions Cycles
   782                           ; simple_byte           25    13 (average)
   783                           ;	Chosen strategy is simple_byte
   784  000736  501F               	movf	??_setLed,w,c
   785  000738  0A00               	xorlw	0	; case 0
   786  00073A  B4D8               	btfsc	status,2,c
   787  00073C  D76C               	goto	l264
   788  00073E  0A01               	xorlw	1	; case 1
   789  000740  B4D8               	btfsc	status,2,c
   790  000742  D77A               	goto	l268
   791  000744  0A03               	xorlw	3	; case 2
   792  000746  B4D8               	btfsc	status,2,c
   793  000748  D788               	goto	l271
   794  00074A  0A01               	xorlw	1	; case 3
   795  00074C  B4D8               	btfsc	status,2,c
   796  00074E  D796               	goto	l274
   797  000750  0A07               	xorlw	7	; case 4
   798  000752  B4D8               	btfsc	status,2,c
   799  000754  D7A4               	goto	l277
   800  000756  0A01               	xorlw	1	; case 5
   801  000758  B4D8               	btfsc	status,2,c
   802  00075A  D7B2               	goto	l280
   803  00075C  0A03               	xorlw	3	; case 6
   804  00075E  B4D8               	btfsc	status,2,c
   805  000760  D7C0               	goto	l283
   806  000762  0A01               	xorlw	1	; case 7
   807  000764  A4D8               	btfss	status,2,c
   808  000766  0012               	return	
   809  000768  D7CD               	goto	l286
   810  00076A                     __end_of_setLed:
   811                           	opt stack 0
   812                           tblptru	equ	0xFF8
   813                           tblptrh	equ	0xFF7
   814                           tblptrl	equ	0xFF6
   815                           tablat	equ	0xFF5
   816                           intcon	equ	0xFF2
   817                           postinc0	equ	0xFEE
   818                           wreg	equ	0xFE8
   819                           postinc2	equ	0xFDE
   820                           fsr2h	equ	0xFDA
   821                           fsr2l	equ	0xFD9
   822                           status	equ	0xFD8
   823                           
   824 ;; *************** function _SYSTEM_Initialize *****************
   825 ;; Defined at:
   826 ;;		line 111 in file "mcc_generated_files/mcc.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   840 ;;      Params:         0       0       0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0       0       0
   843 ;;      Totals:         0       0       0       0       0       0       0
   844 ;;Total ram usage:        0 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    6
   847 ;; This function calls:
   848 ;;		_ADC_Initialize
   849 ;;		_CCP5_Initialize
   850 ;;		_EXT_INT_Initialize
   851 ;;		_INTERRUPT_Initialize
   852 ;;		_OSCILLATOR_Initialize
   853 ;;		_PIN_MANAGER_Initialize
   854 ;;		_SPI2_Initialize
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           	psect	text3
   861  0009C0                     __ptext3:
   862                           	opt stack 0
   863  0009C0                     _SYSTEM_Initialize:
   864                           	opt stack 24
   865                           
   866                           ;mcc.c: 114: INTERRUPT_Initialize();
   867                           
   868                           ;incstack = 0
   869  0009C0  EC39  F005         	call	_INTERRUPT_Initialize	;wreg free
   870                           
   871                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   872  0009C4  EC81  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   873                           
   874                           ;mcc.c: 116: OSCILLATOR_Initialize();
   875  0009C8  EC2D  F005         	call	_OSCILLATOR_Initialize	;wreg free
   876                           
   877                           ;mcc.c: 117: SPI2_Initialize();
   878  0009CC  EC26  F005         	call	_SPI2_Initialize	;wreg free
   879                           
   880                           ;mcc.c: 118: EXT_INT_Initialize();
   881  0009D0  EC14  F005         	call	_EXT_INT_Initialize	;wreg free
   882                           
   883                           ;mcc.c: 119: CCP5_Initialize();
   884  0009D4  EC1E  F005         	call	_CCP5_Initialize	;wreg free
   885                           
   886                           ;mcc.c: 120: ADC_Initialize();
   887  0009D8  EC09  F005         	call	_ADC_Initialize	;wreg free
   888  0009DC  0012               	return		;funcret
   889  0009DE                     __end_of_SYSTEM_Initialize:
   890                           	opt stack 0
   891                           tblptru	equ	0xFF8
   892                           tblptrh	equ	0xFF7
   893                           tblptrl	equ	0xFF6
   894                           tablat	equ	0xFF5
   895                           intcon	equ	0xFF2
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           postinc2	equ	0xFDE
   899                           fsr2h	equ	0xFDA
   900                           fsr2l	equ	0xFD9
   901                           status	equ	0xFD8
   902                           
   903 ;; *************** function _SPI2_Initialize *****************
   904 ;; Defined at:
   905 ;;		line 65 in file "mcc_generated_files/spi2.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   919 ;;      Params:         0       0       0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0
   922 ;;      Totals:         0       0       0       0       0       0       0
   923 ;;Total ram usage:        0 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    4
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_SYSTEM_Initialize
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text4
   934  000A4C                     __ptext4:
   935                           	opt stack 0
   936  000A4C                     _SPI2_Initialize:
   937                           	opt stack 25
   938                           
   939                           ;spi2.c: 70: SSP2STAT = 0x00;
   940                           
   941                           ;incstack = 0
   942  000A4C  0E00               	movlw	0
   943  000A4E  6E6D               	movwf	3949,c	;volatile
   944                           
   945                           ;spi2.c: 73: SSP2CON1 = 0x24;
   946  000A50  0E24               	movlw	36
   947  000A52  6E6C               	movwf	3948,c	;volatile
   948                           
   949                           ;spi2.c: 76: SSP2CON3 = 0x00;
   950  000A54  0E00               	movlw	0
   951  000A56  6E69               	movwf	3945,c	;volatile
   952  000A58  0012               	return		;funcret
   953  000A5A                     __end_of_SPI2_Initialize:
   954                           	opt stack 0
   955                           tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           intcon	equ	0xFF2
   960                           postinc0	equ	0xFEE
   961                           wreg	equ	0xFE8
   962                           postinc2	equ	0xFDE
   963                           fsr2h	equ	0xFDA
   964                           fsr2l	equ	0xFD9
   965                           status	equ	0xFD8
   966                           
   967 ;; *************** function _PIN_MANAGER_Initialize *****************
   968 ;; Defined at:
   969 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, status,2
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   983 ;;      Params:         0       0       0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    4
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_SYSTEM_Initialize
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text5
   999  000902                     __ptext5:
  1000                           	opt stack 0
  1001  000902                     _PIN_MANAGER_Initialize:
  1002                           	opt stack 25
  1003                           
  1004                           ;pin_manager.c: 57: LATE = 0x00;
  1005                           
  1006                           ;incstack = 0
  1007  000902  0E00               	movlw	0
  1008  000904  6E8D               	movwf	3981,c	;volatile
  1009                           
  1010                           ;pin_manager.c: 58: LATD = 0x00;
  1011  000906  0E00               	movlw	0
  1012  000908  6E8C               	movwf	3980,c	;volatile
  1013                           
  1014                           ;pin_manager.c: 59: LATA = 0x00;
  1015  00090A  0E00               	movlw	0
  1016  00090C  6E89               	movwf	3977,c	;volatile
  1017                           
  1018                           ;pin_manager.c: 60: LATB = 0x00;
  1019  00090E  0E00               	movlw	0
  1020  000910  6E8A               	movwf	3978,c	;volatile
  1021                           
  1022                           ;pin_manager.c: 61: LATC = 0x00;
  1023  000912  0E00               	movlw	0
  1024  000914  6E8B               	movwf	3979,c	;volatile
  1025                           
  1026                           ;pin_manager.c: 66: TRISE = 0x04;
  1027  000916  0E04               	movlw	4
  1028  000918  6E96               	movwf	3990,c	;volatile
  1029                           
  1030                           ;pin_manager.c: 67: TRISA = 0xE2;
  1031  00091A  0EE2               	movlw	226
  1032  00091C  6E92               	movwf	3986,c	;volatile
  1033                           
  1034                           ;pin_manager.c: 68: TRISB = 0xE9;
  1035  00091E  0EE9               	movlw	233
  1036  000920  6E93               	movwf	3987,c	;volatile
  1037                           
  1038                           ;pin_manager.c: 69: TRISC = 0xC9;
  1039  000922  0EC9               	movlw	201
  1040  000924  6E94               	movwf	3988,c	;volatile
  1041                           
  1042                           ;pin_manager.c: 70: TRISD = 0x8B;
  1043  000926  0E8B               	movlw	139
  1044  000928  6E95               	movwf	3989,c	;volatile
  1045                           
  1046                           ;pin_manager.c: 75: ANSELC = 0xFC;
  1047  00092A  0EFC               	movlw	252
  1048  00092C  010F               	movlb	15	; () banked
  1049  00092E  6F3A               	movwf	58,b	;volatile
  1050                           
  1051                           ;pin_manager.c: 76: ANSELB = 0x3E;
  1052  000930  0E3E               	movlw	62
  1053  000932  6F39               	movwf	57,b	;volatile
  1054                           
  1055                           ;pin_manager.c: 77: ANSELD = 0xE4;
  1056  000934  0EE4               	movlw	228
  1057  000936  6F3B               	movwf	59,b	;volatile
  1058                           
  1059                           ;pin_manager.c: 78: ANSELE = 0x07;
  1060  000938  0E07               	movlw	7
  1061  00093A  6F3C               	movwf	60,b	;volatile
  1062                           
  1063                           ;pin_manager.c: 79: ANSELA = 0x2F;
  1064  00093C  0E2F               	movlw	47
  1065  00093E  6F38               	movwf	56,b	;volatile
  1066                           
  1067                           ; BSR set to: 15
  1068                           ;pin_manager.c: 84: WPUB = 0xFF;
  1069  000940  6861               	setf	3937,c	;volatile
  1070                           
  1071                           ; BSR set to: 15
  1072                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
  1073  000942  9EF1               	bcf	intcon2,7,c	;volatile
  1074                           
  1075                           ; BSR set to: 15
  1076  000944  0012               	return		;funcret
  1077  000946                     __end_of_PIN_MANAGER_Initialize:
  1078                           	opt stack 0
  1079                           tblptru	equ	0xFF8
  1080                           tblptrh	equ	0xFF7
  1081                           tblptrl	equ	0xFF6
  1082                           tablat	equ	0xFF5
  1083                           intcon	equ	0xFF2
  1084                           intcon2	equ	0xFF1
  1085                           postinc0	equ	0xFEE
  1086                           wreg	equ	0xFE8
  1087                           postinc2	equ	0xFDE
  1088                           fsr2h	equ	0xFDA
  1089                           fsr2l	equ	0xFD9
  1090                           status	equ	0xFD8
  1091                           
  1092 ;; *************** function _OSCILLATOR_Initialize *****************
  1093 ;; Defined at:
  1094 ;;		line 123 in file "mcc_generated_files/mcc.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1108 ;;      Params:         0       0       0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0       0       0
  1110 ;;      Temps:          0       0       0       0       0       0       0
  1111 ;;      Totals:         0       0       0       0       0       0       0
  1112 ;;Total ram usage:        0 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:    4
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_SYSTEM_Initialize
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text6
  1123  000A5A                     __ptext6:
  1124                           	opt stack 0
  1125  000A5A                     _OSCILLATOR_Initialize:
  1126                           	opt stack 25
  1127                           
  1128                           ;mcc.c: 126: OSCCON = 0x70;
  1129                           
  1130                           ; BSR set to: 15
  1131                           ;incstack = 0
  1132  000A5A  0E70               	movlw	112
  1133  000A5C  6ED3               	movwf	4051,c	;volatile
  1134                           
  1135                           ;mcc.c: 128: OSCCON2 = 0x04;
  1136  000A5E  0E04               	movlw	4
  1137  000A60  6ED2               	movwf	4050,c	;volatile
  1138                           
  1139                           ;mcc.c: 130: OSCTUNE = 0x00;
  1140  000A62  0E00               	movlw	0
  1141  000A64  6E9B               	movwf	3995,c	;volatile
  1142  000A66  0012               	return		;funcret
  1143  000A68                     __end_of_OSCILLATOR_Initialize:
  1144                           	opt stack 0
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           tblptrl	equ	0xFF6
  1148                           tablat	equ	0xFF5
  1149                           intcon	equ	0xFF2
  1150                           intcon2	equ	0xFF1
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           postinc2	equ	0xFDE
  1154                           fsr2h	equ	0xFDA
  1155                           fsr2l	equ	0xFD9
  1156                           status	equ	0xFD8
  1157                           
  1158 ;; *************** function _INTERRUPT_Initialize *****************
  1159 ;; Defined at:
  1160 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		None
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1174 ;;      Params:         0       0       0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0
  1177 ;;      Totals:         0       0       0       0       0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    4
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_SYSTEM_Initialize
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text7
  1189  000A72                     __ptext7:
  1190                           	opt stack 0
  1191  000A72                     _INTERRUPT_Initialize:
  1192                           	opt stack 25
  1193                           
  1194                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1195                           
  1196                           ;incstack = 0
  1197  000A72  9ED0               	bcf	4048,7,c	;volatile
  1198  000A74  0012               	return		;funcret
  1199  000A76                     __end_of_INTERRUPT_Initialize:
  1200                           	opt stack 0
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           intcon	equ	0xFF2
  1206                           intcon2	equ	0xFF1
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postinc2	equ	0xFDE
  1210                           fsr2h	equ	0xFDA
  1211                           fsr2l	equ	0xFD9
  1212                           status	equ	0xFD8
  1213                           
  1214 ;; *************** function _EXT_INT_Initialize *****************
  1215 ;; Defined at:
  1216 ;;		line 103 in file "mcc_generated_files/ext_int.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1230 ;;      Params:         0       0       0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    5
  1237 ;; This function calls:
  1238 ;;		_INT0_SetInterruptHandler
  1239 ;; This function is called by:
  1240 ;;		_SYSTEM_Initialize
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text8
  1245  000A28                     __ptext8:
  1246                           	opt stack 0
  1247  000A28                     _EXT_INT_Initialize:
  1248                           	opt stack 24
  1249                           
  1250                           ;ext_int.c: 112: (INTCONbits.INT0IF = 0);
  1251                           
  1252                           ;incstack = 0
  1253  000A28  92F2               	bcf	intcon,1,c	;volatile
  1254                           
  1255                           ;ext_int.c: 113: (INTCON2bits.INTEDG0 = 1);
  1256  000A2A  8CF1               	bsf	intcon2,6,c	;volatile
  1257                           
  1258                           ;ext_int.c: 115: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  1259  000A2C  0E76               	movlw	low _INT0_DefaultInterruptHandler
  1260  000A2E  6E1B               	movwf	INT0_SetInterruptHandler@InterruptHandler,c
  1261  000A30  0E0A               	movlw	high _INT0_DefaultInterruptHandler
  1262  000A32  6E1C               	movwf	INT0_SetInterruptHandler@InterruptHandler+1,c
  1263  000A34  EC34  F005         	call	_INT0_SetInterruptHandler	;wreg free
  1264                           
  1265                           ;ext_int.c: 116: (INTCONbits.INT0IE = 1);
  1266  000A38  88F2               	bsf	intcon,4,c	;volatile
  1267  000A3A  0012               	return		;funcret
  1268  000A3C                     __end_of_EXT_INT_Initialize:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           intcon	equ	0xFF2
  1275                           intcon2	equ	0xFF1
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           postinc2	equ	0xFDE
  1279                           fsr2h	equ	0xFDA
  1280                           fsr2l	equ	0xFD9
  1281                           status	equ	0xFD8
  1282                           
  1283 ;; *************** function _INT0_SetInterruptHandler *****************
  1284 ;; Defined at:
  1285 ;;		line 83 in file "mcc_generated_files/ext_int.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  InterruptHan    2   26[COMRAM] PTR FTN()void 
  1288 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1300 ;;      Params:         2       0       0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0
  1303 ;;      Totals:         2       0       0       0       0       0       0
  1304 ;;Total ram usage:        2 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    4
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_EXT_INT_Initialize
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text9
  1315  000A68                     __ptext9:
  1316                           	opt stack 0
  1317  000A68                     _INT0_SetInterruptHandler:
  1318                           	opt stack 24
  1319                           
  1320                           ;ext_int.c: 84: INT0_InterruptHandler = InterruptHandler;
  1321                           
  1322                           ;incstack = 0
  1323  000A68  C01B  F038         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1324  000A6C  C01C  F039         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1325  000A70  0012               	return		;funcret
  1326  000A72                     __end_of_INT0_SetInterruptHandler:
  1327                           	opt stack 0
  1328                           tblptru	equ	0xFF8
  1329                           tblptrh	equ	0xFF7
  1330                           tblptrl	equ	0xFF6
  1331                           tablat	equ	0xFF5
  1332                           intcon	equ	0xFF2
  1333                           intcon2	equ	0xFF1
  1334                           postinc0	equ	0xFEE
  1335                           wreg	equ	0xFE8
  1336                           postinc2	equ	0xFDE
  1337                           fsr2h	equ	0xFDA
  1338                           fsr2l	equ	0xFD9
  1339                           status	equ	0xFD8
  1340                           
  1341 ;; *************** function _CCP5_Initialize *****************
  1342 ;; Defined at:
  1343 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1357 ;;      Params:         0       0       0       0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0
  1360 ;;      Totals:         0       0       0       0       0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    4
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_SYSTEM_Initialize
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text10
  1372  000A3C                     __ptext10:
  1373                           	opt stack 0
  1374  000A3C                     _CCP5_Initialize:
  1375                           	opt stack 25
  1376                           
  1377                           ;ccp5.c: 60: CCP5CON = 0x00;
  1378                           
  1379                           ;incstack = 0
  1380  000A3C  0E00               	movlw	0
  1381  000A3E  010F               	movlb	15	; () banked
  1382  000A40  6F54               	movwf	84,b	;volatile
  1383                           
  1384                           ;ccp5.c: 62: CCPR5L = 0x00;
  1385  000A42  0E00               	movlw	0
  1386  000A44  6F55               	movwf	85,b	;volatile
  1387                           
  1388                           ;ccp5.c: 64: CCPR5H = 0x00;
  1389  000A46  0E00               	movlw	0
  1390  000A48  6F56               	movwf	86,b	;volatile
  1391                           
  1392                           ; BSR set to: 15
  1393  000A4A  0012               	return		;funcret
  1394  000A4C                     __end_of_CCP5_Initialize:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           intcon	equ	0xFF2
  1401                           intcon2	equ	0xFF1
  1402                           postinc0	equ	0xFEE
  1403                           wreg	equ	0xFE8
  1404                           postinc2	equ	0xFDE
  1405                           fsr2h	equ	0xFDA
  1406                           fsr2l	equ	0xFD9
  1407                           status	equ	0xFD8
  1408                           
  1409 ;; *************** function _ADC_Initialize *****************
  1410 ;; Defined at:
  1411 ;;		line 58 in file "mcc_generated_files/adc.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1425 ;;      Params:         0       0       0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0
  1428 ;;      Totals:         0       0       0       0       0       0       0
  1429 ;;Total ram usage:        0 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    4
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_SYSTEM_Initialize
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text11
  1441  000A12                     __ptext11:
  1442                           	opt stack 0
  1443  000A12                     _ADC_Initialize:
  1444                           	opt stack 25
  1445                           
  1446                           ;adc.c: 63: ADCON0 = 0x01;
  1447                           
  1448                           ; BSR set to: 15
  1449                           ;incstack = 0
  1450  000A12  0E01               	movlw	1
  1451  000A14  6EC2               	movwf	4034,c	;volatile
  1452                           
  1453                           ;adc.c: 66: ADCON1 = 0x00;
  1454  000A16  0E00               	movlw	0
  1455  000A18  6EC1               	movwf	4033,c	;volatile
  1456                           
  1457                           ;adc.c: 69: ADCON2 = 0x0D;
  1458  000A1A  0E0D               	movlw	13
  1459  000A1C  6EC0               	movwf	4032,c	;volatile
  1460                           
  1461                           ;adc.c: 72: ADRESL = 0x00;
  1462  000A1E  0E00               	movlw	0
  1463  000A20  6EC3               	movwf	4035,c	;volatile
  1464                           
  1465                           ;adc.c: 75: ADRESH = 0x00;
  1466  000A22  0E00               	movlw	0
  1467  000A24  6EC4               	movwf	4036,c	;volatile
  1468  000A26  0012               	return		;funcret
  1469  000A28                     __end_of_ADC_Initialize:
  1470                           	opt stack 0
  1471                           tblptru	equ	0xFF8
  1472                           tblptrh	equ	0xFF7
  1473                           tblptrl	equ	0xFF6
  1474                           tablat	equ	0xFF5
  1475                           intcon	equ	0xFF2
  1476                           intcon2	equ	0xFF1
  1477                           postinc0	equ	0xFEE
  1478                           wreg	equ	0xFE8
  1479                           postinc2	equ	0xFDE
  1480                           fsr2h	equ	0xFDA
  1481                           fsr2l	equ	0xFD9
  1482                           status	equ	0xFD8
  1483                           
  1484 ;; *************** function _SPI2_Exchange8bit *****************
  1485 ;; Defined at:
  1486 ;;		line 79 in file "mcc_generated_files/spi2.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  data            1    wreg     unsigned char 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  data            1   27[COMRAM] unsigned char 
  1491 ;;  dummyRead       1   26[COMRAM] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      unsigned char 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1501 ;;      Params:         0       0       0       0       0       0       0
  1502 ;;      Locals:         2       0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0
  1504 ;;      Totals:         2       0       0       0       0       0       0
  1505 ;;Total ram usage:        2 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    4
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;;		_SPI2_Exchange8bitBuffer
  1513 ;;		_sendOverSpi
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text12
  1518  0009F8                     __ptext12:
  1519                           	opt stack 0
  1520  0009F8                     _SPI2_Exchange8bit:
  1521                           	opt stack 26
  1522                           
  1523                           ;incstack = 0
  1524                           ;SPI2_Exchange8bit@data stored from wreg
  1525  0009F8  6E1C               	movwf	SPI2_Exchange8bit@data,c
  1526                           
  1527                           ;spi2.c: 81: uint8_t dummyRead = SSP2BUF;
  1528  0009FA  CF6F F01B          	movff	3951,SPI2_Exchange8bit@dummyRead	;volatile
  1529                           
  1530                           ;spi2.c: 84: SSP2CON1bits.WCOL = 0;
  1531  0009FE  9E6C               	bcf	3948,7,c	;volatile
  1532                           
  1533                           ;spi2.c: 86: SSP2BUF = data;
  1534  000A00  C01C  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
  1535  000A04                     
  1536                           ;spi2.c: 89: {
  1537  000A04  B06D               	btfsc	3949,0,c	;volatile
  1538  000A06  D003               	goto	u770
  1539  000A08  5037               	movf	_toRedrawLeds,w,c
  1540  000A0A  B4D8               	btfsc	status,2,c
  1541  000A0C  D7FB               	goto	l174
  1542  000A0E                     u770:
  1543                           
  1544                           ;spi2.c: 90: }
  1545                           ;spi2.c: 92: return (SSP2BUF);
  1546  000A0E  506F               	movf	3951,w,c	;volatile
  1547  000A10  0012               	return	
  1548  000A12                     __end_of_SPI2_Exchange8bit:
  1549                           	opt stack 0
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           intcon	equ	0xFF2
  1555                           intcon2	equ	0xFF1
  1556                           postinc0	equ	0xFEE
  1557                           wreg	equ	0xFE8
  1558                           postinc2	equ	0xFDE
  1559                           fsr2h	equ	0xFDA
  1560                           fsr2l	equ	0xFD9
  1561                           status	equ	0xFD8
  1562                           
  1563 ;; *************** function _INTERRUPT_InterruptManager *****************
  1564 ;; Defined at:
  1565 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1579 ;;      Params:         0       0       0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0
  1581 ;;      Temps:         18       0       0       0       0       0       0
  1582 ;;      Totals:        18       0       0       0       0       0       0
  1583 ;;Total ram usage:       18 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    3
  1586 ;; This function calls:
  1587 ;;		_INT0_ISR
  1588 ;; This function is called by:
  1589 ;;		Interrupt level 2
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	intcode
  1594  000008                     __pintcode:
  1595                           	opt stack 0
  1596  000008                     _INTERRUPT_InterruptManager:
  1597                           	opt stack 24
  1598                           
  1599                           ;incstack = 0
  1600  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1601  00000A  CFFA F009          	movff	pclath,??_INTERRUPT_InterruptManager
  1602  00000E  CFFB F00A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1603  000012  CFE9 F00B          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1604  000016  CFEA F00C          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1605  00001A  CFE1 F00D          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1606  00001E  CFE2 F00E          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1607  000022  CFD9 F00F          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1608  000026  CFDA F010          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1609  00002A  CFF3 F011          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1610  00002E  CFF4 F012          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1611  000032  CFF6 F013          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1612  000036  CFF7 F014          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1613  00003A  CFF8 F015          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1614  00003E  CFF5 F016          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1615  000042  C03A  F017         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1616  000046  C03B  F018         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1617  00004A  C03C  F019         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1618  00004E  C03D  F01A         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1619                           
  1620                           ;interrupt_manager.c: 60: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  1621  000052  B8F2               	btfsc	intcon,4,c	;volatile
  1622  000054  A2F2               	btfss	intcon,1,c	;volatile
  1623  000056  D002               	goto	i2l87
  1624                           
  1625                           ;interrupt_manager.c: 61: {
  1626                           ;interrupt_manager.c: 62: INT0_ISR();
  1627  000058  EC08  F004         	call	_INT0_ISR	;wreg free
  1628  00005C                     i2l87:
  1629                           
  1630                           ;interrupt_manager.c: 64: else
  1631                           ;interrupt_manager.c: 65: {
  1632  00005C  C01A  F03D         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1633  000060  C019  F03C         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1634  000064  C018  F03B         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1635  000068  C017  F03A         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1636  00006C  C016  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1637  000070  C015  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1638  000074  C014  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1639  000078  C013  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1640  00007C  C012  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1641  000080  C011  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1642  000084  C010  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1643  000088  C00F  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1644  00008C  C00E  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1645  000090  C00D  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1646  000094  C00C  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1647  000098  C00B  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1648  00009C  C00A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1649  0000A0  C009  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1650  0000A4  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1651  0000A6  0011               	retfie		f
  1652  0000A8                     __end_of_INTERRUPT_InterruptManager:
  1653                           	opt stack 0
  1654                           pclatu	equ	0xFFB
  1655                           pclath	equ	0xFFA
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           prodh	equ	0xFF4
  1661                           prodl	equ	0xFF3
  1662                           intcon	equ	0xFF2
  1663                           intcon2	equ	0xFF1
  1664                           postinc0	equ	0xFEE
  1665                           fsr0h	equ	0xFEA
  1666                           fsr0l	equ	0xFE9
  1667                           wreg	equ	0xFE8
  1668                           fsr1h	equ	0xFE2
  1669                           fsr1l	equ	0xFE1
  1670                           postinc2	equ	0xFDE
  1671                           fsr2h	equ	0xFDA
  1672                           fsr2l	equ	0xFD9
  1673                           status	equ	0xFD8
  1674                           
  1675 ;; *************** function _INT0_ISR *****************
  1676 ;; Defined at:
  1677 ;;		line 49 in file "mcc_generated_files/ext_int.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  i               2    6[COMRAM] int 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1691 ;;      Params:         0       0       0       0       0       0       0
  1692 ;;      Locals:         2       0       0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0
  1694 ;;      Totals:         2       0       0       0       0       0       0
  1695 ;;Total ram usage:        2 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    2
  1698 ;; This function calls:
  1699 ;;		_ADC_GetConversion
  1700 ;;		_INT0_CallBack
  1701 ;;		_setTCRT
  1702 ;; This function is called by:
  1703 ;;		_INTERRUPT_InterruptManager
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text14
  1708  000810                     __ptext14:
  1709                           	opt stack 0
  1710  000810                     _INT0_ISR:
  1711                           	opt stack 24
  1712                           
  1713                           ;ext_int.c: 52: for(int i = 0; i < 8; i++)
  1714                           
  1715                           ;incstack = 0
  1716  000810  0E00               	movlw	0
  1717  000812  6E08               	movwf	INT0_ISR@i+1,c
  1718  000814  0E00               	movlw	0
  1719  000816  6E07               	movwf	INT0_ISR@i,c
  1720  000818                     i2l1334:
  1721  000818  BE08               	btfsc	INT0_ISR@i+1,7,c
  1722  00081A  D006               	goto	i2l112
  1723  00081C  5008               	movf	INT0_ISR@i+1,w,c
  1724  00081E  E139               	bnz	i2l1350
  1725  000820  0E08               	movlw	8
  1726  000822  5C07               	subwf	INT0_ISR@i,w,c
  1727  000824  B0D8               	btfsc	status,0,c
  1728  000826  D035               	goto	i2u75_40
  1729  000828                     i2l112:
  1730                           
  1731                           ;ext_int.c: 53: {
  1732                           ;ext_int.c: 54: setTCRT(i, 1);
  1733  000828  C007  F001         	movff	INT0_ISR@i,setTCRT@pos
  1734  00082C  C008  F002         	movff	INT0_ISR@i+1,setTCRT@pos+1
  1735  000830  0E00               	movlw	0
  1736  000832  6E04               	movwf	setTCRT@value+1,c
  1737  000834  0E01               	movlw	1
  1738  000836  6E03               	movwf	setTCRT@value,c
  1739  000838  ECB5  F003         	call	_setTCRT	;wreg free
  1740                           
  1741                           ;ext_int.c: 55: _delay((unsigned long)((50)*(16000000/4000000.0)));
  1742  00083C  0E42               	movlw	66
  1743  00083E                     i2u93_47:
  1744  00083E  2EE8               	decfsz	wreg,f,c
  1745  000840  D7FE               	bra	i2u93_47
  1746  000842  D000               	nop2	
  1747                           
  1748                           ;ext_int.c: 56: tcrt[i] = ADC_GetConversion(AN_CHANNEL[i]);
  1749  000844  90D8               	bcf	status,0,c
  1750  000846  3407               	rlcf	INT0_ISR@i,w,c
  1751  000848  6EF6               	movwf	tblptrl,c
  1752  00084A  3408               	rlcf	INT0_ISR@i+1,w,c
  1753  00084C  6EF7               	movwf	tblptrh,c
  1754  00084E  0E01               	movlw	low _AN_CHANNEL
  1755  000850  26F6               	addwf	tblptrl,f,c
  1756  000852  0E06               	movlw	high _AN_CHANNEL
  1757  000854  22F7               	addwfc	tblptrh,f,c
  1758  000856                     	if	0	;There are less than 3 active tblptr bytes
  1759  000856                     	endif
  1760  000856  0008               	tblrd		*
  1761  000858  50F5               	movf	tablat,w,c
  1762  00085A  ECA3  F004         	call	_ADC_GetConversion
  1763  00085E  90D8               	bcf	status,0,c
  1764  000860  3407               	rlcf	INT0_ISR@i,w,c
  1765  000862  6ED9               	movwf	fsr2l,c
  1766  000864  3408               	rlcf	INT0_ISR@i+1,w,c
  1767  000866  6EDA               	movwf	fsr2h,c
  1768  000868  0E26               	movlw	low _tcrt
  1769  00086A  26D9               	addwf	fsr2l,f,c
  1770  00086C  0E00               	movlw	high _tcrt
  1771  00086E  22DA               	addwfc	fsr2h,f,c
  1772  000870  C001  FFDE         	movff	?_ADC_GetConversion,postinc2
  1773  000874  C002  FFDD         	movff	?_ADC_GetConversion+1,postdec2
  1774                           
  1775                           ;ext_int.c: 57: setTCRT(i, 0);
  1776  000878  C007  F001         	movff	INT0_ISR@i,setTCRT@pos
  1777  00087C  C008  F002         	movff	INT0_ISR@i+1,setTCRT@pos+1
  1778  000880  0E00               	movlw	0
  1779  000882  6E04               	movwf	setTCRT@value+1,c
  1780  000884  0E00               	movlw	0
  1781  000886  6E03               	movwf	setTCRT@value,c
  1782  000888  ECB5  F003         	call	_setTCRT	;wreg free
  1783  00088C  4A07               	infsnz	INT0_ISR@i,f,c
  1784  00088E  2A08               	incf	INT0_ISR@i+1,f,c
  1785  000890  D7C3               	goto	i2l1334
  1786  000892                     i2u75_40:
  1787  000892                     i2l1350:
  1788                           
  1789                           ;ext_int.c: 58: }
  1790                           ;ext_int.c: 59: toRedrawLeds = 1;
  1791  000892  0E01               	movlw	1
  1792  000894  6E37               	movwf	_toRedrawLeds,c
  1793                           
  1794                           ;ext_int.c: 62: (INTCONbits.INT0IF = 0);
  1795  000896  92F2               	bcf	intcon,1,c	;volatile
  1796                           
  1797                           ;ext_int.c: 65: INT0_CallBack();
  1798  000898  ECD0  F004         	call	_INT0_CallBack	;wreg free
  1799  00089C  0012               	return		;funcret
  1800  00089E                     __end_of_INT0_ISR:
  1801                           	opt stack 0
  1802                           pclatu	equ	0xFFB
  1803                           pclath	equ	0xFFA
  1804                           tblptru	equ	0xFF8
  1805                           tblptrh	equ	0xFF7
  1806                           tblptrl	equ	0xFF6
  1807                           tablat	equ	0xFF5
  1808                           prodh	equ	0xFF4
  1809                           prodl	equ	0xFF3
  1810                           intcon	equ	0xFF2
  1811                           intcon2	equ	0xFF1
  1812                           postinc0	equ	0xFEE
  1813                           fsr0h	equ	0xFEA
  1814                           fsr0l	equ	0xFE9
  1815                           wreg	equ	0xFE8
  1816                           fsr1h	equ	0xFE2
  1817                           fsr1l	equ	0xFE1
  1818                           postinc2	equ	0xFDE
  1819                           postdec2	equ	0xFDD
  1820                           fsr2h	equ	0xFDA
  1821                           fsr2l	equ	0xFD9
  1822                           status	equ	0xFD8
  1823                           
  1824 ;; *************** function _setTCRT *****************
  1825 ;; Defined at:
  1826 ;;		line 66 in file "main.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  pos             2    0[COMRAM] int 
  1829 ;;  value           2    2[COMRAM] int 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2, status,0
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1841 ;;      Params:         4       0       0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0       0       0
  1843 ;;      Temps:          2       0       0       0       0       0       0
  1844 ;;      Totals:         6       0       0       0       0       0       0
  1845 ;;Total ram usage:        6 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_INT0_ISR
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text15
  1855  00076A                     __ptext15:
  1856                           	opt stack 0
  1857  00076A                     _setTCRT:
  1858                           	opt stack 25
  1859                           
  1860                           ;main.c: 68: switch(pos)
  1861                           
  1862                           ;incstack = 0
  1863  00076A  D030               	goto	i2l250
  1864  00076C                     i2l251:
  1865                           
  1866                           ;main.c: 71: LATCbits.LATC5 = value;
  1867  00076C  B003               	btfsc	setTCRT@value,0,c
  1868  00076E  D002               	bra	i2u48_45
  1869  000770  9A8B               	bcf	3979,5,c	;volatile
  1870  000772  D001               	bra	i2u48_46
  1871  000774                     i2u48_45:
  1872  000774  8A8B               	bsf	3979,5,c	;volatile
  1873  000776                     i2u48_46:
  1874                           
  1875                           ;main.c: 72: break;
  1876  000776  0012               	return	
  1877  000778                     i2l253:
  1878                           
  1879                           ;main.c: 74: LATDbits.LATD6 = value;
  1880  000778  B003               	btfsc	setTCRT@value,0,c
  1881  00077A  D002               	bra	i2u49_45
  1882  00077C  9C8C               	bcf	3980,6,c	;volatile
  1883  00077E  D001               	bra	i2u49_46
  1884  000780                     i2u49_45:
  1885  000780  8C8C               	bsf	3980,6,c	;volatile
  1886  000782                     i2u49_46:
  1887                           
  1888                           ;main.c: 75: break;
  1889  000782  0012               	return	
  1890  000784                     i2l254:
  1891                           
  1892                           ;main.c: 77: LATBbits.LATB2 = value;
  1893  000784  B003               	btfsc	setTCRT@value,0,c
  1894  000786  D002               	bra	i2u50_45
  1895  000788  948A               	bcf	3978,2,c	;volatile
  1896  00078A  D001               	bra	i2u50_46
  1897  00078C                     i2u50_45:
  1898  00078C  848A               	bsf	3978,2,c	;volatile
  1899  00078E                     i2u50_46:
  1900                           
  1901                           ;main.c: 78: break;
  1902  00078E  0012               	return	
  1903  000790                     i2l255:
  1904                           
  1905                           ;main.c: 80: LATBbits.LATB4 = value;
  1906  000790  B003               	btfsc	setTCRT@value,0,c
  1907  000792  D002               	bra	i2u51_45
  1908  000794  988A               	bcf	3978,4,c	;volatile
  1909  000796  D001               	bra	i2u51_46
  1910  000798                     i2u51_45:
  1911  000798  888A               	bsf	3978,4,c	;volatile
  1912  00079A                     i2u51_46:
  1913                           
  1914                           ;main.c: 81: break;
  1915  00079A  0012               	return	
  1916  00079C                     i2l256:
  1917                           
  1918                           ;main.c: 83: LATAbits.LATA2 = value;
  1919  00079C  B003               	btfsc	setTCRT@value,0,c
  1920  00079E  D002               	bra	i2u52_45
  1921  0007A0  9489               	bcf	3977,2,c	;volatile
  1922  0007A2  D001               	bra	i2u52_46
  1923  0007A4                     i2u52_45:
  1924  0007A4  8489               	bsf	3977,2,c	;volatile
  1925  0007A6                     i2u52_46:
  1926                           
  1927                           ;main.c: 84: break;
  1928  0007A6  0012               	return	
  1929  0007A8                     i2l257:
  1930                           
  1931                           ;main.c: 86: LATAbits.LATA4 = value;
  1932  0007A8  B003               	btfsc	setTCRT@value,0,c
  1933  0007AA  D002               	bra	i2u53_45
  1934  0007AC  9889               	bcf	3977,4,c	;volatile
  1935  0007AE  D001               	bra	i2u53_46
  1936  0007B0                     i2u53_45:
  1937  0007B0  8889               	bsf	3977,4,c	;volatile
  1938  0007B2                     i2u53_46:
  1939                           
  1940                           ;main.c: 87: break;
  1941  0007B2  0012               	return	
  1942  0007B4                     i2l258:
  1943                           
  1944                           ;main.c: 89: LATEbits.LATE1 = value;
  1945  0007B4  B003               	btfsc	setTCRT@value,0,c
  1946  0007B6  D002               	bra	i2u54_45
  1947  0007B8  928D               	bcf	3981,1,c	;volatile
  1948  0007BA  D001               	bra	i2u54_46
  1949  0007BC                     i2u54_45:
  1950  0007BC  828D               	bsf	3981,1,c	;volatile
  1951  0007BE                     i2u54_46:
  1952                           
  1953                           ;main.c: 90: break;
  1954  0007BE  0012               	return	
  1955  0007C0                     i2l259:
  1956                           
  1957                           ;main.c: 92: LATCbits.LATC2 = value;
  1958  0007C0  B003               	btfsc	setTCRT@value,0,c
  1959  0007C2  D002               	bra	i2u55_45
  1960  0007C4  948B               	bcf	3979,2,c	;volatile
  1961  0007C6  D001               	bra	i2u55_46
  1962  0007C8                     i2u55_45:
  1963  0007C8  848B               	bsf	3979,2,c	;volatile
  1964  0007CA                     i2u55_46:
  1965                           
  1966                           ;main.c: 94: }
  1967                           
  1968                           ;main.c: 93: break;
  1969  0007CA  0012               	return	
  1970  0007CC                     i2l250:
  1971  0007CC  C001  F005         	movff	setTCRT@pos,??_setTCRT
  1972  0007D0  C002  F006         	movff	setTCRT@pos+1,??_setTCRT+1
  1973                           
  1974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1975                           ; Switch size 1, requested type "space"
  1976                           ; Number of cases is 1, Range of values is 0 to 0
  1977                           ; switch strategies available:
  1978                           ; Name         Instructions Cycles
  1979                           ; simple_byte            4     3 (average)
  1980                           ;	Chosen strategy is simple_byte
  1981  0007D4  5006               	movf	??_setTCRT+1,w,c
  1982  0007D6  0A00               	xorlw	0	; case 0
  1983  0007D8  A4D8               	btfss	status,2,c
  1984  0007DA  0012               	return	
  1985                           
  1986                           ; Switch size 1, requested type "space"
  1987                           ; Number of cases is 8, Range of values is 0 to 7
  1988                           ; switch strategies available:
  1989                           ; Name         Instructions Cycles
  1990                           ; simple_byte           25    13 (average)
  1991                           ;	Chosen strategy is simple_byte
  1992  0007DC  5005               	movf	??_setTCRT,w,c
  1993  0007DE  0A00               	xorlw	0	; case 0
  1994  0007E0  B4D8               	btfsc	status,2,c
  1995  0007E2  D7C4               	goto	i2l251
  1996  0007E4  0A01               	xorlw	1	; case 1
  1997  0007E6  B4D8               	btfsc	status,2,c
  1998  0007E8  D7C7               	goto	i2l253
  1999  0007EA  0A03               	xorlw	3	; case 2
  2000  0007EC  B4D8               	btfsc	status,2,c
  2001  0007EE  D7CA               	goto	i2l254
  2002  0007F0  0A01               	xorlw	1	; case 3
  2003  0007F2  B4D8               	btfsc	status,2,c
  2004  0007F4  D7CD               	goto	i2l255
  2005  0007F6  0A07               	xorlw	7	; case 4
  2006  0007F8  B4D8               	btfsc	status,2,c
  2007  0007FA  D7D0               	goto	i2l256
  2008  0007FC  0A01               	xorlw	1	; case 5
  2009  0007FE  B4D8               	btfsc	status,2,c
  2010  000800  D7D3               	goto	i2l257
  2011  000802  0A03               	xorlw	3	; case 6
  2012  000804  B4D8               	btfsc	status,2,c
  2013  000806  D7D6               	goto	i2l258
  2014  000808  0A01               	xorlw	1	; case 7
  2015  00080A  A4D8               	btfss	status,2,c
  2016  00080C  0012               	return	
  2017  00080E  D7D8               	goto	i2l259
  2018  000810                     __end_of_setTCRT:
  2019                           	opt stack 0
  2020                           pclatu	equ	0xFFB
  2021                           pclath	equ	0xFFA
  2022                           tblptru	equ	0xFF8
  2023                           tblptrh	equ	0xFF7
  2024                           tblptrl	equ	0xFF6
  2025                           tablat	equ	0xFF5
  2026                           prodh	equ	0xFF4
  2027                           prodl	equ	0xFF3
  2028                           intcon	equ	0xFF2
  2029                           intcon2	equ	0xFF1
  2030                           postinc0	equ	0xFEE
  2031                           fsr0h	equ	0xFEA
  2032                           fsr0l	equ	0xFE9
  2033                           wreg	equ	0xFE8
  2034                           fsr1h	equ	0xFE2
  2035                           fsr1l	equ	0xFE1
  2036                           postinc2	equ	0xFDE
  2037                           postdec2	equ	0xFDD
  2038                           fsr2h	equ	0xFDA
  2039                           fsr2l	equ	0xFD9
  2040                           status	equ	0xFD8
  2041                           
  2042 ;; *************** function _INT0_CallBack *****************
  2043 ;; Defined at:
  2044 ;;		line 71 in file "mcc_generated_files/ext_int.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2058 ;;      Params:         0       0       0       0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0
  2061 ;;      Totals:         0       0       0       0       0       0       0
  2062 ;;Total ram usage:        0 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    1
  2065 ;; This function calls:
  2066 ;;		Absolute function
  2067 ;;		_INT0_DefaultInterruptHandler
  2068 ;; This function is called by:
  2069 ;;		_INT0_ISR
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text16
  2074  0009A0                     __ptext16:
  2075                           	opt stack 0
  2076  0009A0                     _INT0_CallBack:
  2077                           	opt stack 24
  2078                           
  2079                           ;ext_int.c: 74: if(INT0_InterruptHandler)
  2080                           
  2081                           ;incstack = 0
  2082  0009A0  5038               	movf	_INT0_InterruptHandler,w,c
  2083  0009A2  1039               	iorwf	_INT0_InterruptHandler+1,w,c
  2084  0009A4  B4D8               	btfsc	status,2,c
  2085  0009A6  0012               	return	
  2086                           
  2087                           ;ext_int.c: 75: {
  2088                           ;ext_int.c: 76: INT0_InterruptHandler();
  2089  0009A8  D801               	call	i2u57_48
  2090  0009AA  0012               	return	
  2091  0009AC                     i2u57_48:
  2092  0009AC  0005               	push	
  2093  0009AE  6EFA               	movwf	pclath,c
  2094  0009B0  5038               	movf	_INT0_InterruptHandler,w,c
  2095  0009B2  6EFD               	movwf	tosl,c
  2096  0009B4  5039               	movf	_INT0_InterruptHandler+1,w,c
  2097  0009B6  6EFE               	movwf	tosh,c
  2098  0009B8  50F8               	movf	tblptru,w,c
  2099  0009BA  6EFF               	movwf	tosu,c
  2100  0009BC  50FA               	movf	pclath,w,c
  2101  0009BE  0012               	return		;indir
  2102  0009C0                     __end_of_INT0_CallBack:
  2103                           	opt stack 0
  2104                           tosu	equ	0xFFF
  2105                           tosh	equ	0xFFE
  2106                           tosl	equ	0xFFD
  2107                           pclatu	equ	0xFFB
  2108                           pclath	equ	0xFFA
  2109                           tblptru	equ	0xFF8
  2110                           tblptrh	equ	0xFF7
  2111                           tblptrl	equ	0xFF6
  2112                           tablat	equ	0xFF5
  2113                           prodh	equ	0xFF4
  2114                           prodl	equ	0xFF3
  2115                           intcon	equ	0xFF2
  2116                           intcon2	equ	0xFF1
  2117                           postinc0	equ	0xFEE
  2118                           fsr0h	equ	0xFEA
  2119                           fsr0l	equ	0xFE9
  2120                           wreg	equ	0xFE8
  2121                           fsr1h	equ	0xFE2
  2122                           fsr1l	equ	0xFE1
  2123                           postinc2	equ	0xFDE
  2124                           postdec2	equ	0xFDD
  2125                           fsr2h	equ	0xFDA
  2126                           fsr2l	equ	0xFD9
  2127                           status	equ	0xFD8
  2128                           
  2129 ;; *************** function _INT0_DefaultInterruptHandler *****************
  2130 ;; Defined at:
  2131 ;;		line 90 in file "mcc_generated_files/ext_int.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		None
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2145 ;;      Params:         0       0       0       0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0
  2148 ;;      Totals:         0       0       0       0       0       0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_EXT_INT_Initialize
  2155 ;;		_INT0_CallBack
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text17
  2160  000A76                     __ptext17:
  2161                           	opt stack 0
  2162  000A76                     _INT0_DefaultInterruptHandler:
  2163                           	opt stack 24
  2164                           
  2165                           ;incstack = 0
  2166  000A76  0012               	return		;funcret
  2167  000A78                     __end_of_INT0_DefaultInterruptHandler:
  2168                           	opt stack 0
  2169                           tosu	equ	0xFFF
  2170                           tosh	equ	0xFFE
  2171                           tosl	equ	0xFFD
  2172                           pclatu	equ	0xFFB
  2173                           pclath	equ	0xFFA
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           prodh	equ	0xFF4
  2179                           prodl	equ	0xFF3
  2180                           intcon	equ	0xFF2
  2181                           intcon2	equ	0xFF1
  2182                           postinc0	equ	0xFEE
  2183                           fsr0h	equ	0xFEA
  2184                           fsr0l	equ	0xFE9
  2185                           wreg	equ	0xFE8
  2186                           fsr1h	equ	0xFE2
  2187                           fsr1l	equ	0xFE1
  2188                           postinc2	equ	0xFDE
  2189                           postdec2	equ	0xFDD
  2190                           fsr2h	equ	0xFDA
  2191                           fsr2l	equ	0xFD9
  2192                           status	equ	0xFD8
  2193                           
  2194 ;; *************** function _ADC_GetConversion *****************
  2195 ;; Defined at:
  2196 ;;		line 106 in file "mcc_generated_files/adc.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  channel         1    wreg     enum E6975
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  channel         1    4[COMRAM] enum E6975
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  2    0[COMRAM] unsigned int 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2210 ;;      Params:         2       0       0       0       0       0       0
  2211 ;;      Locals:         1       0       0       0       0       0       0
  2212 ;;      Temps:          2       0       0       0       0       0       0
  2213 ;;      Totals:         5       0       0       0       0       0       0
  2214 ;;Total ram usage:        5 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_INT0_ISR
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text18
  2224  000946                     __ptext18:
  2225                           	opt stack 0
  2226  000946                     _ADC_GetConversion:
  2227                           	opt stack 25
  2228                           
  2229                           ;incstack = 0
  2230                           ;ADC_GetConversion@channel stored from wreg
  2231  000946  6E05               	movwf	ADC_GetConversion@channel,c
  2232                           
  2233                           ;adc.c: 109: ADCON0bits.CHS = channel;
  2234  000948  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2235  00094C  4603               	rlncf	??_ADC_GetConversion,f,c
  2236  00094E  4603               	rlncf	??_ADC_GetConversion,f,c
  2237  000950  50C2               	movf	4034,w,c	;volatile
  2238  000952  1803               	xorwf	??_ADC_GetConversion,w,c
  2239  000954  0B83               	andlw	-125
  2240  000956  1803               	xorwf	??_ADC_GetConversion,w,c
  2241  000958  6EC2               	movwf	4034,c	;volatile
  2242                           
  2243                           ;adc.c: 112: ADCON0bits.ADON = 1;
  2244  00095A  80C2               	bsf	4034,0,c	;volatile
  2245                           
  2246                           ;adc.c: 115: ADCON0bits.GO_nDONE = 1;
  2247  00095C  82C2               	bsf	4034,1,c	;volatile
  2248  00095E                     
  2249                           ;adc.c: 119: {
  2250  00095E  B2C2               	btfsc	4034,1,c	;volatile
  2251  000960  D7FE               	goto	i2l31
  2252                           
  2253                           ;adc.c: 120: }
  2254                           ;adc.c: 123: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2255  000962  50C4               	movf	4036,w,c	;volatile
  2256  000964  6E04               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  2257  000966  6A03               	clrf	??_ADC_GetConversion& (0+255),c
  2258  000968  50C3               	movf	4035,w,c	;volatile
  2259  00096A  2403               	addwf	??_ADC_GetConversion,w,c
  2260  00096C  6E01               	movwf	?_ADC_GetConversion,c
  2261  00096E  0E00               	movlw	0
  2262  000970  2004               	addwfc	??_ADC_GetConversion+1,w,c
  2263  000972  6E02               	movwf	?_ADC_GetConversion+1,c
  2264  000974  0012               	return	
  2265  000976                     __end_of_ADC_GetConversion:
  2266                           	opt stack 0
  2267                           tosu	equ	0xFFF
  2268                           tosh	equ	0xFFE
  2269                           tosl	equ	0xFFD
  2270                           pclatu	equ	0xFFB
  2271                           pclath	equ	0xFFA
  2272                           tblptru	equ	0xFF8
  2273                           tblptrh	equ	0xFF7
  2274                           tblptrl	equ	0xFF6
  2275                           tablat	equ	0xFF5
  2276                           prodh	equ	0xFF4
  2277                           prodl	equ	0xFF3
  2278                           intcon	equ	0xFF2
  2279                           intcon2	equ	0xFF1
  2280                           postinc0	equ	0xFEE
  2281                           fsr0h	equ	0xFEA
  2282                           fsr0l	equ	0xFE9
  2283                           wreg	equ	0xFE8
  2284                           fsr1h	equ	0xFE2
  2285                           fsr1l	equ	0xFE1
  2286                           postinc2	equ	0xFDE
  2287                           postdec2	equ	0xFDD
  2288                           fsr2h	equ	0xFDA
  2289                           fsr2l	equ	0xFD9
  2290                           status	equ	0xFD8
  2291                           tosu	equ	0xFFF
  2292                           tosh	equ	0xFFE
  2293                           tosl	equ	0xFFD
  2294                           pclatu	equ	0xFFB
  2295                           pclath	equ	0xFFA
  2296                           tblptru	equ	0xFF8
  2297                           tblptrh	equ	0xFF7
  2298                           tblptrl	equ	0xFF6
  2299                           tablat	equ	0xFF5
  2300                           prodh	equ	0xFF4
  2301                           prodl	equ	0xFF3
  2302                           intcon	equ	0xFF2
  2303                           intcon2	equ	0xFF1
  2304                           postinc0	equ	0xFEE
  2305                           fsr0h	equ	0xFEA
  2306                           fsr0l	equ	0xFE9
  2307                           wreg	equ	0xFE8
  2308                           fsr1h	equ	0xFE2
  2309                           fsr1l	equ	0xFE1
  2310                           postinc2	equ	0xFDE
  2311                           postdec2	equ	0xFDD
  2312                           fsr2h	equ	0xFDA
  2313                           fsr2l	equ	0xFD9
  2314                           status	equ	0xFD8
  2315                           
  2316                           	psect	text19
  2317  000000                     __ptext19:
  2318                           	opt stack 0
  2319                           tosu	equ	0xFFF
  2320                           tosh	equ	0xFFE
  2321                           tosl	equ	0xFFD
  2322                           pclatu	equ	0xFFB
  2323                           pclath	equ	0xFFA
  2324                           tblptru	equ	0xFF8
  2325                           tblptrh	equ	0xFF7
  2326                           tblptrl	equ	0xFF6
  2327                           tablat	equ	0xFF5
  2328                           prodh	equ	0xFF4
  2329                           prodl	equ	0xFF3
  2330                           intcon	equ	0xFF2
  2331                           intcon2	equ	0xFF1
  2332                           postinc0	equ	0xFEE
  2333                           fsr0h	equ	0xFEA
  2334                           fsr0l	equ	0xFE9
  2335                           wreg	equ	0xFE8
  2336                           fsr1h	equ	0xFE2
  2337                           fsr1l	equ	0xFE1
  2338                           postinc2	equ	0xFDE
  2339                           postdec2	equ	0xFDD
  2340                           fsr2h	equ	0xFDA
  2341                           fsr2l	equ	0xFD9
  2342                           status	equ	0xFD8
  2343                           
  2344                           	psect	rparam
  2345  0000                     tosu	equ	0xFFF
  2346                           tosh	equ	0xFFE
  2347                           tosl	equ	0xFFD
  2348                           pclatu	equ	0xFFB
  2349                           pclath	equ	0xFFA
  2350                           tblptru	equ	0xFF8
  2351                           tblptrh	equ	0xFF7
  2352                           tblptrl	equ	0xFF6
  2353                           tablat	equ	0xFF5
  2354                           prodh	equ	0xFF4
  2355                           prodl	equ	0xFF3
  2356                           intcon	equ	0xFF2
  2357                           intcon2	equ	0xFF1
  2358                           postinc0	equ	0xFEE
  2359                           fsr0h	equ	0xFEA
  2360                           fsr0l	equ	0xFE9
  2361                           wreg	equ	0xFE8
  2362                           fsr1h	equ	0xFE2
  2363                           fsr1l	equ	0xFE1
  2364                           postinc2	equ	0xFDE
  2365                           postdec2	equ	0xFDD
  2366                           fsr2h	equ	0xFDA
  2367                           fsr2l	equ	0xFD9
  2368                           status	equ	0xFD8
  2369                           
  2370                           	psect	temp
  2371  00003A                     btemp:
  2372                           	opt stack 0
  2373  00003A                     	ds	1
  2374  0000                     int$flags	set	btemp
  2375  0000                     wtemp6	set	btemp+1
  2376                           tosu	equ	0xFFF
  2377                           tosh	equ	0xFFE
  2378                           tosl	equ	0xFFD
  2379                           pclatu	equ	0xFFB
  2380                           pclath	equ	0xFFA
  2381                           tblptru	equ	0xFF8
  2382                           tblptrh	equ	0xFF7
  2383                           tblptrl	equ	0xFF6
  2384                           tablat	equ	0xFF5
  2385                           prodh	equ	0xFF4
  2386                           prodl	equ	0xFF3
  2387                           intcon	equ	0xFF2
  2388                           intcon2	equ	0xFF1
  2389                           postinc0	equ	0xFEE
  2390                           fsr0h	equ	0xFEA
  2391                           fsr0l	equ	0xFE9
  2392                           wreg	equ	0xFE8
  2393                           fsr1h	equ	0xFE2
  2394                           fsr1l	equ	0xFE1
  2395                           postinc2	equ	0xFDE
  2396                           postdec2	equ	0xFDD
  2397                           fsr2h	equ	0xFDA
  2398                           fsr2l	equ	0xFD9
  2399                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        0
    BSS         18
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      57
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_drawToLeds
    _drawToLeds->_setLed
    _EXT_INT_Initialize->_INT0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_INT0_ISR
    _INT0_ISR->_setTCRT

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     738
                                             36 COMRAM     1     1      0
                     _ADC_Initialize
             _PIN_MANAGER_Initialize
                  _SPI2_Exchange8bit
                  _SYSTEM_Initialize
                         _drawToLeds
 ---------------------------------------------------------------------------------
 (1) _drawToLeds                                           4     4      0     616
                                             32 COMRAM     4     4      0
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               6     2      4     526
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Exchange8bit                                    2     2      0      23
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0     658
                                              8 COMRAM    18    18      0
                           _INT0_ISR
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             2     2      0     658
                                              6 COMRAM     2     2      0
                  _ADC_GetConversion
                      _INT0_CallBack
                            _setTCRT
 ---------------------------------------------------------------------------------
 (6) _setTCRT                                              6     2      4     502
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _INT0_CallBack                                        0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _PIN_MANAGER_Initialize
   _SPI2_Exchange8bit
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
   _drawToLeds
     _setLed

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _ADC_GetConversion
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
     _setTCRT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      39       1       60.6%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39       9        0.0%
DATA                 0      0      39      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Dec 28 20:38:23 2017

                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l304 0986  
                                     l305 0998                                       l306 0990  
                                     l174 0A04                                       l263 0726  
                                     l271 065A                                       l280 06C0  
                                     l272 0674                                       l264 0616  
                                     l281 06DA                                       l265 0630  
                                     l274 067C                                       l283 06E2  
                                     l275 0696                                       l284 06FC  
                                     l268 0638                                       l292 08BA  
                                     l277 069E                                       l269 0652  
                                     l286 0704                                       l278 06B8  
                                     l294 0900                                       l287 071E  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                                     u605 0640                                       u606 0642  
                                     u800 08F2                                       u705 06EA  
                                     u625 0662                                       u706 06EC  
                                     u626 0664                                       u725 070C  
                                     u645 0684                                       u726 070E  
                                     u646 0686                                       u665 06A6  
                                     u585 061E                                       u770 0A0E  
                                     u666 06A8                                       u586 0620  
                                     u685 06C8                                       u686 06CA  
                                     u790 08F0                ??_INT0_SetInterruptHandler 001D  
                             drawToLeds@i 0023                                       tosl 000FFD  
                                     wreg 000FE8                             _INT0_CallBack 09A0  
                         _CCP5_Initialize 0A3C                                      l1382 08AA  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      i2l31 095E  
                                    i2l87 005C                                      _WPUB 000F61  
                                    _main 0976                                      _tcrt 0026  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 003A                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A8                             __CFG_IESO$OFF 000000  
                            ___param_bank 000000                          __end_of_INT0_ISR 089E  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 0A68  
                                   ?_main 0001                            __CFG_DEBUG$OFF 000000  
                                   i2l112 0828                                     i2l250 07CC  
                                   i2l251 076C                                     i2l253 0778  
                                   i2l254 0784                                     i2l255 0790  
                                   i2l256 079C                                     i2l257 07A8  
                                   i2l258 07B4                                     i2l259 07C0  
                                   _TRISA 000F92                                     _TRISB 000F93  
                          ?_INT0_CallBack 0001                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                          __end_of_TRESHOLD 0613  
                         __end_of_setTCRT 0810                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                                     wtemp6 003B  
                          __CFG_HFOFST$ON 000000                            __CFG_PBADEN$ON 000000  
                         __initialization 09DE                         _SPI2_Exchange8bit 09F8  
                            __end_of_main 09A0                        ?_SPI2_Exchange8bit 0001  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0025  
                 __end_of_CCP5_Initialize 0A4C                             __activetblptr 000002  
                __size_of_SPI2_Initialize 000E                       ??_SPI2_Exchange8bit 001B  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                                  i2l1350 0892                                    i2l1334 0818  
                          __CFG_WDTEN$OFF 000000                                    _OSCCON 000FD3  
               __end_of_SPI2_Exchange8bit 0A12                            __CFG_XINST$OFF 000000  
                          __CFG_STVREN$ON 000000                                    clear_0 09E4  
                                  _setLed 0614                           ??_INT0_CallBack 0001  
                               ??_setTCRT 0005                              __mediumconst 0000  
                   main@ledPositionToSend 0025                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                ADC_GetConversion@channel 0005  INT0_SetInterruptHandler@InterruptHandler 001B  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 09C0  
                              __accesstop 0060                   __end_of__initialization 09EA  
                               ?_INT0_ISR 0001                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                                 INT0_ISR@i 0007  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 001D  
                      __end_of_AN_CHANNEL 0611                          ?_CCP5_Initialize 0001  
             __size_of_EXT_INT_Initialize 0014                 __end_of_SYSTEM_Initialize 09DE  
                       ??_SPI2_Initialize 001B                           __CFG_PLLCFG$OFF 000000  
                             setLed@value 001D                     _INT0_InterruptHandler 0038  
                              ??_INT0_ISR 0007                                __pnvCOMRAM 0038  
              __size_of_SPI2_Exchange8bit 001A                        __CFG_CCP2MX$PORTC1 000000  
                      __CFG_CCP3MX$PORTB5 000000                                   _CCP5CON 000F54  
                                 ?_setLed 001B                   __size_of_ADC_Initialize 0016  
                                 _OSCCON2 000FD2                                _drawToLeds 089E  
                                 i2u50_45 078C                                   i2u50_46 078E  
                                 i2u51_45 0798                                   i2u51_46 079A  
                                 i2u52_45 07A4                                   i2u52_46 07A6  
                                 i2u53_45 07B0                                   i2u53_46 07B2  
                                 _OSCTUNE 000F9B                                   i2u54_45 07BC  
                                 i2u54_46 07BE                                   i2u55_45 07C8  
                                 i2u55_46 07CA                                   i2u48_45 0774  
                                 i2u48_46 0776                                   i2u49_45 0780  
                                 i2u49_46 0782                                   i2u57_48 09AC  
                                 i2u75_40 0892                                   i2u93_47 083E  
                                 _SSP2BUF 000F6F         __size_of_INT0_SetInterruptHandler 000A  
               ?_INT0_SetInterruptHandler 001B                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                            __psmallconst 0600                                   __pcinit 09DE  
                                 __ramtop 0600                           __size_of_setLed 0156  
                                 __ptext0 0976                                   __ptext1 089E  
                                 __ptext2 0614                                   __ptext3 09C0  
                                 __ptext4 0A4C                                   __ptext5 0902  
                                 __ptext6 0A5A                                   __ptext7 0A72  
                                 __ptext8 0A28                                   __ptext9 0A68  
                   _OSCILLATOR_Initialize 0A5A                                   _setTCRT 076A  
                ??_PIN_MANAGER_Initialize 001B                __size_of_SYSTEM_Initialize 001E  
                    end_of_initialization 09EA                             __Lmediumconst 0000  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                               ?_drawToLeds 0001  
                            setTCRT@value 0003                     SPI2_Exchange8bit@data 001C  
                       __size_of_INT0_ISR 008E              __end_of_INTERRUPT_Initialize 0A76  
    __end_of_INT0_DefaultInterruptHandler 0A78     __size_of_INT0_DefaultInterruptHandler 0002  
            _INT0_DefaultInterruptHandler 0A76                            _ADC_Initialize 0A12  
                  ?_OSCILLATOR_Initialize 0001                           _SPI2_Initialize 0A4C  
                          __end_of_setLed 076A                     __end_of_INT0_CallBack 09C0  
                     start_initialization 09DE           __size_of_PIN_MANAGER_Initialize 0044  
                     __size_of_drawToLeds 0064                    __end_of_ADC_Initialize 0A28  
              __end_of_EXT_INT_Initialize 0A3C                                  ??_setLed 001F  
           ?_INT0_DefaultInterruptHandler 0001                               __pbssCOMRAM 0026  
                              setTCRT@pos 0001          __end_of_INT0_SetInterruptHandler 0A72  
                __size_of_CCP5_Initialize 0010                    _PIN_MANAGER_Initialize 0902  
                               __pintcode 0008                   __end_of_SPI2_Initialize 0A5A  
                         ?_ADC_Initialize 0001                                 _ledValues 0036  
            ??_INTERRUPT_InterruptManager 0009                          __CFG_PRICLKEN$ON 000000  
                             __smallconst 0600                                  ?_setTCRT 0001  
                    _INTERRUPT_Initialize 0A72                                  _INT0_ISR 0810  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                                _LATEbits 000F8D       __size_of_INTERRUPT_InterruptManager 00A0  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _SSP2CON1 000F6C                                  _SSP2CON3 000F69  
                                _SSP2STAT 000F6D                                  _TRESHOLD 0611  
                              _ADCON0bits 000FC2                              ??_drawToLeds 0021  
          ??_INT0_DefaultInterruptHandler 0001                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                  _INT0_SetInterruptHandler 0A68  
                       ??_CCP5_Initialize 001B                                  __Hrparam 0000  
                            _toRedrawLeds 0037                                  __Lrparam 0000  
                       _ADC_GetConversion 0946                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTD2 000000                        __end_of_drawToLeds 0902  
                        ?_SPI2_Initialize 0001                   ??_OSCILLATOR_Initialize 001B  
                      ?_ADC_GetConversion 0001                       ??_ADC_GetConversion 0003  
                               setLed@pos 001B                          __size_of_setTCRT 00A6  
                              _AN_CHANNEL 0601                                  __ptext10 0A3C  
                                __ptext11 0A12                                  __ptext12 09F8  
                                __ptext14 0810                                  __ptext15 076A  
                                __ptext16 09A0                                  __ptext17 0A76  
                                __ptext18 0946                                  __ptext19 0000  
                            _SSP2CON1bits 000F6C                             __size_of_main 002A  
               __end_of_ADC_GetConversion 0976                                  int$flags 003A  
      __end_of_INTERRUPT_InterruptManager 00A8                _INTERRUPT_InterruptManager 0008  
                            _SSP2STATbits 000F6D                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 001B                        _EXT_INT_Initialize 0A28  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
                     ?_EXT_INT_Initialize 0001                          ??_ADC_Initialize 001B  
                  __size_of_INT0_CallBack 0020                      ??_EXT_INT_Initialize 001D  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 0946  
                       __CFG_FOSC$INTIO67 000000                __size_of_ADC_GetConversion 0030  
              SPI2_Exchange8bit@dummyRead 001B  
