

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Nov 26 20:31:00 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 1.44
    33                           ; Generated 14/09/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F45K22 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	smallconst
    68  000600                     __psmallconst:
    69                           	opt stack 0
    70  000600  00                 	db	0
    71  000601                     _AN_CHANNEL:
    72                           	opt stack 0
    73  000601  0012               	dw	18
    74  000603  001B               	dw	27
    75  000605  0009               	dw	9
    76  000607  000D               	dw	13
    77  000609  0001               	dw	1
    78  00060B  0004               	dw	4
    79  00060D  0007               	dw	7
    80  00060F  000F               	dw	15
    81  000611                     __end_of_AN_CHANNEL:
    82                           	opt stack 0
    83  000611                     _TRESHOLD:
    84                           	opt stack 0
    85  000611  8000               	dw	32768
    86  000613                     __end_of_TRESHOLD:
    87                           	opt stack 0
    88  000613  00                 	db	0	; dummy byte at the end
    89  0000                     
    90                           	psect	nvCOMRAM
    91  000035                     __pnvCOMRAM:
    92                           	opt stack 0
    93  000035                     _INT0_InterruptHandler:
    94                           	opt stack 0
    95  000035                     	ds	2
    96  0000                     _ANSELA	set	3896
    97  0000                     _ANSELE	set	3900
    98  0000                     _ANSELD	set	3899
    99  0000                     _ANSELB	set	3897
   100  0000                     _ANSELC	set	3898
   101  0000                     _LATEbits	set	3981
   102  0000                     _LATAbits	set	3977
   103  0000                     _LATBbits	set	3978
   104  0000                     _LATDbits	set	3980
   105  0000                     _LATCbits	set	3979
   106  0000                     _SSP2STATbits	set	3949
   107  0000                     _SSP2CON1bits	set	3948
   108  0000                     _SSP2BUF	set	3951
   109  0000                     _SSP2CON3	set	3945
   110  0000                     _SSP2CON1	set	3948
   111  0000                     _SSP2STAT	set	3949
   112  0000                     _OSCTUNE	set	3995
   113  0000                     _OSCCON2	set	4050
   114  0000                     _OSCCON	set	4051
   115  0000                     _INTCONbits	set	4082
   116  0000                     _RCONbits	set	4048
   117  0000                     _INTCON2bits	set	4081
   118  0000                     _WPUB	set	3937
   119  0000                     _TRISD	set	3989
   120  0000                     _TRISC	set	3988
   121  0000                     _TRISB	set	3987
   122  0000                     _TRISA	set	3986
   123  0000                     _TRISE	set	3990
   124  0000                     _LATC	set	3979
   125  0000                     _LATB	set	3978
   126  0000                     _LATA	set	3977
   127  0000                     _LATD	set	3980
   128  0000                     _LATE	set	3981
   129  0000                     _ADCON0bits	set	4034
   130  0000                     _ADRESH	set	4036
   131  0000                     _ADRESL	set	4035
   132  0000                     _ADCON2	set	4032
   133  0000                     _ADCON1	set	4033
   134  0000                     _ADCON0	set	4034
   135                           
   136                           ; #config settings
   137  0000                     
   138                           	psect	cinit
   139  0008E6                     __pcinit:
   140                           	opt stack 0
   141  0008E6                     start_initialization:
   142                           	opt stack 0
   143  0008E6                     __initialization:
   144                           	opt stack 0
   145                           
   146                           ; Clear objects allocated to COMRAM (16 bytes)
   147  0008E6  EE00  F025         	lfsr	0,__pbssCOMRAM
   148  0008EA  0E10               	movlw	16
   149  0008EC                     clear_0:
   150  0008EC  6AEE               	clrf	postinc0,c
   151  0008EE  06E8               	decf	wreg,f,c
   152  0008F0  E1FD               	bnz	clear_0
   153  0008F2                     end_of_initialization:
   154                           	opt stack 0
   155  0008F2                     __end_of__initialization:
   156                           	opt stack 0
   157  0008F2  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   158  0008F4  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   159  0008F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   160  0008F8  6EF8               	movwf	tblptru,c
   161  0008FA  0100               	movlb	0
   162  0008FC  EF8D  F004         	goto	_main	;jump to C main() function
   163                           tblptru	equ	0xFF8
   164                           postinc0	equ	0xFEE
   165                           wreg	equ	0xFE8
   166                           
   167                           	psect	bssCOMRAM
   168  000025                     __pbssCOMRAM:
   169                           	opt stack 0
   170  000025                     _tcrt:
   171                           	opt stack 0
   172  000025                     	ds	16
   173                           tblptru	equ	0xFF8
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           
   177                           	psect	cstackCOMRAM
   178  000001                     __pcstackCOMRAM:
   179                           	opt stack 0
   180  000001                     ?_ADC_GetConversion:
   181                           	opt stack 0
   182  000001                     setTCRT@pos:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0x0
   186  000001                     	ds	2
   187  000003                     ??_ADC_GetConversion:
   188  000003                     setTCRT@value:
   189                           	opt stack 0
   190                           
   191                           ; 2 bytes @ 0x2
   192  000003                     	ds	2
   193  000005                     ??_setTCRT:
   194  000005                     ADC_GetConversion@channel:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x4
   198  000005                     	ds	2
   199  000007                     INT0_ISR@i:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x6
   203  000007                     	ds	2
   204  000009                     ??_INTERRUPT_InterruptManager:
   205                           
   206                           ; 1 bytes @ 0x8
   207  000009                     	ds	18
   208  00001B                     INT0_SetInterruptHandler@InterruptHandler:
   209                           	opt stack 0
   210  00001B                     setLed@pos:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x1A
   214  00001B                     	ds	2
   215  00001D                     setLed@value:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x1C
   219  00001D                     	ds	2
   220  00001F                     ??_setLed:
   221                           
   222                           ; 1 bytes @ 0x1E
   223  00001F                     	ds	2
   224  000021                     
   225                           ; 1 bytes @ 0x20
   226  000021                     	ds	2
   227  000023                     drawToLeds@i:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x22
   231  000023                     	ds	2
   232  000025                     tblptru	equ	0xFF8
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236                           ; 1 bytes @ 0x24
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 142 in file "main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   256 ;;      Params:         0       0       0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0       0       0
   259 ;;      Totals:         0       0       0       0       0       0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels required when called:    7
   262 ;; This function calls:
   263 ;;		_ADC_Initialize
   264 ;;		_PIN_MANAGER_Initialize
   265 ;;		_SYSTEM_Initialize
   266 ;;		_drawToLeds
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text0
   273  00091A                     __ptext0:
   274                           	opt stack 0
   275  00091A                     _main:
   276                           	opt stack 24
   277                           
   278                           ;main.c: 145: SYSTEM_Initialize();
   279                           
   280                           ;incstack = 0
   281  00091A  EC80  F004         	call	_SYSTEM_Initialize	;wreg free
   282                           
   283                           ;main.c: 164: (INTCONbits.GIE = 1);
   284  00091E  8EF2               	bsf	intcon,7,c	;volatile
   285                           
   286                           ;main.c: 170: (INTCONbits.PEIE = 1);
   287  000920  8CF2               	bsf	intcon,6,c	;volatile
   288                           
   289                           ;main.c: 175: PIN_MANAGER_Initialize();
   290  000922  EC29  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   291                           
   292                           ;main.c: 176: ADC_Initialize();
   293  000926  EC98  F004         	call	_ADC_Initialize	;wreg free
   294  00092A                     
   295                           ;main.c: 179: {
   296                           ;main.c: 183: drawToLeds();
   297  00092A  ECF9  F003         	call	_drawToLeds	;wreg free
   298  00092E  D7FD               	goto	l267
   299  000930                     __end_of_main:
   300                           	opt stack 0
   301                           tblptru	equ	0xFF8
   302                           intcon	equ	0xFF2
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           
   306 ;; *************** function _drawToLeds *****************
   307 ;; Defined at:
   308 ;;		line 125 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  i               2   34[COMRAM] int 
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   322 ;;      Params:         0       0       0       0       0       0       0
   323 ;;      Locals:         2       0       0       0       0       0       0
   324 ;;      Temps:          2       0       0       0       0       0       0
   325 ;;      Totals:         4       0       0       0       0       0       0
   326 ;;Total ram usage:        4 bytes
   327 ;; Hardware stack levels used:    1
   328 ;; Hardware stack levels required when called:    5
   329 ;; This function calls:
   330 ;;		_setLed
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           	psect	text1
   337  0007F2                     __ptext1:
   338                           	opt stack 0
   339  0007F2                     _drawToLeds:
   340                           	opt stack 25
   341                           
   342                           ;main.c: 127: for(int i = 0; i<8; i++)
   343                           
   344                           ;incstack = 0
   345  0007F2  0E00               	movlw	0
   346  0007F4  6E24               	movwf	drawToLeds@i+1,c
   347  0007F6  0E00               	movlw	0
   348  0007F8  6E23               	movwf	drawToLeds@i,c
   349  0007FA                     l1206:
   350  0007FA  BE24               	btfsc	drawToLeds@i+1,7,c
   351  0007FC  D006               	goto	l255
   352  0007FE  5024               	movf	drawToLeds@i+1,w,c
   353  000800  E127               	bnz	l257
   354  000802  0E08               	movlw	8
   355  000804  5C23               	subwf	drawToLeds@i,w,c
   356  000806  B0D8               	btfsc	status,0,c
   357  000808  0012               	return	
   358  00080A                     l255:
   359                           
   360                           ;main.c: 128: setLed(i, tcrt[i]<TRESHOLD);
   361  00080A  C023  F01B         	movff	drawToLeds@i,setLed@pos
   362  00080E  C024  F01C         	movff	drawToLeds@i+1,setLed@pos+1
   363  000812  0E11               	movlw	low _TRESHOLD
   364  000814  6EF6               	movwf	tblptrl,c
   365  000816                     	if	1	;There is more than 1 active tblptr byte
   366  000816  0E06               	movlw	high _TRESHOLD
   367  000818  6EF7               	movwf	tblptrh,c
   368  00081A                     	endif
   369  00081A                     	if	0	;There are less than 3 active tblptr bytes
   370  00081A                     	endif
   371  00081A  90D8               	bcf	status,0,c
   372  00081C  3423               	rlcf	drawToLeds@i,w,c
   373  00081E  6ED9               	movwf	fsr2l,c
   374  000820  3424               	rlcf	drawToLeds@i+1,w,c
   375  000822  6EDA               	movwf	fsr2h,c
   376  000824  0E25               	movlw	low _tcrt
   377  000826  26D9               	addwf	fsr2l,f,c
   378  000828  0E00               	movlw	high _tcrt
   379  00082A  22DA               	addwfc	fsr2h,f,c
   380  00082C  0009               	tblrd		*+
   381  00082E  50F5               	movf	tablat,w,c
   382  000830  5CDE               	subwf	postinc2,w,c
   383  000832  0009               	tblrd		*+
   384  000834  50F5               	movf	tablat,w,c
   385  000836  58DE               	subwfb	postinc2,w,c
   386  000838  B0D8               	btfsc	status,0,c
   387  00083A  D002               	goto	u600
   388  00083C  0E01               	movlw	1
   389  00083E  D001               	goto	u610
   390  000840                     u600:
   391  000840  0E00               	movlw	0
   392  000842                     u610:
   393  000842  6E1D               	movwf	setLed@value,c
   394  000844  6A1E               	clrf	setLed@value+1,c
   395  000846  EC0A  F003         	call	_setLed	;wreg free
   396  00084A  4A23               	infsnz	drawToLeds@i,f,c
   397  00084C  2A24               	incf	drawToLeds@i+1,f,c
   398  00084E  D7D5               	goto	l1206
   399  000850                     l257:
   400  000850  0012               	return		;funcret
   401  000852                     __end_of_drawToLeds:
   402                           	opt stack 0
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           intcon	equ	0xFF2
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           postinc2	equ	0xFDE
   411                           fsr2h	equ	0xFDA
   412                           fsr2l	equ	0xFD9
   413                           status	equ	0xFD8
   414                           
   415 ;; *************** function _setLed *****************
   416 ;; Defined at:
   417 ;;		line 94 in file "main.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;  pos             2   26[COMRAM] int 
   420 ;;  value           2   28[COMRAM] int 
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   432 ;;      Params:         4       0       0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0       0       0
   434 ;;      Temps:          2       0       0       0       0       0       0
   435 ;;      Totals:         6       0       0       0       0       0       0
   436 ;;Total ram usage:        6 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; Hardware stack levels required when called:    4
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_drawToLeds
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text2
   447  000614                     __ptext2:
   448                           	opt stack 0
   449  000614                     _setLed:
   450                           	opt stack 25
   451                           
   452                           ;main.c: 96: switch(pos)
   453                           
   454                           ;incstack = 0
   455  000614  D030               	goto	l242
   456  000616                     l243:
   457                           
   458                           ;main.c: 99: LATCbits.LATC4 = value;
   459  000616  B01D               	btfsc	setLed@value,0,c
   460  000618  D002               	bra	u485
   461  00061A  988B               	bcf	3979,4,c	;volatile
   462  00061C  D001               	bra	u486
   463  00061E                     u485:
   464  00061E  888B               	bsf	3979,4,c	;volatile
   465  000620                     u486:
   466                           
   467                           ;main.c: 100: break;
   468  000620  0012               	return	
   469  000622                     l245:
   470                           
   471                           ;main.c: 102: LATDbits.LATD5 = value;
   472  000622  B01D               	btfsc	setLed@value,0,c
   473  000624  D002               	bra	u495
   474  000626  9A8C               	bcf	3980,5,c	;volatile
   475  000628  D001               	bra	u496
   476  00062A                     u495:
   477  00062A  8A8C               	bsf	3980,5,c	;volatile
   478  00062C                     u496:
   479                           
   480                           ;main.c: 103: break;
   481  00062C  0012               	return	
   482  00062E                     l246:
   483                           
   484                           ;main.c: 105: LATBbits.LATB1 = value;
   485  00062E  B01D               	btfsc	setLed@value,0,c
   486  000630  D002               	bra	u505
   487  000632  928A               	bcf	3978,1,c	;volatile
   488  000634  D001               	bra	u506
   489  000636                     u505:
   490  000636  828A               	bsf	3978,1,c	;volatile
   491  000638                     u506:
   492                           
   493                           ;main.c: 106: break;
   494  000638  0012               	return	
   495  00063A                     l247:
   496                           
   497                           ;main.c: 108: LATDbits.LATD2 = value;
   498  00063A  B01D               	btfsc	setLed@value,0,c
   499  00063C  D002               	bra	u515
   500  00063E  948C               	bcf	3980,2,c	;volatile
   501  000640  D001               	bra	u516
   502  000642                     u515:
   503  000642  848C               	bsf	3980,2,c	;volatile
   504  000644                     u516:
   505                           
   506                           ;main.c: 109: break;
   507  000644  0012               	return	
   508  000646                     l248:
   509                           
   510                           ;main.c: 111: LATAbits.LATA0 = value;
   511  000646  B01D               	btfsc	setLed@value,0,c
   512  000648  D002               	bra	u525
   513  00064A  9089               	bcf	3977,0,c	;volatile
   514  00064C  D001               	bra	u526
   515  00064E                     u525:
   516  00064E  8089               	bsf	3977,0,c	;volatile
   517  000650                     u526:
   518                           
   519                           ;main.c: 112: break;
   520  000650  0012               	return	
   521  000652                     l249:
   522                           
   523                           ;main.c: 114: LATAbits.LATA3 = value;
   524  000652  B01D               	btfsc	setLed@value,0,c
   525  000654  D002               	bra	u535
   526  000656  9689               	bcf	3977,3,c	;volatile
   527  000658  D001               	bra	u536
   528  00065A                     u535:
   529  00065A  8689               	bsf	3977,3,c	;volatile
   530  00065C                     u536:
   531                           
   532                           ;main.c: 115: break;
   533  00065C  0012               	return	
   534  00065E                     l250:
   535                           
   536                           ;main.c: 117: LATEbits.LATE0 = value;
   537  00065E  B01D               	btfsc	setLed@value,0,c
   538  000660  D002               	bra	u545
   539  000662  908D               	bcf	3981,0,c	;volatile
   540  000664  D001               	bra	u546
   541  000666                     u545:
   542  000666  808D               	bsf	3981,0,c	;volatile
   543  000668                     u546:
   544                           
   545                           ;main.c: 118: break;
   546  000668  0012               	return	
   547  00066A                     l251:
   548                           
   549                           ;main.c: 120: LATCbits.LATC1 = value;
   550  00066A  B01D               	btfsc	setLed@value,0,c
   551  00066C  D002               	bra	u555
   552  00066E  928B               	bcf	3979,1,c	;volatile
   553  000670  D001               	bra	u556
   554  000672                     u555:
   555  000672  828B               	bsf	3979,1,c	;volatile
   556  000674                     u556:
   557                           
   558                           ;main.c: 122: }
   559                           
   560                           ;main.c: 121: break;
   561  000674  0012               	return	
   562  000676                     l242:
   563  000676  C01B  F01F         	movff	setLed@pos,??_setLed
   564  00067A  C01C  F020         	movff	setLed@pos+1,??_setLed+1
   565                           
   566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   567                           ; Switch size 1, requested type "space"
   568                           ; Number of cases is 1, Range of values is 0 to 0
   569                           ; switch strategies available:
   570                           ; Name         Instructions Cycles
   571                           ; simple_byte            4     3 (average)
   572                           ;	Chosen strategy is simple_byte
   573  00067E  5020               	movf	??_setLed+1,w,c
   574  000680  0A00               	xorlw	0	; case 0
   575  000682  A4D8               	btfss	status,2,c
   576  000684  0012               	return	
   577                           
   578                           ; Switch size 1, requested type "space"
   579                           ; Number of cases is 8, Range of values is 0 to 7
   580                           ; switch strategies available:
   581                           ; Name         Instructions Cycles
   582                           ; simple_byte           25    13 (average)
   583                           ;	Chosen strategy is simple_byte
   584  000686  501F               	movf	??_setLed,w,c
   585  000688  0A00               	xorlw	0	; case 0
   586  00068A  B4D8               	btfsc	status,2,c
   587  00068C  D7C4               	goto	l243
   588  00068E  0A01               	xorlw	1	; case 1
   589  000690  B4D8               	btfsc	status,2,c
   590  000692  D7C7               	goto	l245
   591  000694  0A03               	xorlw	3	; case 2
   592  000696  B4D8               	btfsc	status,2,c
   593  000698  D7CA               	goto	l246
   594  00069A  0A01               	xorlw	1	; case 3
   595  00069C  B4D8               	btfsc	status,2,c
   596  00069E  D7CD               	goto	l247
   597  0006A0  0A07               	xorlw	7	; case 4
   598  0006A2  B4D8               	btfsc	status,2,c
   599  0006A4  D7D0               	goto	l248
   600  0006A6  0A01               	xorlw	1	; case 5
   601  0006A8  B4D8               	btfsc	status,2,c
   602  0006AA  D7D3               	goto	l249
   603  0006AC  0A03               	xorlw	3	; case 6
   604  0006AE  B4D8               	btfsc	status,2,c
   605  0006B0  D7D6               	goto	l250
   606  0006B2  0A01               	xorlw	1	; case 7
   607  0006B4  A4D8               	btfss	status,2,c
   608  0006B6  0012               	return	
   609  0006B8  D7D8               	goto	l251
   610  0006BA                     __end_of_setLed:
   611                           	opt stack 0
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           intcon	equ	0xFF2
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           postinc2	equ	0xFDE
   620                           fsr2h	equ	0xFDA
   621                           fsr2l	equ	0xFD9
   622                           status	equ	0xFD8
   623                           
   624 ;; *************** function _SYSTEM_Initialize *****************
   625 ;; Defined at:
   626 ;;		line 111 in file "mcc_generated_files/mcc.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   640 ;;      Params:         0       0       0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0       0       0
   643 ;;      Totals:         0       0       0       0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    6
   647 ;; This function calls:
   648 ;;		_ADC_Initialize
   649 ;;		_EXT_INT_Initialize
   650 ;;		_INTERRUPT_Initialize
   651 ;;		_OSCILLATOR_Initialize
   652 ;;		_PIN_MANAGER_Initialize
   653 ;;		_SPI2_Initialize
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text3
   660  000900                     __ptext3:
   661                           	opt stack 0
   662  000900                     _SYSTEM_Initialize:
   663                           	opt stack 24
   664                           
   665                           ;mcc.c: 114: INTERRUPT_Initialize();
   666                           
   667                           ;incstack = 0
   668  000900  ECC0  F004         	call	_INTERRUPT_Initialize	;wreg free
   669                           
   670                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   671  000904  EC29  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   672                           
   673                           ;mcc.c: 116: OSCILLATOR_Initialize();
   674  000908  ECB4  F004         	call	_OSCILLATOR_Initialize	;wreg free
   675                           
   676                           ;mcc.c: 117: SPI2_Initialize();
   677  00090C  ECAD  F004         	call	_SPI2_Initialize	;wreg free
   678                           
   679                           ;mcc.c: 118: EXT_INT_Initialize();
   680  000910  ECA3  F004         	call	_EXT_INT_Initialize	;wreg free
   681                           
   682                           ;mcc.c: 119: ADC_Initialize();
   683  000914  EC98  F004         	call	_ADC_Initialize	;wreg free
   684  000918  0012               	return		;funcret
   685  00091A                     __end_of_SYSTEM_Initialize:
   686                           	opt stack 0
   687                           tblptru	equ	0xFF8
   688                           tblptrh	equ	0xFF7
   689                           tblptrl	equ	0xFF6
   690                           tablat	equ	0xFF5
   691                           intcon	equ	0xFF2
   692                           postinc0	equ	0xFEE
   693                           wreg	equ	0xFE8
   694                           postinc2	equ	0xFDE
   695                           fsr2h	equ	0xFDA
   696                           fsr2l	equ	0xFD9
   697                           status	equ	0xFD8
   698                           
   699 ;; *************** function _SPI2_Initialize *****************
   700 ;; Defined at:
   701 ;;		line 63 in file "mcc_generated_files/spi2.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   715 ;;      Params:         0       0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0
   718 ;;      Totals:         0       0       0       0       0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    4
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_SYSTEM_Initialize
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text4
   730  00095A                     __ptext4:
   731                           	opt stack 0
   732  00095A                     _SPI2_Initialize:
   733                           	opt stack 25
   734                           
   735                           ;spi2.c: 68: SSP2STAT = 0x00;
   736                           
   737                           ;incstack = 0
   738  00095A  0E00               	movlw	0
   739  00095C  6E6D               	movwf	3949,c	;volatile
   740                           
   741                           ;spi2.c: 71: SSP2CON1 = 0x24;
   742  00095E  0E24               	movlw	36
   743  000960  6E6C               	movwf	3948,c	;volatile
   744                           
   745                           ;spi2.c: 74: SSP2CON3 = 0x00;
   746  000962  0E00               	movlw	0
   747  000964  6E69               	movwf	3945,c	;volatile
   748  000966  0012               	return		;funcret
   749  000968                     __end_of_SPI2_Initialize:
   750                           	opt stack 0
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           intcon	equ	0xFF2
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           postinc2	equ	0xFDE
   759                           fsr2h	equ	0xFDA
   760                           fsr2l	equ	0xFD9
   761                           status	equ	0xFD8
   762                           
   763 ;; *************** function _PIN_MANAGER_Initialize *****************
   764 ;; Defined at:
   765 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   779 ;;      Params:         0       0       0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0       0       0
   782 ;;      Totals:         0       0       0       0       0       0       0
   783 ;;Total ram usage:        0 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    4
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_SYSTEM_Initialize
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text5
   795  000852                     __ptext5:
   796                           	opt stack 0
   797  000852                     _PIN_MANAGER_Initialize:
   798                           	opt stack 25
   799                           
   800                           ;pin_manager.c: 57: LATE = 0x00;
   801                           
   802                           ;incstack = 0
   803  000852  0E00               	movlw	0
   804  000854  6E8D               	movwf	3981,c	;volatile
   805                           
   806                           ;pin_manager.c: 58: LATD = 0x00;
   807  000856  0E00               	movlw	0
   808  000858  6E8C               	movwf	3980,c	;volatile
   809                           
   810                           ;pin_manager.c: 59: LATA = 0x00;
   811  00085A  0E00               	movlw	0
   812  00085C  6E89               	movwf	3977,c	;volatile
   813                           
   814                           ;pin_manager.c: 60: LATB = 0x00;
   815  00085E  0E00               	movlw	0
   816  000860  6E8A               	movwf	3978,c	;volatile
   817                           
   818                           ;pin_manager.c: 61: LATC = 0x00;
   819  000862  0E00               	movlw	0
   820  000864  6E8B               	movwf	3979,c	;volatile
   821                           
   822                           ;pin_manager.c: 66: TRISE = 0x04;
   823  000866  0E04               	movlw	4
   824  000868  6E96               	movwf	3990,c	;volatile
   825                           
   826                           ;pin_manager.c: 67: TRISA = 0xE2;
   827  00086A  0EE2               	movlw	226
   828  00086C  6E92               	movwf	3986,c	;volatile
   829                           
   830                           ;pin_manager.c: 68: TRISB = 0xE9;
   831  00086E  0EE9               	movlw	233
   832  000870  6E93               	movwf	3987,c	;volatile
   833                           
   834                           ;pin_manager.c: 69: TRISC = 0xC9;
   835  000872  0EC9               	movlw	201
   836  000874  6E94               	movwf	3988,c	;volatile
   837                           
   838                           ;pin_manager.c: 70: TRISD = 0x8B;
   839  000876  0E8B               	movlw	139
   840  000878  6E95               	movwf	3989,c	;volatile
   841                           
   842                           ;pin_manager.c: 75: ANSELC = 0xFC;
   843  00087A  0EFC               	movlw	252
   844  00087C  010F               	movlb	15	; () banked
   845  00087E  6F3A               	movwf	58,b	;volatile
   846                           
   847                           ;pin_manager.c: 76: ANSELB = 0x3E;
   848  000880  0E3E               	movlw	62
   849  000882  6F39               	movwf	57,b	;volatile
   850                           
   851                           ;pin_manager.c: 77: ANSELD = 0xE4;
   852  000884  0EE4               	movlw	228
   853  000886  6F3B               	movwf	59,b	;volatile
   854                           
   855                           ;pin_manager.c: 78: ANSELE = 0x07;
   856  000888  0E07               	movlw	7
   857  00088A  6F3C               	movwf	60,b	;volatile
   858                           
   859                           ;pin_manager.c: 79: ANSELA = 0x2F;
   860  00088C  0E2F               	movlw	47
   861  00088E  6F38               	movwf	56,b	;volatile
   862                           
   863                           ; BSR set to: 15
   864                           ;pin_manager.c: 84: WPUB = 0xFF;
   865  000890  6861               	setf	3937,c	;volatile
   866                           
   867                           ; BSR set to: 15
   868                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
   869  000892  9EF1               	bcf	intcon2,7,c	;volatile
   870                           
   871                           ; BSR set to: 15
   872  000894  0012               	return		;funcret
   873  000896                     __end_of_PIN_MANAGER_Initialize:
   874                           	opt stack 0
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           intcon	equ	0xFF2
   880                           intcon2	equ	0xFF1
   881                           postinc0	equ	0xFEE
   882                           wreg	equ	0xFE8
   883                           postinc2	equ	0xFDE
   884                           fsr2h	equ	0xFDA
   885                           fsr2l	equ	0xFD9
   886                           status	equ	0xFD8
   887                           
   888 ;; *************** function _OSCILLATOR_Initialize *****************
   889 ;; Defined at:
   890 ;;		line 122 in file "mcc_generated_files/mcc.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   904 ;;      Params:         0       0       0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; Hardware stack levels required when called:    4
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		_SYSTEM_Initialize
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text6
   919  000968                     __ptext6:
   920                           	opt stack 0
   921  000968                     _OSCILLATOR_Initialize:
   922                           	opt stack 25
   923                           
   924                           ;mcc.c: 125: OSCCON = 0x70;
   925                           
   926                           ; BSR set to: 15
   927                           ;incstack = 0
   928  000968  0E70               	movlw	112
   929  00096A  6ED3               	movwf	4051,c	;volatile
   930                           
   931                           ;mcc.c: 127: OSCCON2 = 0x04;
   932  00096C  0E04               	movlw	4
   933  00096E  6ED2               	movwf	4050,c	;volatile
   934                           
   935                           ;mcc.c: 129: OSCTUNE = 0x00;
   936  000970  0E00               	movlw	0
   937  000972  6E9B               	movwf	3995,c	;volatile
   938  000974  0012               	return		;funcret
   939  000976                     __end_of_OSCILLATOR_Initialize:
   940                           	opt stack 0
   941                           tblptru	equ	0xFF8
   942                           tblptrh	equ	0xFF7
   943                           tblptrl	equ	0xFF6
   944                           tablat	equ	0xFF5
   945                           intcon	equ	0xFF2
   946                           intcon2	equ	0xFF1
   947                           postinc0	equ	0xFEE
   948                           wreg	equ	0xFE8
   949                           postinc2	equ	0xFDE
   950                           fsr2h	equ	0xFDA
   951                           fsr2l	equ	0xFD9
   952                           status	equ	0xFD8
   953                           
   954 ;; *************** function _INTERRUPT_Initialize *****************
   955 ;; Defined at:
   956 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		None
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         0       0       0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    4
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_SYSTEM_Initialize
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text7
   985  000980                     __ptext7:
   986                           	opt stack 0
   987  000980                     _INTERRUPT_Initialize:
   988                           	opt stack 25
   989                           
   990                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
   991                           
   992                           ;incstack = 0
   993  000980  9ED0               	bcf	4048,7,c	;volatile
   994  000982  0012               	return		;funcret
   995  000984                     __end_of_INTERRUPT_Initialize:
   996                           	opt stack 0
   997                           tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           intcon	equ	0xFF2
  1002                           intcon2	equ	0xFF1
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           postinc2	equ	0xFDE
  1006                           fsr2h	equ	0xFDA
  1007                           fsr2l	equ	0xFD9
  1008                           status	equ	0xFD8
  1009                           
  1010 ;; *************** function _EXT_INT_Initialize *****************
  1011 ;; Defined at:
  1012 ;;		line 102 in file "mcc_generated_files/ext_int.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1026 ;;      Params:         0       0       0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    5
  1033 ;; This function calls:
  1034 ;;		_INT0_SetInterruptHandler
  1035 ;; This function is called by:
  1036 ;;		_SYSTEM_Initialize
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text8
  1041  000946                     __ptext8:
  1042                           	opt stack 0
  1043  000946                     _EXT_INT_Initialize:
  1044                           	opt stack 24
  1045                           
  1046                           ;ext_int.c: 111: (INTCONbits.INT0IF = 0);
  1047                           
  1048                           ;incstack = 0
  1049  000946  92F2               	bcf	intcon,1,c	;volatile
  1050                           
  1051                           ;ext_int.c: 112: (INTCON2bits.INTEDG0 = 1);
  1052  000948  8CF1               	bsf	intcon2,6,c	;volatile
  1053                           
  1054                           ;ext_int.c: 114: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  1055  00094A  0E84               	movlw	low _INT0_DefaultInterruptHandler
  1056  00094C  6E1B               	movwf	INT0_SetInterruptHandler@InterruptHandler,c
  1057  00094E  0E09               	movlw	high _INT0_DefaultInterruptHandler
  1058  000950  6E1C               	movwf	INT0_SetInterruptHandler@InterruptHandler+1,c
  1059  000952  ECBB  F004         	call	_INT0_SetInterruptHandler	;wreg free
  1060                           
  1061                           ;ext_int.c: 115: (INTCONbits.INT0IE = 1);
  1062  000956  88F2               	bsf	intcon,4,c	;volatile
  1063  000958  0012               	return		;funcret
  1064  00095A                     __end_of_EXT_INT_Initialize:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           intcon	equ	0xFF2
  1071                           intcon2	equ	0xFF1
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postinc2	equ	0xFDE
  1075                           fsr2h	equ	0xFDA
  1076                           fsr2l	equ	0xFD9
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _INT0_SetInterruptHandler *****************
  1080 ;; Defined at:
  1081 ;;		line 82 in file "mcc_generated_files/ext_int.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  InterruptHan    2   26[COMRAM] PTR FTN()void 
  1084 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1096 ;;      Params:         2       0       0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0
  1099 ;;      Totals:         2       0       0       0       0       0       0
  1100 ;;Total ram usage:        2 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    4
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_EXT_INT_Initialize
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text9
  1111  000976                     __ptext9:
  1112                           	opt stack 0
  1113  000976                     _INT0_SetInterruptHandler:
  1114                           	opt stack 24
  1115                           
  1116                           ;ext_int.c: 83: INT0_InterruptHandler = InterruptHandler;
  1117                           
  1118                           ;incstack = 0
  1119  000976  C01B  F035         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1120  00097A  C01C  F036         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1121  00097E  0012               	return		;funcret
  1122  000980                     __end_of_INT0_SetInterruptHandler:
  1123                           	opt stack 0
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           intcon	equ	0xFF2
  1129                           intcon2	equ	0xFF1
  1130                           postinc0	equ	0xFEE
  1131                           wreg	equ	0xFE8
  1132                           postinc2	equ	0xFDE
  1133                           fsr2h	equ	0xFDA
  1134                           fsr2l	equ	0xFD9
  1135                           status	equ	0xFD8
  1136                           
  1137 ;; *************** function _ADC_Initialize *****************
  1138 ;; Defined at:
  1139 ;;		line 58 in file "mcc_generated_files/adc.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1153 ;;      Params:         0       0       0       0       0       0       0
  1154 ;;      Locals:         0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0
  1156 ;;      Totals:         0       0       0       0       0       0       0
  1157 ;;Total ram usage:        0 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    4
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_SYSTEM_Initialize
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text10
  1169  000930                     __ptext10:
  1170                           	opt stack 0
  1171  000930                     _ADC_Initialize:
  1172                           	opt stack 25
  1173                           
  1174                           ;adc.c: 63: ADCON0 = 0x01;
  1175                           
  1176                           ;incstack = 0
  1177  000930  0E01               	movlw	1
  1178  000932  6EC2               	movwf	4034,c	;volatile
  1179                           
  1180                           ;adc.c: 66: ADCON1 = 0x00;
  1181  000934  0E00               	movlw	0
  1182  000936  6EC1               	movwf	4033,c	;volatile
  1183                           
  1184                           ;adc.c: 69: ADCON2 = 0x00;
  1185  000938  0E00               	movlw	0
  1186  00093A  6EC0               	movwf	4032,c	;volatile
  1187                           
  1188                           ;adc.c: 72: ADRESL = 0x00;
  1189  00093C  0E00               	movlw	0
  1190  00093E  6EC3               	movwf	4035,c	;volatile
  1191                           
  1192                           ;adc.c: 75: ADRESH = 0x00;
  1193  000940  0E00               	movlw	0
  1194  000942  6EC4               	movwf	4036,c	;volatile
  1195  000944  0012               	return		;funcret
  1196  000946                     __end_of_ADC_Initialize:
  1197                           	opt stack 0
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           intcon	equ	0xFF2
  1203                           intcon2	equ	0xFF1
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postinc2	equ	0xFDE
  1207                           fsr2h	equ	0xFDA
  1208                           fsr2l	equ	0xFD9
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function _INTERRUPT_InterruptManager *****************
  1212 ;; Defined at:
  1213 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1227 ;;      Params:         0       0       0       0       0       0       0
  1228 ;;      Locals:         0       0       0       0       0       0       0
  1229 ;;      Temps:         18       0       0       0       0       0       0
  1230 ;;      Totals:        18       0       0       0       0       0       0
  1231 ;;Total ram usage:       18 bytes
  1232 ;; Hardware stack levels used:    1
  1233 ;; Hardware stack levels required when called:    3
  1234 ;; This function calls:
  1235 ;;		_INT0_ISR
  1236 ;; This function is called by:
  1237 ;;		Interrupt level 2
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	intcode
  1242  000008                     __pintcode:
  1243                           	opt stack 0
  1244  000008                     _INTERRUPT_InterruptManager:
  1245                           	opt stack 24
  1246                           
  1247                           ;incstack = 0
  1248  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1249  00000A  CFFA F009          	movff	pclath,??_INTERRUPT_InterruptManager
  1250  00000E  CFFB F00A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1251  000012  CFE9 F00B          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1252  000016  CFEA F00C          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1253  00001A  CFE1 F00D          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1254  00001E  CFE2 F00E          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1255  000022  CFD9 F00F          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1256  000026  CFDA F010          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1257  00002A  CFF3 F011          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1258  00002E  CFF4 F012          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1259  000032  CFF6 F013          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1260  000036  CFF7 F014          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1261  00003A  CFF8 F015          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1262  00003E  CFF5 F016          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1263  000042  C037  F017         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1264  000046  C038  F018         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1265  00004A  C039  F019         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1266  00004E  C03A  F01A         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1267                           
  1268                           ;interrupt_manager.c: 60: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  1269  000052  B8F2               	btfsc	intcon,4,c	;volatile
  1270  000054  A2F2               	btfss	intcon,1,c	;volatile
  1271  000056  D002               	goto	i2l87
  1272                           
  1273                           ;interrupt_manager.c: 61: {
  1274                           ;interrupt_manager.c: 62: INT0_ISR();
  1275  000058  ECB0  F003         	call	_INT0_ISR	;wreg free
  1276  00005C                     i2l87:
  1277                           
  1278                           ;interrupt_manager.c: 64: else
  1279                           ;interrupt_manager.c: 65: {
  1280  00005C  C01A  F03A         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1281  000060  C019  F039         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1282  000064  C018  F038         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1283  000068  C017  F037         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1284  00006C  C016  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1285  000070  C015  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1286  000074  C014  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1287  000078  C013  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1288  00007C  C012  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1289  000080  C011  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1290  000084  C010  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1291  000088  C00F  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1292  00008C  C00E  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1293  000090  C00D  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1294  000094  C00C  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1295  000098  C00B  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1296  00009C  C00A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1297  0000A0  C009  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1298  0000A4  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1299  0000A6  0011               	retfie		f
  1300  0000A8                     __end_of_INTERRUPT_InterruptManager:
  1301                           	opt stack 0
  1302                           pclatu	equ	0xFFB
  1303                           pclath	equ	0xFFA
  1304                           tblptru	equ	0xFF8
  1305                           tblptrh	equ	0xFF7
  1306                           tblptrl	equ	0xFF6
  1307                           tablat	equ	0xFF5
  1308                           prodh	equ	0xFF4
  1309                           prodl	equ	0xFF3
  1310                           intcon	equ	0xFF2
  1311                           intcon2	equ	0xFF1
  1312                           postinc0	equ	0xFEE
  1313                           fsr0h	equ	0xFEA
  1314                           fsr0l	equ	0xFE9
  1315                           wreg	equ	0xFE8
  1316                           fsr1h	equ	0xFE2
  1317                           fsr1l	equ	0xFE1
  1318                           postinc2	equ	0xFDE
  1319                           fsr2h	equ	0xFDA
  1320                           fsr2l	equ	0xFD9
  1321                           status	equ	0xFD8
  1322                           
  1323 ;; *************** function _INT0_ISR *****************
  1324 ;; Defined at:
  1325 ;;		line 49 in file "mcc_generated_files/ext_int.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  i               2    6[COMRAM] int 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1339 ;;      Params:         0       0       0       0       0       0       0
  1340 ;;      Locals:         2       0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0
  1342 ;;      Totals:         2       0       0       0       0       0       0
  1343 ;;Total ram usage:        2 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    2
  1346 ;; This function calls:
  1347 ;;		_ADC_GetConversion
  1348 ;;		_INT0_CallBack
  1349 ;;		_setTCRT
  1350 ;; This function is called by:
  1351 ;;		_INTERRUPT_InterruptManager
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text12
  1356  000760                     __ptext12:
  1357                           	opt stack 0
  1358  000760                     _INT0_ISR:
  1359                           	opt stack 24
  1360                           
  1361                           ;ext_int.c: 52: for(int i = 0; i < 8; i++)
  1362                           
  1363                           ;incstack = 0
  1364  000760  0E00               	movlw	0
  1365  000762  6E08               	movwf	INT0_ISR@i+1,c
  1366  000764  0E00               	movlw	0
  1367  000766  6E07               	movwf	INT0_ISR@i,c
  1368  000768  BE08               	btfsc	INT0_ISR@i+1,7,c
  1369  00076A  D003               	goto	i2l110
  1370  00076C  5008               	movf	INT0_ISR@i+1,w,c
  1371  00076E  E13D               	bnz	i2l111
  1372  000770  D038               	goto	L1
  1373  000772                     i2l110:
  1374                           
  1375                           ;ext_int.c: 53: {
  1376                           ;ext_int.c: 54: setTCRT(i, 1);
  1377  000772  C007  F001         	movff	INT0_ISR@i,setTCRT@pos
  1378  000776  C008  F002         	movff	INT0_ISR@i+1,setTCRT@pos+1
  1379  00077A  0E00               	movlw	0
  1380  00077C  6E04               	movwf	setTCRT@value+1,c
  1381  00077E  0E01               	movlw	1
  1382  000780  6E03               	movwf	setTCRT@value,c
  1383  000782  EC5D  F003         	call	_setTCRT	;wreg free
  1384                           
  1385                           ;ext_int.c: 55: _delay((unsigned long)((50)*(16000000/4000000.0)));
  1386  000786  0E42               	movlw	66
  1387  000788                     i2u73_47:
  1388  000788  2EE8               	decfsz	wreg,f,c
  1389  00078A  D7FE               	bra	i2u73_47
  1390  00078C  D000               	nop2	
  1391                           
  1392                           ;ext_int.c: 56: tcrt[i] = ADC_GetConversion(AN_CHANNEL[i]);
  1393  00078E  90D8               	bcf	status,0,c
  1394  000790  3407               	rlcf	INT0_ISR@i,w,c
  1395  000792  6EF6               	movwf	tblptrl,c
  1396  000794  3408               	rlcf	INT0_ISR@i+1,w,c
  1397  000796  6EF7               	movwf	tblptrh,c
  1398  000798  0E01               	movlw	low _AN_CHANNEL
  1399  00079A  26F6               	addwf	tblptrl,f,c
  1400  00079C  0E06               	movlw	high _AN_CHANNEL
  1401  00079E  22F7               	addwfc	tblptrh,f,c
  1402  0007A0                     	if	0	;There are less than 3 active tblptr bytes
  1403  0007A0                     	endif
  1404  0007A0  0008               	tblrd		*
  1405  0007A2  50F5               	movf	tablat,w,c
  1406  0007A4  EC4B  F004         	call	_ADC_GetConversion
  1407  0007A8  90D8               	bcf	status,0,c
  1408  0007AA  3407               	rlcf	INT0_ISR@i,w,c
  1409  0007AC  6ED9               	movwf	fsr2l,c
  1410  0007AE  3408               	rlcf	INT0_ISR@i+1,w,c
  1411  0007B0  6EDA               	movwf	fsr2h,c
  1412  0007B2  0E25               	movlw	low _tcrt
  1413  0007B4  26D9               	addwf	fsr2l,f,c
  1414  0007B6  0E00               	movlw	high _tcrt
  1415  0007B8  22DA               	addwfc	fsr2h,f,c
  1416  0007BA  C001  FFDE         	movff	?_ADC_GetConversion,postinc2
  1417  0007BE  C002  FFDD         	movff	?_ADC_GetConversion+1,postdec2
  1418                           
  1419                           ;ext_int.c: 57: setTCRT(i, 0);
  1420  0007C2  C007  F001         	movff	INT0_ISR@i,setTCRT@pos
  1421  0007C6  C008  F002         	movff	INT0_ISR@i+1,setTCRT@pos+1
  1422  0007CA  0E00               	movlw	0
  1423  0007CC  6E04               	movwf	setTCRT@value+1,c
  1424  0007CE  0E00               	movlw	0
  1425  0007D0  6E03               	movwf	setTCRT@value,c
  1426  0007D2  EC5D  F003         	call	_setTCRT	;wreg free
  1427  0007D6  4A07               	infsnz	INT0_ISR@i,f,c
  1428  0007D8  2A08               	incf	INT0_ISR@i+1,f,c
  1429  0007DA  BE08               	btfsc	INT0_ISR@i+1,7,c
  1430  0007DC  D7CA               	goto	i2l110
  1431  0007DE  5008               	movf	INT0_ISR@i+1,w,c
  1432  0007E0  E104               	bnz	i2u57_40
  1433  0007E2                     L1:
  1434  0007E2  0E08               	movlw	8
  1435  0007E4  5C07               	subwf	INT0_ISR@i,w,c
  1436  0007E6  A0D8               	btfss	status,0,c
  1437  0007E8  D7C4               	goto	i2l110
  1438  0007EA                     i2u57_40:
  1439  0007EA                     i2l111:
  1440                           
  1441                           ;ext_int.c: 58: }
  1442                           ;ext_int.c: 61: (INTCONbits.INT0IF = 0);
  1443  0007EA  92F2               	bcf	intcon,1,c	;volatile
  1444                           
  1445                           ;ext_int.c: 64: INT0_CallBack();
  1446  0007EC  EC63  F004         	call	_INT0_CallBack	;wreg free
  1447  0007F0  0012               	return		;funcret
  1448  0007F2                     __end_of_INT0_ISR:
  1449                           	opt stack 0
  1450                           pclatu	equ	0xFFB
  1451                           pclath	equ	0xFFA
  1452                           tblptru	equ	0xFF8
  1453                           tblptrh	equ	0xFF7
  1454                           tblptrl	equ	0xFF6
  1455                           tablat	equ	0xFF5
  1456                           prodh	equ	0xFF4
  1457                           prodl	equ	0xFF3
  1458                           intcon	equ	0xFF2
  1459                           intcon2	equ	0xFF1
  1460                           postinc0	equ	0xFEE
  1461                           fsr0h	equ	0xFEA
  1462                           fsr0l	equ	0xFE9
  1463                           wreg	equ	0xFE8
  1464                           fsr1h	equ	0xFE2
  1465                           fsr1l	equ	0xFE1
  1466                           postinc2	equ	0xFDE
  1467                           postdec2	equ	0xFDD
  1468                           fsr2h	equ	0xFDA
  1469                           fsr2l	equ	0xFD9
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _setTCRT *****************
  1473 ;; Defined at:
  1474 ;;		line 63 in file "main.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  pos             2    0[COMRAM] int 
  1477 ;;  value           2    2[COMRAM] int 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1489 ;;      Params:         4       0       0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0
  1491 ;;      Temps:          2       0       0       0       0       0       0
  1492 ;;      Totals:         6       0       0       0       0       0       0
  1493 ;;Total ram usage:        6 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_INT0_ISR
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text13
  1503  0006BA                     __ptext13:
  1504                           	opt stack 0
  1505  0006BA                     _setTCRT:
  1506                           	opt stack 25
  1507                           
  1508                           ;main.c: 65: switch(pos)
  1509                           
  1510                           ;incstack = 0
  1511  0006BA  D030               	goto	i2l229
  1512  0006BC                     i2l230:
  1513                           
  1514                           ;main.c: 68: LATCbits.LATC5 = value;
  1515  0006BC  B003               	btfsc	setTCRT@value,0,c
  1516  0006BE  D002               	bra	i2u38_45
  1517  0006C0  9A8B               	bcf	3979,5,c	;volatile
  1518  0006C2  D001               	bra	i2u38_46
  1519  0006C4                     i2u38_45:
  1520  0006C4  8A8B               	bsf	3979,5,c	;volatile
  1521  0006C6                     i2u38_46:
  1522                           
  1523                           ;main.c: 69: break;
  1524  0006C6  0012               	return	
  1525  0006C8                     i2l232:
  1526                           
  1527                           ;main.c: 71: LATDbits.LATD6 = value;
  1528  0006C8  B003               	btfsc	setTCRT@value,0,c
  1529  0006CA  D002               	bra	i2u39_45
  1530  0006CC  9C8C               	bcf	3980,6,c	;volatile
  1531  0006CE  D001               	bra	i2u39_46
  1532  0006D0                     i2u39_45:
  1533  0006D0  8C8C               	bsf	3980,6,c	;volatile
  1534  0006D2                     i2u39_46:
  1535                           
  1536                           ;main.c: 72: break;
  1537  0006D2  0012               	return	
  1538  0006D4                     i2l233:
  1539                           
  1540                           ;main.c: 74: LATBbits.LATB2 = value;
  1541  0006D4  B003               	btfsc	setTCRT@value,0,c
  1542  0006D6  D002               	bra	i2u40_45
  1543  0006D8  948A               	bcf	3978,2,c	;volatile
  1544  0006DA  D001               	bra	i2u40_46
  1545  0006DC                     i2u40_45:
  1546  0006DC  848A               	bsf	3978,2,c	;volatile
  1547  0006DE                     i2u40_46:
  1548                           
  1549                           ;main.c: 75: break;
  1550  0006DE  0012               	return	
  1551  0006E0                     i2l234:
  1552                           
  1553                           ;main.c: 77: LATBbits.LATB4 = value;
  1554  0006E0  B003               	btfsc	setTCRT@value,0,c
  1555  0006E2  D002               	bra	i2u41_45
  1556  0006E4  988A               	bcf	3978,4,c	;volatile
  1557  0006E6  D001               	bra	i2u41_46
  1558  0006E8                     i2u41_45:
  1559  0006E8  888A               	bsf	3978,4,c	;volatile
  1560  0006EA                     i2u41_46:
  1561                           
  1562                           ;main.c: 78: break;
  1563  0006EA  0012               	return	
  1564  0006EC                     i2l235:
  1565                           
  1566                           ;main.c: 80: LATAbits.LATA2 = value;
  1567  0006EC  B003               	btfsc	setTCRT@value,0,c
  1568  0006EE  D002               	bra	i2u42_45
  1569  0006F0  9489               	bcf	3977,2,c	;volatile
  1570  0006F2  D001               	bra	i2u42_46
  1571  0006F4                     i2u42_45:
  1572  0006F4  8489               	bsf	3977,2,c	;volatile
  1573  0006F6                     i2u42_46:
  1574                           
  1575                           ;main.c: 81: break;
  1576  0006F6  0012               	return	
  1577  0006F8                     i2l236:
  1578                           
  1579                           ;main.c: 83: LATAbits.LATA4 = value;
  1580  0006F8  B003               	btfsc	setTCRT@value,0,c
  1581  0006FA  D002               	bra	i2u43_45
  1582  0006FC  9889               	bcf	3977,4,c	;volatile
  1583  0006FE  D001               	bra	i2u43_46
  1584  000700                     i2u43_45:
  1585  000700  8889               	bsf	3977,4,c	;volatile
  1586  000702                     i2u43_46:
  1587                           
  1588                           ;main.c: 84: break;
  1589  000702  0012               	return	
  1590  000704                     i2l237:
  1591                           
  1592                           ;main.c: 86: LATEbits.LATE1 = value;
  1593  000704  B003               	btfsc	setTCRT@value,0,c
  1594  000706  D002               	bra	i2u44_45
  1595  000708  928D               	bcf	3981,1,c	;volatile
  1596  00070A  D001               	bra	i2u44_46
  1597  00070C                     i2u44_45:
  1598  00070C  828D               	bsf	3981,1,c	;volatile
  1599  00070E                     i2u44_46:
  1600                           
  1601                           ;main.c: 87: break;
  1602  00070E  0012               	return	
  1603  000710                     i2l238:
  1604                           
  1605                           ;main.c: 89: LATCbits.LATC2 = value;
  1606  000710  B003               	btfsc	setTCRT@value,0,c
  1607  000712  D002               	bra	i2u45_45
  1608  000714  948B               	bcf	3979,2,c	;volatile
  1609  000716  D001               	bra	i2u45_46
  1610  000718                     i2u45_45:
  1611  000718  848B               	bsf	3979,2,c	;volatile
  1612  00071A                     i2u45_46:
  1613                           
  1614                           ;main.c: 91: }
  1615                           
  1616                           ;main.c: 90: break;
  1617  00071A  0012               	return	
  1618  00071C                     i2l229:
  1619  00071C  C001  F005         	movff	setTCRT@pos,??_setTCRT
  1620  000720  C002  F006         	movff	setTCRT@pos+1,??_setTCRT+1
  1621                           
  1622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1623                           ; Switch size 1, requested type "space"
  1624                           ; Number of cases is 1, Range of values is 0 to 0
  1625                           ; switch strategies available:
  1626                           ; Name         Instructions Cycles
  1627                           ; simple_byte            4     3 (average)
  1628                           ;	Chosen strategy is simple_byte
  1629  000724  5006               	movf	??_setTCRT+1,w,c
  1630  000726  0A00               	xorlw	0	; case 0
  1631  000728  A4D8               	btfss	status,2,c
  1632  00072A  0012               	return	
  1633                           
  1634                           ; Switch size 1, requested type "space"
  1635                           ; Number of cases is 8, Range of values is 0 to 7
  1636                           ; switch strategies available:
  1637                           ; Name         Instructions Cycles
  1638                           ; simple_byte           25    13 (average)
  1639                           ;	Chosen strategy is simple_byte
  1640  00072C  5005               	movf	??_setTCRT,w,c
  1641  00072E  0A00               	xorlw	0	; case 0
  1642  000730  B4D8               	btfsc	status,2,c
  1643  000732  D7C4               	goto	i2l230
  1644  000734  0A01               	xorlw	1	; case 1
  1645  000736  B4D8               	btfsc	status,2,c
  1646  000738  D7C7               	goto	i2l232
  1647  00073A  0A03               	xorlw	3	; case 2
  1648  00073C  B4D8               	btfsc	status,2,c
  1649  00073E  D7CA               	goto	i2l233
  1650  000740  0A01               	xorlw	1	; case 3
  1651  000742  B4D8               	btfsc	status,2,c
  1652  000744  D7CD               	goto	i2l234
  1653  000746  0A07               	xorlw	7	; case 4
  1654  000748  B4D8               	btfsc	status,2,c
  1655  00074A  D7D0               	goto	i2l235
  1656  00074C  0A01               	xorlw	1	; case 5
  1657  00074E  B4D8               	btfsc	status,2,c
  1658  000750  D7D3               	goto	i2l236
  1659  000752  0A03               	xorlw	3	; case 6
  1660  000754  B4D8               	btfsc	status,2,c
  1661  000756  D7D6               	goto	i2l237
  1662  000758  0A01               	xorlw	1	; case 7
  1663  00075A  A4D8               	btfss	status,2,c
  1664  00075C  0012               	return	
  1665  00075E  D7D8               	goto	i2l238
  1666  000760                     __end_of_setTCRT:
  1667                           	opt stack 0
  1668                           pclatu	equ	0xFFB
  1669                           pclath	equ	0xFFA
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           prodh	equ	0xFF4
  1675                           prodl	equ	0xFF3
  1676                           intcon	equ	0xFF2
  1677                           intcon2	equ	0xFF1
  1678                           postinc0	equ	0xFEE
  1679                           fsr0h	equ	0xFEA
  1680                           fsr0l	equ	0xFE9
  1681                           wreg	equ	0xFE8
  1682                           fsr1h	equ	0xFE2
  1683                           fsr1l	equ	0xFE1
  1684                           postinc2	equ	0xFDE
  1685                           postdec2	equ	0xFDD
  1686                           fsr2h	equ	0xFDA
  1687                           fsr2l	equ	0xFD9
  1688                           status	equ	0xFD8
  1689                           
  1690 ;; *************** function _INT0_CallBack *****************
  1691 ;; Defined at:
  1692 ;;		line 70 in file "mcc_generated_files/ext_int.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1706 ;;      Params:         0       0       0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0       0       0
  1709 ;;      Totals:         0       0       0       0       0       0       0
  1710 ;;Total ram usage:        0 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    1
  1713 ;; This function calls:
  1714 ;;		Absolute function
  1715 ;;		_INT0_DefaultInterruptHandler
  1716 ;; This function is called by:
  1717 ;;		_INT0_ISR
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text14
  1722  0008C6                     __ptext14:
  1723                           	opt stack 0
  1724  0008C6                     _INT0_CallBack:
  1725                           	opt stack 24
  1726                           
  1727                           ;ext_int.c: 73: if(INT0_InterruptHandler)
  1728                           
  1729                           ;incstack = 0
  1730  0008C6  5035               	movf	_INT0_InterruptHandler,w,c
  1731  0008C8  1036               	iorwf	_INT0_InterruptHandler+1,w,c
  1732  0008CA  B4D8               	btfsc	status,2,c
  1733  0008CC  0012               	return	
  1734                           
  1735                           ;ext_int.c: 74: {
  1736                           ;ext_int.c: 75: INT0_InterruptHandler();
  1737  0008CE  D801               	call	i2u47_48
  1738  0008D0  0012               	return	
  1739  0008D2                     i2u47_48:
  1740  0008D2  0005               	push	
  1741  0008D4  6EFA               	movwf	pclath,c
  1742  0008D6  5035               	movf	_INT0_InterruptHandler,w,c
  1743  0008D8  6EFD               	movwf	tosl,c
  1744  0008DA  5036               	movf	_INT0_InterruptHandler+1,w,c
  1745  0008DC  6EFE               	movwf	tosh,c
  1746  0008DE  50F8               	movf	tblptru,w,c
  1747  0008E0  6EFF               	movwf	tosu,c
  1748  0008E2  50FA               	movf	pclath,w,c
  1749  0008E4  0012               	return		;indir
  1750  0008E6                     __end_of_INT0_CallBack:
  1751                           	opt stack 0
  1752                           tosu	equ	0xFFF
  1753                           tosh	equ	0xFFE
  1754                           tosl	equ	0xFFD
  1755                           pclatu	equ	0xFFB
  1756                           pclath	equ	0xFFA
  1757                           tblptru	equ	0xFF8
  1758                           tblptrh	equ	0xFF7
  1759                           tblptrl	equ	0xFF6
  1760                           tablat	equ	0xFF5
  1761                           prodh	equ	0xFF4
  1762                           prodl	equ	0xFF3
  1763                           intcon	equ	0xFF2
  1764                           intcon2	equ	0xFF1
  1765                           postinc0	equ	0xFEE
  1766                           fsr0h	equ	0xFEA
  1767                           fsr0l	equ	0xFE9
  1768                           wreg	equ	0xFE8
  1769                           fsr1h	equ	0xFE2
  1770                           fsr1l	equ	0xFE1
  1771                           postinc2	equ	0xFDE
  1772                           postdec2	equ	0xFDD
  1773                           fsr2h	equ	0xFDA
  1774                           fsr2l	equ	0xFD9
  1775                           status	equ	0xFD8
  1776                           
  1777 ;; *************** function _INT0_DefaultInterruptHandler *****************
  1778 ;; Defined at:
  1779 ;;		line 89 in file "mcc_generated_files/ext_int.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		None
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1793 ;;      Params:         0       0       0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0
  1796 ;;      Totals:         0       0       0       0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_EXT_INT_Initialize
  1803 ;;		_INT0_CallBack
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text15
  1808  000984                     __ptext15:
  1809                           	opt stack 0
  1810  000984                     _INT0_DefaultInterruptHandler:
  1811                           	opt stack 24
  1812                           
  1813                           ;incstack = 0
  1814  000984  0012               	return		;funcret
  1815  000986                     __end_of_INT0_DefaultInterruptHandler:
  1816                           	opt stack 0
  1817                           tosu	equ	0xFFF
  1818                           tosh	equ	0xFFE
  1819                           tosl	equ	0xFFD
  1820                           pclatu	equ	0xFFB
  1821                           pclath	equ	0xFFA
  1822                           tblptru	equ	0xFF8
  1823                           tblptrh	equ	0xFF7
  1824                           tblptrl	equ	0xFF6
  1825                           tablat	equ	0xFF5
  1826                           prodh	equ	0xFF4
  1827                           prodl	equ	0xFF3
  1828                           intcon	equ	0xFF2
  1829                           intcon2	equ	0xFF1
  1830                           postinc0	equ	0xFEE
  1831                           fsr0h	equ	0xFEA
  1832                           fsr0l	equ	0xFE9
  1833                           wreg	equ	0xFE8
  1834                           fsr1h	equ	0xFE2
  1835                           fsr1l	equ	0xFE1
  1836                           postinc2	equ	0xFDE
  1837                           postdec2	equ	0xFDD
  1838                           fsr2h	equ	0xFDA
  1839                           fsr2l	equ	0xFD9
  1840                           status	equ	0xFD8
  1841                           
  1842 ;; *************** function _ADC_GetConversion *****************
  1843 ;; Defined at:
  1844 ;;		line 106 in file "mcc_generated_files/adc.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  channel         1    wreg     enum E6975
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  channel         1    4[COMRAM] enum E6975
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  2    0[COMRAM] unsigned int 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1858 ;;      Params:         2       0       0       0       0       0       0
  1859 ;;      Locals:         1       0       0       0       0       0       0
  1860 ;;      Temps:          2       0       0       0       0       0       0
  1861 ;;      Totals:         5       0       0       0       0       0       0
  1862 ;;Total ram usage:        5 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_INT0_ISR
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text16
  1872  000896                     __ptext16:
  1873                           	opt stack 0
  1874  000896                     _ADC_GetConversion:
  1875                           	opt stack 25
  1876                           
  1877                           ;incstack = 0
  1878                           ;ADC_GetConversion@channel stored from wreg
  1879  000896  6E05               	movwf	ADC_GetConversion@channel,c
  1880                           
  1881                           ;adc.c: 109: ADCON0bits.CHS = channel;
  1882  000898  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  1883  00089C  4603               	rlncf	??_ADC_GetConversion,f,c
  1884  00089E  4603               	rlncf	??_ADC_GetConversion,f,c
  1885  0008A0  50C2               	movf	4034,w,c	;volatile
  1886  0008A2  1803               	xorwf	??_ADC_GetConversion,w,c
  1887  0008A4  0B83               	andlw	-125
  1888  0008A6  1803               	xorwf	??_ADC_GetConversion,w,c
  1889  0008A8  6EC2               	movwf	4034,c	;volatile
  1890                           
  1891                           ;adc.c: 112: ADCON0bits.ADON = 1;
  1892  0008AA  80C2               	bsf	4034,0,c	;volatile
  1893                           
  1894                           ;adc.c: 115: ADCON0bits.GO_nDONE = 1;
  1895  0008AC  82C2               	bsf	4034,1,c	;volatile
  1896  0008AE                     
  1897                           ;adc.c: 119: {
  1898  0008AE  B2C2               	btfsc	4034,1,c	;volatile
  1899  0008B0  D7FE               	goto	i2l31
  1900                           
  1901                           ;adc.c: 120: }
  1902                           ;adc.c: 123: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  1903  0008B2  50C4               	movf	4036,w,c	;volatile
  1904  0008B4  6E04               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  1905  0008B6  6A03               	clrf	??_ADC_GetConversion& (0+255),c
  1906  0008B8  50C3               	movf	4035,w,c	;volatile
  1907  0008BA  2403               	addwf	??_ADC_GetConversion,w,c
  1908  0008BC  6E01               	movwf	?_ADC_GetConversion,c
  1909  0008BE  0E00               	movlw	0
  1910  0008C0  2004               	addwfc	??_ADC_GetConversion+1,w,c
  1911  0008C2  6E02               	movwf	?_ADC_GetConversion+1,c
  1912  0008C4  0012               	return	
  1913  0008C6                     __end_of_ADC_GetConversion:
  1914                           	opt stack 0
  1915                           tosu	equ	0xFFF
  1916                           tosh	equ	0xFFE
  1917                           tosl	equ	0xFFD
  1918                           pclatu	equ	0xFFB
  1919                           pclath	equ	0xFFA
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           prodh	equ	0xFF4
  1925                           prodl	equ	0xFF3
  1926                           intcon	equ	0xFF2
  1927                           intcon2	equ	0xFF1
  1928                           postinc0	equ	0xFEE
  1929                           fsr0h	equ	0xFEA
  1930                           fsr0l	equ	0xFE9
  1931                           wreg	equ	0xFE8
  1932                           fsr1h	equ	0xFE2
  1933                           fsr1l	equ	0xFE1
  1934                           postinc2	equ	0xFDE
  1935                           postdec2	equ	0xFDD
  1936                           fsr2h	equ	0xFDA
  1937                           fsr2l	equ	0xFD9
  1938                           status	equ	0xFD8
  1939                           tosu	equ	0xFFF
  1940                           tosh	equ	0xFFE
  1941                           tosl	equ	0xFFD
  1942                           pclatu	equ	0xFFB
  1943                           pclath	equ	0xFFA
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           prodh	equ	0xFF4
  1949                           prodl	equ	0xFF3
  1950                           intcon	equ	0xFF2
  1951                           intcon2	equ	0xFF1
  1952                           postinc0	equ	0xFEE
  1953                           fsr0h	equ	0xFEA
  1954                           fsr0l	equ	0xFE9
  1955                           wreg	equ	0xFE8
  1956                           fsr1h	equ	0xFE2
  1957                           fsr1l	equ	0xFE1
  1958                           postinc2	equ	0xFDE
  1959                           postdec2	equ	0xFDD
  1960                           fsr2h	equ	0xFDA
  1961                           fsr2l	equ	0xFD9
  1962                           status	equ	0xFD8
  1963                           
  1964                           	psect	text17
  1965  000000                     __ptext17:
  1966                           	opt stack 0
  1967                           tosu	equ	0xFFF
  1968                           tosh	equ	0xFFE
  1969                           tosl	equ	0xFFD
  1970                           pclatu	equ	0xFFB
  1971                           pclath	equ	0xFFA
  1972                           tblptru	equ	0xFF8
  1973                           tblptrh	equ	0xFF7
  1974                           tblptrl	equ	0xFF6
  1975                           tablat	equ	0xFF5
  1976                           prodh	equ	0xFF4
  1977                           prodl	equ	0xFF3
  1978                           intcon	equ	0xFF2
  1979                           intcon2	equ	0xFF1
  1980                           postinc0	equ	0xFEE
  1981                           fsr0h	equ	0xFEA
  1982                           fsr0l	equ	0xFE9
  1983                           wreg	equ	0xFE8
  1984                           fsr1h	equ	0xFE2
  1985                           fsr1l	equ	0xFE1
  1986                           postinc2	equ	0xFDE
  1987                           postdec2	equ	0xFDD
  1988                           fsr2h	equ	0xFDA
  1989                           fsr2l	equ	0xFD9
  1990                           status	equ	0xFD8
  1991                           
  1992                           	psect	rparam
  1993  0000                     tosu	equ	0xFFF
  1994                           tosh	equ	0xFFE
  1995                           tosl	equ	0xFFD
  1996                           pclatu	equ	0xFFB
  1997                           pclath	equ	0xFFA
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           prodh	equ	0xFF4
  2003                           prodl	equ	0xFF3
  2004                           intcon	equ	0xFF2
  2005                           intcon2	equ	0xFF1
  2006                           postinc0	equ	0xFEE
  2007                           fsr0h	equ	0xFEA
  2008                           fsr0l	equ	0xFE9
  2009                           wreg	equ	0xFE8
  2010                           fsr1h	equ	0xFE2
  2011                           fsr1l	equ	0xFE1
  2012                           postinc2	equ	0xFDE
  2013                           postdec2	equ	0xFDD
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8
  2017                           
  2018                           	psect	temp
  2019  000037                     btemp:
  2020                           	opt stack 0
  2021  000037                     	ds	1
  2022  0000                     int$flags	set	btemp
  2023  0000                     wtemp6	set	btemp+1
  2024                           tosu	equ	0xFFF
  2025                           tosh	equ	0xFFE
  2026                           tosl	equ	0xFFD
  2027                           pclatu	equ	0xFFB
  2028                           pclath	equ	0xFFA
  2029                           tblptru	equ	0xFF8
  2030                           tblptrh	equ	0xFF7
  2031                           tblptrl	equ	0xFF6
  2032                           tablat	equ	0xFF5
  2033                           prodh	equ	0xFF4
  2034                           prodl	equ	0xFF3
  2035                           intcon	equ	0xFF2
  2036                           intcon2	equ	0xFF1
  2037                           postinc0	equ	0xFEE
  2038                           fsr0h	equ	0xFEA
  2039                           fsr0l	equ	0xFE9
  2040                           wreg	equ	0xFE8
  2041                           fsr1h	equ	0xFE2
  2042                           fsr1l	equ	0xFE1
  2043                           postinc2	equ	0xFDE
  2044                           postdec2	equ	0xFDD
  2045                           fsr2h	equ	0xFDA
  2046                           fsr2l	equ	0xFD9
  2047                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        0
    BSS         16
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_drawToLeds
    _drawToLeds->_setLed
    _EXT_INT_Initialize->_INT0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_INT0_ISR
    _INT0_ISR->_setTCRT

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     538
                     _ADC_Initialize
             _PIN_MANAGER_Initialize
                  _SYSTEM_Initialize
                         _drawToLeds
 ---------------------------------------------------------------------------------
 (1) _drawToLeds                                           4     4      0     440
                                             32 COMRAM     4     4      0
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               6     2      4     350
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0     658
                                              8 COMRAM    18    18      0
                           _INT0_ISR
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             2     2      0     658
                                              6 COMRAM     2     2      0
                  _ADC_GetConversion
                      _INT0_CallBack
                            _setTCRT
 ---------------------------------------------------------------------------------
 (6) _setTCRT                                              6     2      4     502
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _INT0_CallBack                                        0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _PIN_MANAGER_Initialize
   _SYSTEM_Initialize
     _ADC_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
   _drawToLeds
     _setLed

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _ADC_GetConversion
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
     _setTCRT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      36       1       57.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36       9        0.0%
DATA                 0      0      36      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Nov 26 20:31:00 2017

                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l242 0676  
                                     l250 065E                                       l251 066A  
                                     l243 0616                                       l245 0622  
                                     l246 062E                                       l247 063A  
                                     l255 080A                                       l248 0646  
                                     l249 0652                                       l257 0850  
                                     l267 092A                              __CFG_CPB$OFF 000000  
                                     u600 0840                                       u505 0636  
                                     u506 0638                                       u610 0842  
                            __CFG_CPD$OFF 000000                                       u515 0642  
                                     u516 0644                                       u525 064E  
                                     u526 0650                                       u535 065A  
                                     u536 065C                                       u545 0666  
                                     u546 0668                                       u555 0672  
                                     u556 0674                                       u485 061E  
                                     u486 0620                                       u495 062A  
                                     u496 062C                ??_INT0_SetInterruptHandler 001D  
                             drawToLeds@i 0023                                       tosl 000FFD  
                                     wreg 000FE8                             _INT0_CallBack 08C6  
                                    l1206 07FA                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    i2l31 08AE                                      i2l87 005C  
                                    _WPUB 000F61                                      _main 091A  
                                    _tcrt 0025                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0037  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00A8  
                           __CFG_IESO$OFF 000000                              ___param_bank 000000  
                        __end_of_INT0_ISR 07F2            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 0976                                     ?_main 0001  
                          __CFG_DEBUG$OFF 000000                                     i2l110 0772  
                                   i2l111 07EA                                     i2l230 06BC  
                                   i2l232 06C8                                     i2l233 06D4  
                                   i2l234 06E0                                     i2l235 06EC  
                                   i2l236 06F8                                     i2l229 071C  
                                   i2l237 0704                                     i2l238 0710  
                                   _TRISA 000F92                                     _TRISB 000F93  
                          ?_INT0_CallBack 0001                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                          __end_of_TRESHOLD 0613  
                         __end_of_setTCRT 0760                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                                     wtemp6 0038  
                          __CFG_HFOFST$ON 000000                            __CFG_PBADEN$ON 000000  
                         __initialization 08E6                              __end_of_main 0930  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0025  
                           __activetblptr 000002                  __size_of_SPI2_Initialize 000E  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                          __CFG_WDTEN$OFF 000000                                    _OSCCON 000FD3  
                          __CFG_XINST$OFF 000000                            __CFG_STVREN$ON 000000  
                                  clear_0 08EC                                    _setLed 0614  
                         ??_INT0_CallBack 0001                                 ??_setTCRT 0005  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                ADC_GetConversion@channel 0005  INT0_SetInterruptHandler@InterruptHandler 001B  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 0900  
                              __accesstop 0060                   __end_of__initialization 08F2  
                               ?_INT0_ISR 0001                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                                 INT0_ISR@i 0007  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 001D  
                      __end_of_AN_CHANNEL 0611               __size_of_EXT_INT_Initialize 0014  
               __end_of_SYSTEM_Initialize 091A                         ??_SPI2_Initialize 001B  
                         __CFG_PLLCFG$OFF 000000                               setLed@value 001D  
                   _INT0_InterruptHandler 0035                                ??_INT0_ISR 0007  
                              __pnvCOMRAM 0035                        __CFG_CCP2MX$PORTC1 000000  
                      __CFG_CCP3MX$PORTB5 000000                                   ?_setLed 001B  
                 __size_of_ADC_Initialize 0016                                   _OSCCON2 000FD2  
                              _drawToLeds 07F2                                   i2u40_45 06DC  
                                 i2u40_46 06DE                                   i2u41_45 06E8  
                                 i2u41_46 06EA                                   i2u42_45 06F4  
                                 i2u42_46 06F6                                   i2u43_45 0700  
                                 i2u43_46 0702                                   i2u44_45 070C  
                                 i2u44_46 070E                                   i2u45_45 0718  
                                 i2u45_46 071A                                   _OSCTUNE 000F9B  
                                 i2u38_45 06C4                                   i2u38_46 06C6  
                                 i2u39_45 06D0                                   i2u39_46 06D2  
                                 i2u47_48 08D2                                   i2u57_40 07EA  
                                 i2u73_47 0788                                   _SSP2BUF 000F6F  
       __size_of_INT0_SetInterruptHandler 000A                 ?_INT0_SetInterruptHandler 001B  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                              __psmallconst 0600  
                                 __pcinit 08E6                                   __ramtop 0600  
                         __size_of_setLed 00A6                                   __ptext0 091A  
                                 __ptext1 07F2                                   __ptext2 0614  
                                 __ptext3 0900                                   __ptext4 095A  
                                 __ptext5 0852                                   __ptext6 0968  
                                 __ptext7 0980                                   __ptext8 0946  
                                 __ptext9 0976                     _OSCILLATOR_Initialize 0968  
                                 _setTCRT 06BA                  ??_PIN_MANAGER_Initialize 001B  
              __size_of_SYSTEM_Initialize 001A                      end_of_initialization 08F2  
                           __Lmediumconst 0000                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                             ?_drawToLeds 0001                              setTCRT@value 0003  
                       __size_of_INT0_ISR 0092              __end_of_INTERRUPT_Initialize 0984  
    __end_of_INT0_DefaultInterruptHandler 0986     __size_of_INT0_DefaultInterruptHandler 0002  
            _INT0_DefaultInterruptHandler 0984                            _ADC_Initialize 0930  
                  ?_OSCILLATOR_Initialize 0001                           _SPI2_Initialize 095A  
                          __end_of_setLed 06BA                     __end_of_INT0_CallBack 08E6  
                     start_initialization 08E6           __size_of_PIN_MANAGER_Initialize 0044  
                     __size_of_drawToLeds 0060                    __end_of_ADC_Initialize 0946  
              __end_of_EXT_INT_Initialize 095A                                  ??_setLed 001F  
           ?_INT0_DefaultInterruptHandler 0001                               __pbssCOMRAM 0025  
                              setTCRT@pos 0001          __end_of_INT0_SetInterruptHandler 0980  
                  _PIN_MANAGER_Initialize 0852                                 __pintcode 0008  
                 __end_of_SPI2_Initialize 0968                           ?_ADC_Initialize 0001  
            ??_INTERRUPT_InterruptManager 0009                          __CFG_PRICLKEN$ON 000000  
                             __smallconst 0600                                  ?_setTCRT 0001  
                    _INTERRUPT_Initialize 0980                                  _INT0_ISR 0760  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                                _LATEbits 000F8D       __size_of_INTERRUPT_InterruptManager 00A0  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _SSP2CON1 000F6C                                  _SSP2CON3 000F69  
                                _SSP2STAT 000F6D                                  _TRESHOLD 0611  
                              _ADCON0bits 000FC2                              ??_drawToLeds 0021  
          ??_INT0_DefaultInterruptHandler 0001                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                  _INT0_SetInterruptHandler 0976  
                                __Hrparam 0000                                  __Lrparam 0000  
                       _ADC_GetConversion 0896                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTD2 000000                        __end_of_drawToLeds 0852  
                        ?_SPI2_Initialize 0001                   ??_OSCILLATOR_Initialize 001B  
                      ?_ADC_GetConversion 0001                       ??_ADC_GetConversion 0003  
                               setLed@pos 001B                          __size_of_setTCRT 00A6  
                              _AN_CHANNEL 0601                                  __ptext10 0930  
                                __ptext12 0760                                  __ptext13 06BA  
                                __ptext14 08C6                                  __ptext15 0984  
                                __ptext16 0896                                  __ptext17 0000  
                            _SSP2CON1bits 000F6C                             __size_of_main 0016  
               __end_of_ADC_GetConversion 08C6                                  int$flags 0037  
      __end_of_INTERRUPT_InterruptManager 00A8                _INTERRUPT_InterruptManager 0008  
                            _SSP2STATbits 000F6D                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 001B                        _EXT_INT_Initialize 0946  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
                     ?_EXT_INT_Initialize 0001                          ??_ADC_Initialize 001B  
                  __size_of_INT0_CallBack 0020                      ??_EXT_INT_Initialize 001D  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 0896  
                       __CFG_FOSC$INTIO67 000000                __size_of_ADC_GetConversion 0030  
