

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Dec 10 20:13:57 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.44
    34                           ; Generated 14/09/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F45K22 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	smallconst
    69  000600                     __psmallconst:
    70                           	opt stack 0
    71  000600  00                 	db	0
    72  000601                     _AN_CHANNEL:
    73                           	opt stack 0
    74  000601  0012               	dw	18
    75  000603  001B               	dw	27
    76  000605  0009               	dw	9
    77  000607  000D               	dw	13
    78  000609  0001               	dw	1
    79  00060B  0004               	dw	4
    80  00060D  0007               	dw	7
    81  00060F  000F               	dw	15
    82  000611                     __end_of_AN_CHANNEL:
    83                           	opt stack 0
    84  000611                     _TRESHOLD:
    85                           	opt stack 0
    86  000611  8000               	dw	32768
    87  000613                     __end_of_TRESHOLD:
    88                           	opt stack 0
    89  000613  00                 	db	0	; dummy byte at the end
    90  0000                     
    91                           	psect	nvCOMRAM
    92  00003A                     __pnvCOMRAM:
    93                           	opt stack 0
    94  00003A                     _INT0_InterruptHandler:
    95                           	opt stack 0
    96  00003A                     	ds	2
    97  0000                     _ANSELA	set	3896
    98  0000                     _ANSELE	set	3900
    99  0000                     _ANSELD	set	3899
   100  0000                     _ANSELB	set	3897
   101  0000                     _ANSELC	set	3898
   102  0000                     _LATEbits	set	3981
   103  0000                     _LATAbits	set	3977
   104  0000                     _LATBbits	set	3978
   105  0000                     _LATDbits	set	3980
   106  0000                     _LATCbits	set	3979
   107  0000                     _SSP2STATbits	set	3949
   108  0000                     _SSP2CON1bits	set	3948
   109  0000                     _SSP2BUF	set	3951
   110  0000                     _SSP2CON3	set	3945
   111  0000                     _SSP2CON1	set	3948
   112  0000                     _SSP2STAT	set	3949
   113  0000                     _OSCTUNE	set	3995
   114  0000                     _OSCCON2	set	4050
   115  0000                     _OSCCON	set	4051
   116  0000                     _INTCONbits	set	4082
   117  0000                     _RCONbits	set	4048
   118  0000                     _INTCON2bits	set	4081
   119  0000                     _WPUB	set	3937
   120  0000                     _TRISD	set	3989
   121  0000                     _TRISC	set	3988
   122  0000                     _TRISB	set	3987
   123  0000                     _TRISA	set	3986
   124  0000                     _TRISE	set	3990
   125  0000                     _LATC	set	3979
   126  0000                     _LATB	set	3978
   127  0000                     _LATA	set	3977
   128  0000                     _LATD	set	3980
   129  0000                     _LATE	set	3981
   130  0000                     _ADCON0bits	set	4034
   131  0000                     _ADRESH	set	4036
   132  0000                     _ADRESL	set	4035
   133  0000                     _ADCON2	set	4032
   134  0000                     _ADCON1	set	4033
   135  0000                     _ADCON0	set	4034
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  000964                     __pcinit:
   141                           	opt stack 0
   142  000964                     start_initialization:
   143                           	opt stack 0
   144  000964                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to COMRAM (17 bytes)
   148  000964  EE00  F029         	lfsr	0,__pbssCOMRAM
   149  000968  0E11               	movlw	17
   150  00096A                     clear_0:
   151  00096A  6AEE               	clrf	postinc0,c
   152  00096C  06E8               	decf	wreg,f,c
   153  00096E  E1FD               	bnz	clear_0
   154  000970                     end_of_initialization:
   155                           	opt stack 0
   156  000970                     __end_of__initialization:
   157                           	opt stack 0
   158  000970  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   159  000972  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   160  000974  0E00               	movlw	low (__Lmediumconst shr (0+16))
   161  000976  6EF8               	movwf	tblptru,c
   162  000978  0100               	movlb	0
   163  00097A  EFF7  F003         	goto	_main	;jump to C main() function
   164                           tblptru	equ	0xFF8
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           
   168                           	psect	bssCOMRAM
   169  000029                     __pbssCOMRAM:
   170                           	opt stack 0
   171  000029                     _tcrt:
   172                           	opt stack 0
   173  000029                     	ds	16
   174  000039                     _toRedrawLeds:
   175                           	opt stack 0
   176  000039                     	ds	1
   177                           tblptru	equ	0xFF8
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           
   181                           	psect	cstackCOMRAM
   182  000001                     __pcstackCOMRAM:
   183                           	opt stack 0
   184  000001                     ?_ADC_GetConversion:
   185                           	opt stack 0
   186  000001                     setTCRT@pos:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x0
   190  000001                     	ds	2
   191  000003                     ??_ADC_GetConversion:
   192  000003                     setTCRT@value:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x2
   196  000003                     	ds	2
   197  000005                     ??_setTCRT:
   198  000005                     ADC_GetConversion@channel:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x4
   202  000005                     	ds	2
   203  000007                     INT0_ISR@i:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0x6
   207  000007                     	ds	2
   208  000009                     ??_INTERRUPT_InterruptManager:
   209                           
   210                           ; 1 bytes @ 0x8
   211  000009                     	ds	18
   212  00001B                     SPI2_Exchange8bit@dummyRead:
   213                           	opt stack 0
   214  00001B                     INT0_SetInterruptHandler@InterruptHandler:
   215                           	opt stack 0
   216  00001B                     setLed@pos:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x1A
   220  00001B                     	ds	1
   221  00001C                     SPI2_Exchange8bit@data:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x1B
   225  00001C                     	ds	1
   226  00001D                     setLed@value:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0x1C
   230  00001D                     	ds	2
   231  00001F                     ??_setLed:
   232                           
   233                           ; 1 bytes @ 0x1E
   234  00001F                     	ds	2
   235  000021                     
   236                           ; 1 bytes @ 0x20
   237  000021                     	ds	2
   238  000023                     drawToLeds@i:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x22
   242  000023                     	ds	2
   243  000025                     ??_main:
   244                           
   245                           ; 1 bytes @ 0x24
   246  000025                     	ds	2
   247  000027                     main@dummyRead:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x26
   251  000027                     	ds	1
   252  000028                     main@ledPositionToSend:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x27
   256  000028                     	ds	1
   257                           tblptru	equ	0xFF8
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 144 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;  ledPositionT    1   39[COMRAM] unsigned char 
   271 ;;  dummyRead       1   38[COMRAM] unsigned char 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   281 ;;      Params:         0       0       0       0       0       0       0
   282 ;;      Locals:         2       0       0       0       0       0       0
   283 ;;      Temps:          2       0       0       0       0       0       0
   284 ;;      Totals:         4       0       0       0       0       0       0
   285 ;;Total ram usage:        4 bytes
   286 ;; Hardware stack levels required when called:    7
   287 ;; This function calls:
   288 ;;		_ADC_Initialize
   289 ;;		_PIN_MANAGER_Initialize
   290 ;;		_SPI2_Exchange8bit
   291 ;;		_SYSTEM_Initialize
   292 ;;		_drawToLeds
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text0
   299  0007EE                     __ptext0:
   300                           	opt stack 0
   301  0007EE                     _main:
   302                           	opt stack 24
   303                           
   304                           ;main.c: 147: SYSTEM_Initialize();
   305                           
   306                           ;incstack = 0
   307  0007EE  ECBF  F004         	call	_SYSTEM_Initialize	;wreg free
   308                           
   309                           ;main.c: 166: (INTCONbits.GIE = 1);
   310  0007F2  8EF2               	bsf	intcon,7,c	;volatile
   311                           
   312                           ;main.c: 172: (INTCONbits.PEIE = 1);
   313  0007F4  8CF2               	bsf	intcon,6,c	;volatile
   314                           
   315                           ;main.c: 177: PIN_MANAGER_Initialize();
   316  0007F6  EC68  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   317                           
   318                           ;main.c: 178: ADC_Initialize();
   319  0007FA  ECD9  F004         	call	_ADC_Initialize	;wreg free
   320  0007FE                     
   321                           ;main.c: 181: {
   322                           ;main.c: 185: drawToLeds();
   323  0007FE  EC38  F004         	call	_drawToLeds	;wreg free
   324                           
   325                           ;main.c: 186: toRedrawLeds = 0;
   326  000802  0E00               	movlw	0
   327  000804  6E39               	movwf	_toRedrawLeds,c
   328                           
   329                           ;main.c: 188: uint8_t ledPositionToSend;
   330                           ;main.c: 189: uint8_t dummyRead;
   331                           ;main.c: 191: while(!toRedrawLeds)
   332  000806  D030               	goto	l279
   333  000808                     
   334                           ;main.c: 192: {
   335                           ;main.c: 193: ledPositionToSend = SPI2_Exchange8bit(0b11100011);
   336  000808  0EE3               	movlw	227
   337  00080A  ECCC  F004         	call	_SPI2_Exchange8bit
   338  00080E  6E28               	movwf	main@ledPositionToSend,c
   339                           
   340                           ;main.c: 194: if(ledPositionToSend < 8)
   341  000810  0E08               	movlw	8
   342  000812  6028               	cpfslt	main@ledPositionToSend,c
   343  000814  D029               	goto	l279
   344                           
   345                           ;main.c: 195: {
   346                           ;main.c: 196: dummyRead = SPI2_Exchange8bit((uint8_t)(tcrt[ledPositionToSend] >> 8));
   347  000816  5028               	movf	main@ledPositionToSend,w,c
   348  000818  0D02               	mullw	2
   349  00081A  0E29               	movlw	low _tcrt
   350  00081C  24F3               	addwf	prodl,w,c
   351  00081E  6ED9               	movwf	fsr2l,c
   352  000820  0E00               	movlw	high _tcrt
   353  000822  20F4               	addwfc	prodh,w,c
   354  000824  6EDA               	movwf	fsr2h,c
   355  000826  CFDE F025          	movff	postinc2,??_main
   356  00082A  CFDD F026          	movff	postdec2,??_main+1
   357  00082E  C026  F025         	movff	??_main+1,??_main
   358  000832  6A26               	clrf	??_main+1,c
   359  000834  5025               	movf	??_main,w,c
   360  000836  ECCC  F004         	call	_SPI2_Exchange8bit
   361  00083A  6E27               	movwf	main@dummyRead,c
   362                           
   363                           ;main.c: 197: if(dummyRead<8)
   364  00083C  0E08               	movlw	8
   365  00083E  6027               	cpfslt	main@dummyRead,c
   366  000840  D013               	goto	l279
   367                           
   368                           ;main.c: 198: dummyRead = SPI2_Exchange8bit((uint8_t)(tcrt[ledPositionToSend] >> 8));
   369  000842  5028               	movf	main@ledPositionToSend,w,c
   370  000844  0D02               	mullw	2
   371  000846  0E29               	movlw	low _tcrt
   372  000848  24F3               	addwf	prodl,w,c
   373  00084A  6ED9               	movwf	fsr2l,c
   374  00084C  0E00               	movlw	high _tcrt
   375  00084E  20F4               	addwfc	prodh,w,c
   376  000850  6EDA               	movwf	fsr2h,c
   377  000852  CFDE F025          	movff	postinc2,??_main
   378  000856  CFDD F026          	movff	postdec2,??_main+1
   379  00085A  C026  F025         	movff	??_main+1,??_main
   380  00085E  6A26               	clrf	??_main+1,c
   381  000860  5025               	movf	??_main,w,c
   382  000862  ECCC  F004         	call	_SPI2_Exchange8bit
   383  000866  6E27               	movwf	main@dummyRead,c
   384  000868                     l279:
   385  000868  5039               	movf	_toRedrawLeds,w,c
   386  00086A  A4D8               	btfss	status,2,c
   387  00086C  D7C8               	goto	l275
   388  00086E  D7CC               	goto	l277
   389  000870                     __end_of_main:
   390                           	opt stack 0
   391                           tblptru	equ	0xFF8
   392                           prodh	equ	0xFF4
   393                           prodl	equ	0xFF3
   394                           intcon	equ	0xFF2
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postinc2	equ	0xFDE
   398                           postdec2	equ	0xFDD
   399                           fsr2h	equ	0xFDA
   400                           fsr2l	equ	0xFD9
   401                           status	equ	0xFD8
   402                           
   403 ;; *************** function _drawToLeds *****************
   404 ;; Defined at:
   405 ;;		line 127 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;  i               2   34[COMRAM] int 
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   419 ;;      Params:         0       0       0       0       0       0       0
   420 ;;      Locals:         2       0       0       0       0       0       0
   421 ;;      Temps:          2       0       0       0       0       0       0
   422 ;;      Totals:         4       0       0       0       0       0       0
   423 ;;Total ram usage:        4 bytes
   424 ;; Hardware stack levels used:    1
   425 ;; Hardware stack levels required when called:    5
   426 ;; This function calls:
   427 ;;		_setLed
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text1
   434  000870                     __ptext1:
   435                           	opt stack 0
   436  000870                     _drawToLeds:
   437                           	opt stack 25
   438                           
   439                           ;main.c: 129: for(int i = 0; i<8; i++)
   440                           
   441                           ;incstack = 0
   442  000870  0E00               	movlw	0
   443  000872  6E24               	movwf	drawToLeds@i+1,c
   444  000874  0E00               	movlw	0
   445  000876  6E23               	movwf	drawToLeds@i,c
   446  000878                     l1259:
   447  000878  BE24               	btfsc	drawToLeds@i+1,7,c
   448  00087A  D006               	goto	l263
   449  00087C  5024               	movf	drawToLeds@i+1,w,c
   450  00087E  E127               	bnz	l265
   451  000880  0E08               	movlw	8
   452  000882  5C23               	subwf	drawToLeds@i,w,c
   453  000884  B0D8               	btfsc	status,0,c
   454  000886  0012               	return	
   455  000888                     l263:
   456                           
   457                           ;main.c: 130: setLed(i, tcrt[i]<TRESHOLD);
   458  000888  C023  F01B         	movff	drawToLeds@i,setLed@pos
   459  00088C  C024  F01C         	movff	drawToLeds@i+1,setLed@pos+1
   460  000890  0E11               	movlw	low _TRESHOLD
   461  000892  6EF6               	movwf	tblptrl,c
   462  000894                     	if	1	;There is more than 1 active tblptr byte
   463  000894  0E06               	movlw	high _TRESHOLD
   464  000896  6EF7               	movwf	tblptrh,c
   465  000898                     	endif
   466  000898                     	if	0	;There are less than 3 active tblptr bytes
   467  000898                     	endif
   468  000898  90D8               	bcf	status,0,c
   469  00089A  3423               	rlcf	drawToLeds@i,w,c
   470  00089C  6ED9               	movwf	fsr2l,c
   471  00089E  3424               	rlcf	drawToLeds@i+1,w,c
   472  0008A0  6EDA               	movwf	fsr2h,c
   473  0008A2  0E29               	movlw	low _tcrt
   474  0008A4  26D9               	addwf	fsr2l,f,c
   475  0008A6  0E00               	movlw	high _tcrt
   476  0008A8  22DA               	addwfc	fsr2h,f,c
   477  0008AA  0009               	tblrd		*+
   478  0008AC  50F5               	movf	tablat,w,c
   479  0008AE  5CDE               	subwf	postinc2,w,c
   480  0008B0  0009               	tblrd		*+
   481  0008B2  50F5               	movf	tablat,w,c
   482  0008B4  58DE               	subwfb	postinc2,w,c
   483  0008B6  B0D8               	btfsc	status,0,c
   484  0008B8  D002               	goto	u650
   485  0008BA  0E01               	movlw	1
   486  0008BC  D001               	goto	u660
   487  0008BE                     u650:
   488  0008BE  0E00               	movlw	0
   489  0008C0                     u660:
   490  0008C0  6E1D               	movwf	setLed@value,c
   491  0008C2  6A1E               	clrf	setLed@value+1,c
   492  0008C4  EC0A  F003         	call	_setLed	;wreg free
   493  0008C8  4A23               	infsnz	drawToLeds@i,f,c
   494  0008CA  2A24               	incf	drawToLeds@i+1,f,c
   495  0008CC  D7D5               	goto	l1259
   496  0008CE                     l265:
   497  0008CE  0012               	return		;funcret
   498  0008D0                     __end_of_drawToLeds:
   499                           	opt stack 0
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           prodh	equ	0xFF4
   505                           prodl	equ	0xFF3
   506                           intcon	equ	0xFF2
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postinc2	equ	0xFDE
   510                           postdec2	equ	0xFDD
   511                           fsr2h	equ	0xFDA
   512                           fsr2l	equ	0xFD9
   513                           status	equ	0xFD8
   514                           
   515 ;; *************** function _setLed *****************
   516 ;; Defined at:
   517 ;;		line 96 in file "main.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  pos             2   26[COMRAM] int 
   520 ;;  value           2   28[COMRAM] int 
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, status,2, status,0
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   532 ;;      Params:         4       0       0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0       0       0
   534 ;;      Temps:          2       0       0       0       0       0       0
   535 ;;      Totals:         6       0       0       0       0       0       0
   536 ;;Total ram usage:        6 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; Hardware stack levels required when called:    4
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		_drawToLeds
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text2
   547  000614                     __ptext2:
   548                           	opt stack 0
   549  000614                     _setLed:
   550                           	opt stack 25
   551                           
   552                           ;main.c: 98: switch(pos)
   553                           
   554                           ;incstack = 0
   555  000614  D030               	goto	l250
   556  000616                     l251:
   557                           
   558                           ;main.c: 101: LATCbits.LATC4 = value;
   559  000616  B01D               	btfsc	setLed@value,0,c
   560  000618  D002               	bra	u525
   561  00061A  988B               	bcf	3979,4,c	;volatile
   562  00061C  D001               	bra	u526
   563  00061E                     u525:
   564  00061E  888B               	bsf	3979,4,c	;volatile
   565  000620                     u526:
   566                           
   567                           ;main.c: 102: break;
   568  000620  0012               	return	
   569  000622                     l253:
   570                           
   571                           ;main.c: 104: LATDbits.LATD5 = value;
   572  000622  B01D               	btfsc	setLed@value,0,c
   573  000624  D002               	bra	u535
   574  000626  9A8C               	bcf	3980,5,c	;volatile
   575  000628  D001               	bra	u536
   576  00062A                     u535:
   577  00062A  8A8C               	bsf	3980,5,c	;volatile
   578  00062C                     u536:
   579                           
   580                           ;main.c: 105: break;
   581  00062C  0012               	return	
   582  00062E                     l254:
   583                           
   584                           ;main.c: 107: LATBbits.LATB1 = value;
   585  00062E  B01D               	btfsc	setLed@value,0,c
   586  000630  D002               	bra	u545
   587  000632  928A               	bcf	3978,1,c	;volatile
   588  000634  D001               	bra	u546
   589  000636                     u545:
   590  000636  828A               	bsf	3978,1,c	;volatile
   591  000638                     u546:
   592                           
   593                           ;main.c: 108: break;
   594  000638  0012               	return	
   595  00063A                     l255:
   596                           
   597                           ;main.c: 110: LATDbits.LATD2 = value;
   598  00063A  B01D               	btfsc	setLed@value,0,c
   599  00063C  D002               	bra	u555
   600  00063E  948C               	bcf	3980,2,c	;volatile
   601  000640  D001               	bra	u556
   602  000642                     u555:
   603  000642  848C               	bsf	3980,2,c	;volatile
   604  000644                     u556:
   605                           
   606                           ;main.c: 111: break;
   607  000644  0012               	return	
   608  000646                     l256:
   609                           
   610                           ;main.c: 113: LATAbits.LATA0 = value;
   611  000646  B01D               	btfsc	setLed@value,0,c
   612  000648  D002               	bra	u565
   613  00064A  9089               	bcf	3977,0,c	;volatile
   614  00064C  D001               	bra	u566
   615  00064E                     u565:
   616  00064E  8089               	bsf	3977,0,c	;volatile
   617  000650                     u566:
   618                           
   619                           ;main.c: 114: break;
   620  000650  0012               	return	
   621  000652                     l257:
   622                           
   623                           ;main.c: 116: LATAbits.LATA3 = value;
   624  000652  B01D               	btfsc	setLed@value,0,c
   625  000654  D002               	bra	u575
   626  000656  9689               	bcf	3977,3,c	;volatile
   627  000658  D001               	bra	u576
   628  00065A                     u575:
   629  00065A  8689               	bsf	3977,3,c	;volatile
   630  00065C                     u576:
   631                           
   632                           ;main.c: 117: break;
   633  00065C  0012               	return	
   634  00065E                     l258:
   635                           
   636                           ;main.c: 119: LATEbits.LATE0 = value;
   637  00065E  B01D               	btfsc	setLed@value,0,c
   638  000660  D002               	bra	u585
   639  000662  908D               	bcf	3981,0,c	;volatile
   640  000664  D001               	bra	u586
   641  000666                     u585:
   642  000666  808D               	bsf	3981,0,c	;volatile
   643  000668                     u586:
   644                           
   645                           ;main.c: 120: break;
   646  000668  0012               	return	
   647  00066A                     l259:
   648                           
   649                           ;main.c: 122: LATCbits.LATC1 = value;
   650  00066A  B01D               	btfsc	setLed@value,0,c
   651  00066C  D002               	bra	u595
   652  00066E  928B               	bcf	3979,1,c	;volatile
   653  000670  D001               	bra	u596
   654  000672                     u595:
   655  000672  828B               	bsf	3979,1,c	;volatile
   656  000674                     u596:
   657                           
   658                           ;main.c: 124: }
   659                           
   660                           ;main.c: 123: break;
   661  000674  0012               	return	
   662  000676                     l250:
   663  000676  C01B  F01F         	movff	setLed@pos,??_setLed
   664  00067A  C01C  F020         	movff	setLed@pos+1,??_setLed+1
   665                           
   666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   667                           ; Switch size 1, requested type "space"
   668                           ; Number of cases is 1, Range of values is 0 to 0
   669                           ; switch strategies available:
   670                           ; Name         Instructions Cycles
   671                           ; simple_byte            4     3 (average)
   672                           ;	Chosen strategy is simple_byte
   673  00067E  5020               	movf	??_setLed+1,w,c
   674  000680  0A00               	xorlw	0	; case 0
   675  000682  A4D8               	btfss	status,2,c
   676  000684  0012               	return	
   677                           
   678                           ; Switch size 1, requested type "space"
   679                           ; Number of cases is 8, Range of values is 0 to 7
   680                           ; switch strategies available:
   681                           ; Name         Instructions Cycles
   682                           ; simple_byte           25    13 (average)
   683                           ;	Chosen strategy is simple_byte
   684  000686  501F               	movf	??_setLed,w,c
   685  000688  0A00               	xorlw	0	; case 0
   686  00068A  B4D8               	btfsc	status,2,c
   687  00068C  D7C4               	goto	l251
   688  00068E  0A01               	xorlw	1	; case 1
   689  000690  B4D8               	btfsc	status,2,c
   690  000692  D7C7               	goto	l253
   691  000694  0A03               	xorlw	3	; case 2
   692  000696  B4D8               	btfsc	status,2,c
   693  000698  D7CA               	goto	l254
   694  00069A  0A01               	xorlw	1	; case 3
   695  00069C  B4D8               	btfsc	status,2,c
   696  00069E  D7CD               	goto	l255
   697  0006A0  0A07               	xorlw	7	; case 4
   698  0006A2  B4D8               	btfsc	status,2,c
   699  0006A4  D7D0               	goto	l256
   700  0006A6  0A01               	xorlw	1	; case 5
   701  0006A8  B4D8               	btfsc	status,2,c
   702  0006AA  D7D3               	goto	l257
   703  0006AC  0A03               	xorlw	3	; case 6
   704  0006AE  B4D8               	btfsc	status,2,c
   705  0006B0  D7D6               	goto	l258
   706  0006B2  0A01               	xorlw	1	; case 7
   707  0006B4  A4D8               	btfss	status,2,c
   708  0006B6  0012               	return	
   709  0006B8  D7D8               	goto	l259
   710  0006BA                     __end_of_setLed:
   711                           	opt stack 0
   712                           tblptru	equ	0xFF8
   713                           tblptrh	equ	0xFF7
   714                           tblptrl	equ	0xFF6
   715                           tablat	equ	0xFF5
   716                           prodh	equ	0xFF4
   717                           prodl	equ	0xFF3
   718                           intcon	equ	0xFF2
   719                           postinc0	equ	0xFEE
   720                           wreg	equ	0xFE8
   721                           postinc2	equ	0xFDE
   722                           postdec2	equ	0xFDD
   723                           fsr2h	equ	0xFDA
   724                           fsr2l	equ	0xFD9
   725                           status	equ	0xFD8
   726                           
   727 ;; *************** function _SYSTEM_Initialize *****************
   728 ;; Defined at:
   729 ;;		line 111 in file "mcc_generated_files/mcc.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   743 ;;      Params:         0       0       0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    6
   750 ;; This function calls:
   751 ;;		_ADC_Initialize
   752 ;;		_EXT_INT_Initialize
   753 ;;		_INTERRUPT_Initialize
   754 ;;		_OSCILLATOR_Initialize
   755 ;;		_PIN_MANAGER_Initialize
   756 ;;		_SPI2_Initialize
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text3
   763  00097E                     __ptext3:
   764                           	opt stack 0
   765  00097E                     _SYSTEM_Initialize:
   766                           	opt stack 24
   767                           
   768                           ;mcc.c: 114: INTERRUPT_Initialize();
   769                           
   770                           ;incstack = 0
   771  00097E  EC01  F005         	call	_INTERRUPT_Initialize	;wreg free
   772                           
   773                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   774  000982  EC68  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   775                           
   776                           ;mcc.c: 116: OSCILLATOR_Initialize();
   777  000986  ECF5  F004         	call	_OSCILLATOR_Initialize	;wreg free
   778                           
   779                           ;mcc.c: 117: SPI2_Initialize();
   780  00098A  ECEE  F004         	call	_SPI2_Initialize	;wreg free
   781                           
   782                           ;mcc.c: 118: EXT_INT_Initialize();
   783  00098E  ECE4  F004         	call	_EXT_INT_Initialize	;wreg free
   784                           
   785                           ;mcc.c: 119: ADC_Initialize();
   786  000992  ECD9  F004         	call	_ADC_Initialize	;wreg free
   787  000996  0012               	return		;funcret
   788  000998                     __end_of_SYSTEM_Initialize:
   789                           	opt stack 0
   790                           tblptru	equ	0xFF8
   791                           tblptrh	equ	0xFF7
   792                           tblptrl	equ	0xFF6
   793                           tablat	equ	0xFF5
   794                           prodh	equ	0xFF4
   795                           prodl	equ	0xFF3
   796                           intcon	equ	0xFF2
   797                           postinc0	equ	0xFEE
   798                           wreg	equ	0xFE8
   799                           postinc2	equ	0xFDE
   800                           postdec2	equ	0xFDD
   801                           fsr2h	equ	0xFDA
   802                           fsr2l	equ	0xFD9
   803                           status	equ	0xFD8
   804                           
   805 ;; *************** function _SPI2_Initialize *****************
   806 ;; Defined at:
   807 ;;		line 65 in file "mcc_generated_files/spi2.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, status,2
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   821 ;;      Params:         0       0       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0       0       0
   824 ;;      Totals:         0       0       0       0       0       0       0
   825 ;;Total ram usage:        0 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; Hardware stack levels required when called:    4
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		_SYSTEM_Initialize
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text4
   836  0009DC                     __ptext4:
   837                           	opt stack 0
   838  0009DC                     _SPI2_Initialize:
   839                           	opt stack 25
   840                           
   841                           ;spi2.c: 70: SSP2STAT = 0x00;
   842                           
   843                           ;incstack = 0
   844  0009DC  0E00               	movlw	0
   845  0009DE  6E6D               	movwf	3949,c	;volatile
   846                           
   847                           ;spi2.c: 73: SSP2CON1 = 0x24;
   848  0009E0  0E24               	movlw	36
   849  0009E2  6E6C               	movwf	3948,c	;volatile
   850                           
   851                           ;spi2.c: 76: SSP2CON3 = 0x00;
   852  0009E4  0E00               	movlw	0
   853  0009E6  6E69               	movwf	3945,c	;volatile
   854  0009E8  0012               	return		;funcret
   855  0009EA                     __end_of_SPI2_Initialize:
   856                           	opt stack 0
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           prodh	equ	0xFF4
   862                           prodl	equ	0xFF3
   863                           intcon	equ	0xFF2
   864                           postinc0	equ	0xFEE
   865                           wreg	equ	0xFE8
   866                           postinc2	equ	0xFDE
   867                           postdec2	equ	0xFDD
   868                           fsr2h	equ	0xFDA
   869                           fsr2l	equ	0xFD9
   870                           status	equ	0xFD8
   871                           
   872 ;; *************** function _PIN_MANAGER_Initialize *****************
   873 ;; Defined at:
   874 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   888 ;;      Params:         0       0       0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    4
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_SYSTEM_Initialize
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text5
   904  0008D0                     __ptext5:
   905                           	opt stack 0
   906  0008D0                     _PIN_MANAGER_Initialize:
   907                           	opt stack 25
   908                           
   909                           ;pin_manager.c: 57: LATE = 0x00;
   910                           
   911                           ;incstack = 0
   912  0008D0  0E00               	movlw	0
   913  0008D2  6E8D               	movwf	3981,c	;volatile
   914                           
   915                           ;pin_manager.c: 58: LATD = 0x00;
   916  0008D4  0E00               	movlw	0
   917  0008D6  6E8C               	movwf	3980,c	;volatile
   918                           
   919                           ;pin_manager.c: 59: LATA = 0x00;
   920  0008D8  0E00               	movlw	0
   921  0008DA  6E89               	movwf	3977,c	;volatile
   922                           
   923                           ;pin_manager.c: 60: LATB = 0x00;
   924  0008DC  0E00               	movlw	0
   925  0008DE  6E8A               	movwf	3978,c	;volatile
   926                           
   927                           ;pin_manager.c: 61: LATC = 0x00;
   928  0008E0  0E00               	movlw	0
   929  0008E2  6E8B               	movwf	3979,c	;volatile
   930                           
   931                           ;pin_manager.c: 66: TRISE = 0x04;
   932  0008E4  0E04               	movlw	4
   933  0008E6  6E96               	movwf	3990,c	;volatile
   934                           
   935                           ;pin_manager.c: 67: TRISA = 0xE2;
   936  0008E8  0EE2               	movlw	226
   937  0008EA  6E92               	movwf	3986,c	;volatile
   938                           
   939                           ;pin_manager.c: 68: TRISB = 0xE9;
   940  0008EC  0EE9               	movlw	233
   941  0008EE  6E93               	movwf	3987,c	;volatile
   942                           
   943                           ;pin_manager.c: 69: TRISC = 0xC9;
   944  0008F0  0EC9               	movlw	201
   945  0008F2  6E94               	movwf	3988,c	;volatile
   946                           
   947                           ;pin_manager.c: 70: TRISD = 0x8B;
   948  0008F4  0E8B               	movlw	139
   949  0008F6  6E95               	movwf	3989,c	;volatile
   950                           
   951                           ;pin_manager.c: 75: ANSELC = 0xFC;
   952  0008F8  0EFC               	movlw	252
   953  0008FA  010F               	movlb	15	; () banked
   954  0008FC  6F3A               	movwf	58,b	;volatile
   955                           
   956                           ;pin_manager.c: 76: ANSELB = 0x3E;
   957  0008FE  0E3E               	movlw	62
   958  000900  6F39               	movwf	57,b	;volatile
   959                           
   960                           ;pin_manager.c: 77: ANSELD = 0xE4;
   961  000902  0EE4               	movlw	228
   962  000904  6F3B               	movwf	59,b	;volatile
   963                           
   964                           ;pin_manager.c: 78: ANSELE = 0x07;
   965  000906  0E07               	movlw	7
   966  000908  6F3C               	movwf	60,b	;volatile
   967                           
   968                           ;pin_manager.c: 79: ANSELA = 0x2F;
   969  00090A  0E2F               	movlw	47
   970  00090C  6F38               	movwf	56,b	;volatile
   971                           
   972                           ; BSR set to: 15
   973                           ;pin_manager.c: 84: WPUB = 0xFF;
   974  00090E  6861               	setf	3937,c	;volatile
   975                           
   976                           ; BSR set to: 15
   977                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
   978  000910  9EF1               	bcf	intcon2,7,c	;volatile
   979                           
   980                           ; BSR set to: 15
   981  000912  0012               	return		;funcret
   982  000914                     __end_of_PIN_MANAGER_Initialize:
   983                           	opt stack 0
   984                           tblptru	equ	0xFF8
   985                           tblptrh	equ	0xFF7
   986                           tblptrl	equ	0xFF6
   987                           tablat	equ	0xFF5
   988                           prodh	equ	0xFF4
   989                           prodl	equ	0xFF3
   990                           intcon	equ	0xFF2
   991                           intcon2	equ	0xFF1
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postinc2	equ	0xFDE
   995                           postdec2	equ	0xFDD
   996                           fsr2h	equ	0xFDA
   997                           fsr2l	equ	0xFD9
   998                           status	equ	0xFD8
   999                           
  1000 ;; *************** function _OSCILLATOR_Initialize *****************
  1001 ;; Defined at:
  1002 ;;		line 122 in file "mcc_generated_files/mcc.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1016 ;;      Params:         0       0       0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0
  1019 ;;      Totals:         0       0       0       0       0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    4
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_SYSTEM_Initialize
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text6
  1031  0009EA                     __ptext6:
  1032                           	opt stack 0
  1033  0009EA                     _OSCILLATOR_Initialize:
  1034                           	opt stack 25
  1035                           
  1036                           ;mcc.c: 125: OSCCON = 0x70;
  1037                           
  1038                           ; BSR set to: 15
  1039                           ;incstack = 0
  1040  0009EA  0E70               	movlw	112
  1041  0009EC  6ED3               	movwf	4051,c	;volatile
  1042                           
  1043                           ;mcc.c: 127: OSCCON2 = 0x04;
  1044  0009EE  0E04               	movlw	4
  1045  0009F0  6ED2               	movwf	4050,c	;volatile
  1046                           
  1047                           ;mcc.c: 129: OSCTUNE = 0x00;
  1048  0009F2  0E00               	movlw	0
  1049  0009F4  6E9B               	movwf	3995,c	;volatile
  1050  0009F6  0012               	return		;funcret
  1051  0009F8                     __end_of_OSCILLATOR_Initialize:
  1052                           	opt stack 0
  1053                           tblptru	equ	0xFF8
  1054                           tblptrh	equ	0xFF7
  1055                           tblptrl	equ	0xFF6
  1056                           tablat	equ	0xFF5
  1057                           prodh	equ	0xFF4
  1058                           prodl	equ	0xFF3
  1059                           intcon	equ	0xFF2
  1060                           intcon2	equ	0xFF1
  1061                           postinc0	equ	0xFEE
  1062                           wreg	equ	0xFE8
  1063                           postinc2	equ	0xFDE
  1064                           postdec2	equ	0xFDD
  1065                           fsr2h	equ	0xFDA
  1066                           fsr2l	equ	0xFD9
  1067                           status	equ	0xFD8
  1068                           
  1069 ;; *************** function _INTERRUPT_Initialize *****************
  1070 ;; Defined at:
  1071 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;		None
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		None
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1085 ;;      Params:         0       0       0       0       0       0       0
  1086 ;;      Locals:         0       0       0       0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0       0       0
  1088 ;;      Totals:         0       0       0       0       0       0       0
  1089 ;;Total ram usage:        0 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    4
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_SYSTEM_Initialize
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text7
  1100  000A02                     __ptext7:
  1101                           	opt stack 0
  1102  000A02                     _INTERRUPT_Initialize:
  1103                           	opt stack 25
  1104                           
  1105                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1106                           
  1107                           ;incstack = 0
  1108  000A02  9ED0               	bcf	4048,7,c	;volatile
  1109  000A04  0012               	return		;funcret
  1110  000A06                     __end_of_INTERRUPT_Initialize:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           prodh	equ	0xFF4
  1117                           prodl	equ	0xFF3
  1118                           intcon	equ	0xFF2
  1119                           intcon2	equ	0xFF1
  1120                           postinc0	equ	0xFEE
  1121                           wreg	equ	0xFE8
  1122                           postinc2	equ	0xFDE
  1123                           postdec2	equ	0xFDD
  1124                           fsr2h	equ	0xFDA
  1125                           fsr2l	equ	0xFD9
  1126                           status	equ	0xFD8
  1127                           
  1128 ;; *************** function _EXT_INT_Initialize *****************
  1129 ;; Defined at:
  1130 ;;		line 103 in file "mcc_generated_files/ext_int.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1144 ;;      Params:         0       0       0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0
  1147 ;;      Totals:         0       0       0       0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    5
  1151 ;; This function calls:
  1152 ;;		_INT0_SetInterruptHandler
  1153 ;; This function is called by:
  1154 ;;		_SYSTEM_Initialize
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text8
  1159  0009C8                     __ptext8:
  1160                           	opt stack 0
  1161  0009C8                     _EXT_INT_Initialize:
  1162                           	opt stack 24
  1163                           
  1164                           ;ext_int.c: 112: (INTCONbits.INT0IF = 0);
  1165                           
  1166                           ;incstack = 0
  1167  0009C8  92F2               	bcf	intcon,1,c	;volatile
  1168                           
  1169                           ;ext_int.c: 113: (INTCON2bits.INTEDG0 = 1);
  1170  0009CA  8CF1               	bsf	intcon2,6,c	;volatile
  1171                           
  1172                           ;ext_int.c: 115: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  1173  0009CC  0E06               	movlw	low _INT0_DefaultInterruptHandler
  1174  0009CE  6E1B               	movwf	INT0_SetInterruptHandler@InterruptHandler,c
  1175  0009D0  0E0A               	movlw	high _INT0_DefaultInterruptHandler
  1176  0009D2  6E1C               	movwf	INT0_SetInterruptHandler@InterruptHandler+1,c
  1177  0009D4  ECFC  F004         	call	_INT0_SetInterruptHandler	;wreg free
  1178                           
  1179                           ;ext_int.c: 116: (INTCONbits.INT0IE = 1);
  1180  0009D8  88F2               	bsf	intcon,4,c	;volatile
  1181  0009DA  0012               	return		;funcret
  1182  0009DC                     __end_of_EXT_INT_Initialize:
  1183                           	opt stack 0
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           prodh	equ	0xFF4
  1189                           prodl	equ	0xFF3
  1190                           intcon	equ	0xFF2
  1191                           intcon2	equ	0xFF1
  1192                           postinc0	equ	0xFEE
  1193                           wreg	equ	0xFE8
  1194                           postinc2	equ	0xFDE
  1195                           postdec2	equ	0xFDD
  1196                           fsr2h	equ	0xFDA
  1197                           fsr2l	equ	0xFD9
  1198                           status	equ	0xFD8
  1199                           
  1200 ;; *************** function _INT0_SetInterruptHandler *****************
  1201 ;; Defined at:
  1202 ;;		line 83 in file "mcc_generated_files/ext_int.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  InterruptHan    2   26[COMRAM] PTR FTN()void 
  1205 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1217 ;;      Params:         2       0       0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0
  1220 ;;      Totals:         2       0       0       0       0       0       0
  1221 ;;Total ram usage:        2 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    4
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_EXT_INT_Initialize
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text9
  1232  0009F8                     __ptext9:
  1233                           	opt stack 0
  1234  0009F8                     _INT0_SetInterruptHandler:
  1235                           	opt stack 24
  1236                           
  1237                           ;ext_int.c: 84: INT0_InterruptHandler = InterruptHandler;
  1238                           
  1239                           ;incstack = 0
  1240  0009F8  C01B  F03A         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1241  0009FC  C01C  F03B         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1242  000A00  0012               	return		;funcret
  1243  000A02                     __end_of_INT0_SetInterruptHandler:
  1244                           	opt stack 0
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           prodh	equ	0xFF4
  1250                           prodl	equ	0xFF3
  1251                           intcon	equ	0xFF2
  1252                           intcon2	equ	0xFF1
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           postinc2	equ	0xFDE
  1256                           postdec2	equ	0xFDD
  1257                           fsr2h	equ	0xFDA
  1258                           fsr2l	equ	0xFD9
  1259                           status	equ	0xFD8
  1260                           
  1261 ;; *************** function _ADC_Initialize *****************
  1262 ;; Defined at:
  1263 ;;		line 58 in file "mcc_generated_files/adc.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1277 ;;      Params:         0       0       0       0       0       0       0
  1278 ;;      Locals:         0       0       0       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0
  1280 ;;      Totals:         0       0       0       0       0       0       0
  1281 ;;Total ram usage:        0 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    4
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_SYSTEM_Initialize
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text10
  1293  0009B2                     __ptext10:
  1294                           	opt stack 0
  1295  0009B2                     _ADC_Initialize:
  1296                           	opt stack 25
  1297                           
  1298                           ;adc.c: 63: ADCON0 = 0x01;
  1299                           
  1300                           ;incstack = 0
  1301  0009B2  0E01               	movlw	1
  1302  0009B4  6EC2               	movwf	4034,c	;volatile
  1303                           
  1304                           ;adc.c: 66: ADCON1 = 0x00;
  1305  0009B6  0E00               	movlw	0
  1306  0009B8  6EC1               	movwf	4033,c	;volatile
  1307                           
  1308                           ;adc.c: 69: ADCON2 = 0x00;
  1309  0009BA  0E00               	movlw	0
  1310  0009BC  6EC0               	movwf	4032,c	;volatile
  1311                           
  1312                           ;adc.c: 72: ADRESL = 0x00;
  1313  0009BE  0E00               	movlw	0
  1314  0009C0  6EC3               	movwf	4035,c	;volatile
  1315                           
  1316                           ;adc.c: 75: ADRESH = 0x00;
  1317  0009C2  0E00               	movlw	0
  1318  0009C4  6EC4               	movwf	4036,c	;volatile
  1319  0009C6  0012               	return		;funcret
  1320  0009C8                     __end_of_ADC_Initialize:
  1321                           	opt stack 0
  1322                           tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           tblptrl	equ	0xFF6
  1325                           tablat	equ	0xFF5
  1326                           prodh	equ	0xFF4
  1327                           prodl	equ	0xFF3
  1328                           intcon	equ	0xFF2
  1329                           intcon2	equ	0xFF1
  1330                           postinc0	equ	0xFEE
  1331                           wreg	equ	0xFE8
  1332                           postinc2	equ	0xFDE
  1333                           postdec2	equ	0xFDD
  1334                           fsr2h	equ	0xFDA
  1335                           fsr2l	equ	0xFD9
  1336                           status	equ	0xFD8
  1337                           
  1338 ;; *************** function _SPI2_Exchange8bit *****************
  1339 ;; Defined at:
  1340 ;;		line 79 in file "mcc_generated_files/spi2.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  data            1    wreg     unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  data            1   27[COMRAM] unsigned char 
  1345 ;;  dummyRead       1   26[COMRAM] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      unsigned char 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1355 ;;      Params:         0       0       0       0       0       0       0
  1356 ;;      Locals:         2       0       0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0
  1358 ;;      Totals:         2       0       0       0       0       0       0
  1359 ;;Total ram usage:        2 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    4
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;;		_SPI2_Exchange8bitBuffer
  1367 ;;		_sendOverSpi
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text11
  1372  000998                     __ptext11:
  1373                           	opt stack 0
  1374  000998                     _SPI2_Exchange8bit:
  1375                           	opt stack 26
  1376                           
  1377                           ;incstack = 0
  1378                           ;SPI2_Exchange8bit@data stored from wreg
  1379  000998  6E1C               	movwf	SPI2_Exchange8bit@data,c
  1380                           
  1381                           ;spi2.c: 81: uint8_t dummyRead = SSP2BUF;
  1382  00099A  CF6F F01B          	movff	3951,SPI2_Exchange8bit@dummyRead	;volatile
  1383                           
  1384                           ;spi2.c: 84: SSP2CON1bits.WCOL = 0;
  1385  00099E  9E6C               	bcf	3948,7,c	;volatile
  1386                           
  1387                           ;spi2.c: 86: SSP2BUF = data;
  1388  0009A0  C01C  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
  1389  0009A4                     
  1390                           ;spi2.c: 89: {
  1391  0009A4  B06D               	btfsc	3949,0,c	;volatile
  1392  0009A6  D003               	goto	u630
  1393  0009A8  5039               	movf	_toRedrawLeds,w,c
  1394  0009AA  B4D8               	btfsc	status,2,c
  1395  0009AC  D7FB               	goto	l172
  1396  0009AE                     u630:
  1397                           
  1398                           ;spi2.c: 90: }
  1399                           ;spi2.c: 92: return (SSP2BUF);
  1400  0009AE  506F               	movf	3951,w,c	;volatile
  1401  0009B0  0012               	return	
  1402  0009B2                     __end_of_SPI2_Exchange8bit:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           prodh	equ	0xFF4
  1409                           prodl	equ	0xFF3
  1410                           intcon	equ	0xFF2
  1411                           intcon2	equ	0xFF1
  1412                           postinc0	equ	0xFEE
  1413                           wreg	equ	0xFE8
  1414                           postinc2	equ	0xFDE
  1415                           postdec2	equ	0xFDD
  1416                           fsr2h	equ	0xFDA
  1417                           fsr2l	equ	0xFD9
  1418                           status	equ	0xFD8
  1419                           
  1420 ;; *************** function _INTERRUPT_InterruptManager *****************
  1421 ;; Defined at:
  1422 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1436 ;;      Params:         0       0       0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0
  1438 ;;      Temps:         18       0       0       0       0       0       0
  1439 ;;      Totals:        18       0       0       0       0       0       0
  1440 ;;Total ram usage:       18 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    3
  1443 ;; This function calls:
  1444 ;;		_INT0_ISR
  1445 ;; This function is called by:
  1446 ;;		Interrupt level 2
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	intcode
  1451  000008                     __pintcode:
  1452                           	opt stack 0
  1453  000008                     _INTERRUPT_InterruptManager:
  1454                           	opt stack 24
  1455                           
  1456                           ;incstack = 0
  1457  000008  823C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1458  00000A  CFFA F009          	movff	pclath,??_INTERRUPT_InterruptManager
  1459  00000E  CFFB F00A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1460  000012  CFE9 F00B          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1461  000016  CFEA F00C          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1462  00001A  CFE1 F00D          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1463  00001E  CFE2 F00E          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1464  000022  CFD9 F00F          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1465  000026  CFDA F010          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1466  00002A  CFF3 F011          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1467  00002E  CFF4 F012          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1468  000032  CFF6 F013          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1469  000036  CFF7 F014          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1470  00003A  CFF8 F015          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1471  00003E  CFF5 F016          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1472  000042  C03C  F017         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1473  000046  C03D  F018         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1474  00004A  C03E  F019         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1475  00004E  C03F  F01A         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1476                           
  1477                           ;interrupt_manager.c: 60: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  1478  000052  B8F2               	btfsc	intcon,4,c	;volatile
  1479  000054  A2F2               	btfss	intcon,1,c	;volatile
  1480  000056  D002               	goto	i2l87
  1481                           
  1482                           ;interrupt_manager.c: 61: {
  1483                           ;interrupt_manager.c: 62: INT0_ISR();
  1484  000058  ECB0  F003         	call	_INT0_ISR	;wreg free
  1485  00005C                     i2l87:
  1486                           
  1487                           ;interrupt_manager.c: 64: else
  1488                           ;interrupt_manager.c: 65: {
  1489  00005C  C01A  F03F         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1490  000060  C019  F03E         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1491  000064  C018  F03D         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1492  000068  C017  F03C         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1493  00006C  C016  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1494  000070  C015  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1495  000074  C014  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1496  000078  C013  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1497  00007C  C012  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1498  000080  C011  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1499  000084  C010  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1500  000088  C00F  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1501  00008C  C00E  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1502  000090  C00D  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1503  000094  C00C  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1504  000098  C00B  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1505  00009C  C00A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1506  0000A0  C009  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1507  0000A4  923C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1508  0000A6  0011               	retfie		f
  1509  0000A8                     __end_of_INTERRUPT_InterruptManager:
  1510                           	opt stack 0
  1511                           pclatu	equ	0xFFB
  1512                           pclath	equ	0xFFA
  1513                           tblptru	equ	0xFF8
  1514                           tblptrh	equ	0xFF7
  1515                           tblptrl	equ	0xFF6
  1516                           tablat	equ	0xFF5
  1517                           prodh	equ	0xFF4
  1518                           prodl	equ	0xFF3
  1519                           intcon	equ	0xFF2
  1520                           intcon2	equ	0xFF1
  1521                           postinc0	equ	0xFEE
  1522                           fsr0h	equ	0xFEA
  1523                           fsr0l	equ	0xFE9
  1524                           wreg	equ	0xFE8
  1525                           fsr1h	equ	0xFE2
  1526                           fsr1l	equ	0xFE1
  1527                           postinc2	equ	0xFDE
  1528                           postdec2	equ	0xFDD
  1529                           fsr2h	equ	0xFDA
  1530                           fsr2l	equ	0xFD9
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function _INT0_ISR *****************
  1534 ;; Defined at:
  1535 ;;		line 49 in file "mcc_generated_files/ext_int.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  i               2    6[COMRAM] int 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1549 ;;      Params:         0       0       0       0       0       0       0
  1550 ;;      Locals:         2       0       0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0
  1552 ;;      Totals:         2       0       0       0       0       0       0
  1553 ;;Total ram usage:        2 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    2
  1556 ;; This function calls:
  1557 ;;		_ADC_GetConversion
  1558 ;;		_INT0_CallBack
  1559 ;;		_setTCRT
  1560 ;; This function is called by:
  1561 ;;		_INTERRUPT_InterruptManager
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text13
  1566  000760                     __ptext13:
  1567                           	opt stack 0
  1568  000760                     _INT0_ISR:
  1569                           	opt stack 24
  1570                           
  1571                           ;ext_int.c: 52: for(int i = 0; i < 8; i++)
  1572                           
  1573                           ;incstack = 0
  1574  000760  0E00               	movlw	0
  1575  000762  6E08               	movwf	INT0_ISR@i+1,c
  1576  000764  0E00               	movlw	0
  1577  000766  6E07               	movwf	INT0_ISR@i,c
  1578  000768                     i2l1213:
  1579  000768  BE08               	btfsc	INT0_ISR@i+1,7,c
  1580  00076A  D006               	goto	i2l112
  1581  00076C  5008               	movf	INT0_ISR@i+1,w,c
  1582  00076E  E139               	bnz	i2l1229
  1583  000770  0E08               	movlw	8
  1584  000772  5C07               	subwf	INT0_ISR@i,w,c
  1585  000774  B0D8               	btfsc	status,0,c
  1586  000776  D035               	goto	i2u61_40
  1587  000778                     i2l112:
  1588                           
  1589                           ;ext_int.c: 53: {
  1590                           ;ext_int.c: 54: setTCRT(i, 1);
  1591  000778  C007  F001         	movff	INT0_ISR@i,setTCRT@pos
  1592  00077C  C008  F002         	movff	INT0_ISR@i+1,setTCRT@pos+1
  1593  000780  0E00               	movlw	0
  1594  000782  6E04               	movwf	setTCRT@value+1,c
  1595  000784  0E01               	movlw	1
  1596  000786  6E03               	movwf	setTCRT@value,c
  1597  000788  EC5D  F003         	call	_setTCRT	;wreg free
  1598                           
  1599                           ;ext_int.c: 55: _delay((unsigned long)((50)*(16000000/4000000.0)));
  1600  00078C  0E42               	movlw	66
  1601  00078E                     i2u81_47:
  1602  00078E  2EE8               	decfsz	wreg,f,c
  1603  000790  D7FE               	bra	i2u81_47
  1604  000792  D000               	nop2	
  1605                           
  1606                           ;ext_int.c: 56: tcrt[i] = ADC_GetConversion(AN_CHANNEL[i]);
  1607  000794  90D8               	bcf	status,0,c
  1608  000796  3407               	rlcf	INT0_ISR@i,w,c
  1609  000798  6EF6               	movwf	tblptrl,c
  1610  00079A  3408               	rlcf	INT0_ISR@i+1,w,c
  1611  00079C  6EF7               	movwf	tblptrh,c
  1612  00079E  0E01               	movlw	low _AN_CHANNEL
  1613  0007A0  26F6               	addwf	tblptrl,f,c
  1614  0007A2  0E06               	movlw	high _AN_CHANNEL
  1615  0007A4  22F7               	addwfc	tblptrh,f,c
  1616  0007A6                     	if	0	;There are less than 3 active tblptr bytes
  1617  0007A6                     	endif
  1618  0007A6  0008               	tblrd		*
  1619  0007A8  50F5               	movf	tablat,w,c
  1620  0007AA  EC8A  F004         	call	_ADC_GetConversion
  1621  0007AE  90D8               	bcf	status,0,c
  1622  0007B0  3407               	rlcf	INT0_ISR@i,w,c
  1623  0007B2  6ED9               	movwf	fsr2l,c
  1624  0007B4  3408               	rlcf	INT0_ISR@i+1,w,c
  1625  0007B6  6EDA               	movwf	fsr2h,c
  1626  0007B8  0E29               	movlw	low _tcrt
  1627  0007BA  26D9               	addwf	fsr2l,f,c
  1628  0007BC  0E00               	movlw	high _tcrt
  1629  0007BE  22DA               	addwfc	fsr2h,f,c
  1630  0007C0  C001  FFDE         	movff	?_ADC_GetConversion,postinc2
  1631  0007C4  C002  FFDD         	movff	?_ADC_GetConversion+1,postdec2
  1632                           
  1633                           ;ext_int.c: 57: setTCRT(i, 0);
  1634  0007C8  C007  F001         	movff	INT0_ISR@i,setTCRT@pos
  1635  0007CC  C008  F002         	movff	INT0_ISR@i+1,setTCRT@pos+1
  1636  0007D0  0E00               	movlw	0
  1637  0007D2  6E04               	movwf	setTCRT@value+1,c
  1638  0007D4  0E00               	movlw	0
  1639  0007D6  6E03               	movwf	setTCRT@value,c
  1640  0007D8  EC5D  F003         	call	_setTCRT	;wreg free
  1641  0007DC  4A07               	infsnz	INT0_ISR@i,f,c
  1642  0007DE  2A08               	incf	INT0_ISR@i+1,f,c
  1643  0007E0  D7C3               	goto	i2l1213
  1644  0007E2                     i2u61_40:
  1645  0007E2                     i2l1229:
  1646                           
  1647                           ;ext_int.c: 58: }
  1648                           ;ext_int.c: 59: toRedrawLeds = 1;
  1649  0007E2  0E01               	movlw	1
  1650  0007E4  6E39               	movwf	_toRedrawLeds,c
  1651                           
  1652                           ;ext_int.c: 62: (INTCONbits.INT0IF = 0);
  1653  0007E6  92F2               	bcf	intcon,1,c	;volatile
  1654                           
  1655                           ;ext_int.c: 65: INT0_CallBack();
  1656  0007E8  ECA2  F004         	call	_INT0_CallBack	;wreg free
  1657  0007EC  0012               	return		;funcret
  1658  0007EE                     __end_of_INT0_ISR:
  1659                           	opt stack 0
  1660                           pclatu	equ	0xFFB
  1661                           pclath	equ	0xFFA
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           prodh	equ	0xFF4
  1667                           prodl	equ	0xFF3
  1668                           intcon	equ	0xFF2
  1669                           intcon2	equ	0xFF1
  1670                           postinc0	equ	0xFEE
  1671                           fsr0h	equ	0xFEA
  1672                           fsr0l	equ	0xFE9
  1673                           wreg	equ	0xFE8
  1674                           fsr1h	equ	0xFE2
  1675                           fsr1l	equ	0xFE1
  1676                           postinc2	equ	0xFDE
  1677                           postdec2	equ	0xFDD
  1678                           fsr2h	equ	0xFDA
  1679                           fsr2l	equ	0xFD9
  1680                           status	equ	0xFD8
  1681                           
  1682 ;; *************** function _setTCRT *****************
  1683 ;; Defined at:
  1684 ;;		line 65 in file "main.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  pos             2    0[COMRAM] int 
  1687 ;;  value           2    2[COMRAM] int 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, status,0
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1699 ;;      Params:         4       0       0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0
  1701 ;;      Temps:          2       0       0       0       0       0       0
  1702 ;;      Totals:         6       0       0       0       0       0       0
  1703 ;;Total ram usage:        6 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_INT0_ISR
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text14
  1713  0006BA                     __ptext14:
  1714                           	opt stack 0
  1715  0006BA                     _setTCRT:
  1716                           	opt stack 25
  1717                           
  1718                           ;main.c: 67: switch(pos)
  1719                           
  1720                           ;incstack = 0
  1721  0006BA  D030               	goto	i2l237
  1722  0006BC                     i2l238:
  1723                           
  1724                           ;main.c: 70: LATCbits.LATC5 = value;
  1725  0006BC  B003               	btfsc	setTCRT@value,0,c
  1726  0006BE  D002               	bra	i2u42_45
  1727  0006C0  9A8B               	bcf	3979,5,c	;volatile
  1728  0006C2  D001               	bra	i2u42_46
  1729  0006C4                     i2u42_45:
  1730  0006C4  8A8B               	bsf	3979,5,c	;volatile
  1731  0006C6                     i2u42_46:
  1732                           
  1733                           ;main.c: 71: break;
  1734  0006C6  0012               	return	
  1735  0006C8                     i2l240:
  1736                           
  1737                           ;main.c: 73: LATDbits.LATD6 = value;
  1738  0006C8  B003               	btfsc	setTCRT@value,0,c
  1739  0006CA  D002               	bra	i2u43_45
  1740  0006CC  9C8C               	bcf	3980,6,c	;volatile
  1741  0006CE  D001               	bra	i2u43_46
  1742  0006D0                     i2u43_45:
  1743  0006D0  8C8C               	bsf	3980,6,c	;volatile
  1744  0006D2                     i2u43_46:
  1745                           
  1746                           ;main.c: 74: break;
  1747  0006D2  0012               	return	
  1748  0006D4                     i2l241:
  1749                           
  1750                           ;main.c: 76: LATBbits.LATB2 = value;
  1751  0006D4  B003               	btfsc	setTCRT@value,0,c
  1752  0006D6  D002               	bra	i2u44_45
  1753  0006D8  948A               	bcf	3978,2,c	;volatile
  1754  0006DA  D001               	bra	i2u44_46
  1755  0006DC                     i2u44_45:
  1756  0006DC  848A               	bsf	3978,2,c	;volatile
  1757  0006DE                     i2u44_46:
  1758                           
  1759                           ;main.c: 77: break;
  1760  0006DE  0012               	return	
  1761  0006E0                     i2l242:
  1762                           
  1763                           ;main.c: 79: LATBbits.LATB4 = value;
  1764  0006E0  B003               	btfsc	setTCRT@value,0,c
  1765  0006E2  D002               	bra	i2u45_45
  1766  0006E4  988A               	bcf	3978,4,c	;volatile
  1767  0006E6  D001               	bra	i2u45_46
  1768  0006E8                     i2u45_45:
  1769  0006E8  888A               	bsf	3978,4,c	;volatile
  1770  0006EA                     i2u45_46:
  1771                           
  1772                           ;main.c: 80: break;
  1773  0006EA  0012               	return	
  1774  0006EC                     i2l243:
  1775                           
  1776                           ;main.c: 82: LATAbits.LATA2 = value;
  1777  0006EC  B003               	btfsc	setTCRT@value,0,c
  1778  0006EE  D002               	bra	i2u46_45
  1779  0006F0  9489               	bcf	3977,2,c	;volatile
  1780  0006F2  D001               	bra	i2u46_46
  1781  0006F4                     i2u46_45:
  1782  0006F4  8489               	bsf	3977,2,c	;volatile
  1783  0006F6                     i2u46_46:
  1784                           
  1785                           ;main.c: 83: break;
  1786  0006F6  0012               	return	
  1787  0006F8                     i2l244:
  1788                           
  1789                           ;main.c: 85: LATAbits.LATA4 = value;
  1790  0006F8  B003               	btfsc	setTCRT@value,0,c
  1791  0006FA  D002               	bra	i2u47_45
  1792  0006FC  9889               	bcf	3977,4,c	;volatile
  1793  0006FE  D001               	bra	i2u47_46
  1794  000700                     i2u47_45:
  1795  000700  8889               	bsf	3977,4,c	;volatile
  1796  000702                     i2u47_46:
  1797                           
  1798                           ;main.c: 86: break;
  1799  000702  0012               	return	
  1800  000704                     i2l245:
  1801                           
  1802                           ;main.c: 88: LATEbits.LATE1 = value;
  1803  000704  B003               	btfsc	setTCRT@value,0,c
  1804  000706  D002               	bra	i2u48_45
  1805  000708  928D               	bcf	3981,1,c	;volatile
  1806  00070A  D001               	bra	i2u48_46
  1807  00070C                     i2u48_45:
  1808  00070C  828D               	bsf	3981,1,c	;volatile
  1809  00070E                     i2u48_46:
  1810                           
  1811                           ;main.c: 89: break;
  1812  00070E  0012               	return	
  1813  000710                     i2l246:
  1814                           
  1815                           ;main.c: 91: LATCbits.LATC2 = value;
  1816  000710  B003               	btfsc	setTCRT@value,0,c
  1817  000712  D002               	bra	i2u49_45
  1818  000714  948B               	bcf	3979,2,c	;volatile
  1819  000716  D001               	bra	i2u49_46
  1820  000718                     i2u49_45:
  1821  000718  848B               	bsf	3979,2,c	;volatile
  1822  00071A                     i2u49_46:
  1823                           
  1824                           ;main.c: 93: }
  1825                           
  1826                           ;main.c: 92: break;
  1827  00071A  0012               	return	
  1828  00071C                     i2l237:
  1829  00071C  C001  F005         	movff	setTCRT@pos,??_setTCRT
  1830  000720  C002  F006         	movff	setTCRT@pos+1,??_setTCRT+1
  1831                           
  1832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1833                           ; Switch size 1, requested type "space"
  1834                           ; Number of cases is 1, Range of values is 0 to 0
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte            4     3 (average)
  1838                           ;	Chosen strategy is simple_byte
  1839  000724  5006               	movf	??_setTCRT+1,w,c
  1840  000726  0A00               	xorlw	0	; case 0
  1841  000728  A4D8               	btfss	status,2,c
  1842  00072A  0012               	return	
  1843                           
  1844                           ; Switch size 1, requested type "space"
  1845                           ; Number of cases is 8, Range of values is 0 to 7
  1846                           ; switch strategies available:
  1847                           ; Name         Instructions Cycles
  1848                           ; simple_byte           25    13 (average)
  1849                           ;	Chosen strategy is simple_byte
  1850  00072C  5005               	movf	??_setTCRT,w,c
  1851  00072E  0A00               	xorlw	0	; case 0
  1852  000730  B4D8               	btfsc	status,2,c
  1853  000732  D7C4               	goto	i2l238
  1854  000734  0A01               	xorlw	1	; case 1
  1855  000736  B4D8               	btfsc	status,2,c
  1856  000738  D7C7               	goto	i2l240
  1857  00073A  0A03               	xorlw	3	; case 2
  1858  00073C  B4D8               	btfsc	status,2,c
  1859  00073E  D7CA               	goto	i2l241
  1860  000740  0A01               	xorlw	1	; case 3
  1861  000742  B4D8               	btfsc	status,2,c
  1862  000744  D7CD               	goto	i2l242
  1863  000746  0A07               	xorlw	7	; case 4
  1864  000748  B4D8               	btfsc	status,2,c
  1865  00074A  D7D0               	goto	i2l243
  1866  00074C  0A01               	xorlw	1	; case 5
  1867  00074E  B4D8               	btfsc	status,2,c
  1868  000750  D7D3               	goto	i2l244
  1869  000752  0A03               	xorlw	3	; case 6
  1870  000754  B4D8               	btfsc	status,2,c
  1871  000756  D7D6               	goto	i2l245
  1872  000758  0A01               	xorlw	1	; case 7
  1873  00075A  A4D8               	btfss	status,2,c
  1874  00075C  0012               	return	
  1875  00075E  D7D8               	goto	i2l246
  1876  000760                     __end_of_setTCRT:
  1877                           	opt stack 0
  1878                           pclatu	equ	0xFFB
  1879                           pclath	equ	0xFFA
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           prodh	equ	0xFF4
  1885                           prodl	equ	0xFF3
  1886                           intcon	equ	0xFF2
  1887                           intcon2	equ	0xFF1
  1888                           postinc0	equ	0xFEE
  1889                           fsr0h	equ	0xFEA
  1890                           fsr0l	equ	0xFE9
  1891                           wreg	equ	0xFE8
  1892                           fsr1h	equ	0xFE2
  1893                           fsr1l	equ	0xFE1
  1894                           postinc2	equ	0xFDE
  1895                           postdec2	equ	0xFDD
  1896                           fsr2h	equ	0xFDA
  1897                           fsr2l	equ	0xFD9
  1898                           status	equ	0xFD8
  1899                           
  1900 ;; *************** function _INT0_CallBack *****************
  1901 ;; Defined at:
  1902 ;;		line 71 in file "mcc_generated_files/ext_int.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1916 ;;      Params:         0       0       0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0
  1919 ;;      Totals:         0       0       0       0       0       0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    1
  1923 ;; This function calls:
  1924 ;;		Absolute function
  1925 ;;		_INT0_DefaultInterruptHandler
  1926 ;; This function is called by:
  1927 ;;		_INT0_ISR
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text15
  1932  000944                     __ptext15:
  1933                           	opt stack 0
  1934  000944                     _INT0_CallBack:
  1935                           	opt stack 24
  1936                           
  1937                           ;ext_int.c: 74: if(INT0_InterruptHandler)
  1938                           
  1939                           ;incstack = 0
  1940  000944  503A               	movf	_INT0_InterruptHandler,w,c
  1941  000946  103B               	iorwf	_INT0_InterruptHandler+1,w,c
  1942  000948  B4D8               	btfsc	status,2,c
  1943  00094A  0012               	return	
  1944                           
  1945                           ;ext_int.c: 75: {
  1946                           ;ext_int.c: 76: INT0_InterruptHandler();
  1947  00094C  D801               	call	i2u51_48
  1948  00094E  0012               	return	
  1949  000950                     i2u51_48:
  1950  000950  0005               	push	
  1951  000952  6EFA               	movwf	pclath,c
  1952  000954  503A               	movf	_INT0_InterruptHandler,w,c
  1953  000956  6EFD               	movwf	tosl,c
  1954  000958  503B               	movf	_INT0_InterruptHandler+1,w,c
  1955  00095A  6EFE               	movwf	tosh,c
  1956  00095C  50F8               	movf	tblptru,w,c
  1957  00095E  6EFF               	movwf	tosu,c
  1958  000960  50FA               	movf	pclath,w,c
  1959  000962  0012               	return		;indir
  1960  000964                     __end_of_INT0_CallBack:
  1961                           	opt stack 0
  1962                           tosu	equ	0xFFF
  1963                           tosh	equ	0xFFE
  1964                           tosl	equ	0xFFD
  1965                           pclatu	equ	0xFFB
  1966                           pclath	equ	0xFFA
  1967                           tblptru	equ	0xFF8
  1968                           tblptrh	equ	0xFF7
  1969                           tblptrl	equ	0xFF6
  1970                           tablat	equ	0xFF5
  1971                           prodh	equ	0xFF4
  1972                           prodl	equ	0xFF3
  1973                           intcon	equ	0xFF2
  1974                           intcon2	equ	0xFF1
  1975                           postinc0	equ	0xFEE
  1976                           fsr0h	equ	0xFEA
  1977                           fsr0l	equ	0xFE9
  1978                           wreg	equ	0xFE8
  1979                           fsr1h	equ	0xFE2
  1980                           fsr1l	equ	0xFE1
  1981                           postinc2	equ	0xFDE
  1982                           postdec2	equ	0xFDD
  1983                           fsr2h	equ	0xFDA
  1984                           fsr2l	equ	0xFD9
  1985                           status	equ	0xFD8
  1986                           
  1987 ;; *************** function _INT0_DefaultInterruptHandler *****************
  1988 ;; Defined at:
  1989 ;;		line 90 in file "mcc_generated_files/ext_int.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		None
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2003 ;;      Params:         0       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_EXT_INT_Initialize
  2013 ;;		_INT0_CallBack
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text16
  2018  000A06                     __ptext16:
  2019                           	opt stack 0
  2020  000A06                     _INT0_DefaultInterruptHandler:
  2021                           	opt stack 24
  2022                           
  2023                           ;incstack = 0
  2024  000A06  0012               	return		;funcret
  2025  000A08                     __end_of_INT0_DefaultInterruptHandler:
  2026                           	opt stack 0
  2027                           tosu	equ	0xFFF
  2028                           tosh	equ	0xFFE
  2029                           tosl	equ	0xFFD
  2030                           pclatu	equ	0xFFB
  2031                           pclath	equ	0xFFA
  2032                           tblptru	equ	0xFF8
  2033                           tblptrh	equ	0xFF7
  2034                           tblptrl	equ	0xFF6
  2035                           tablat	equ	0xFF5
  2036                           prodh	equ	0xFF4
  2037                           prodl	equ	0xFF3
  2038                           intcon	equ	0xFF2
  2039                           intcon2	equ	0xFF1
  2040                           postinc0	equ	0xFEE
  2041                           fsr0h	equ	0xFEA
  2042                           fsr0l	equ	0xFE9
  2043                           wreg	equ	0xFE8
  2044                           fsr1h	equ	0xFE2
  2045                           fsr1l	equ	0xFE1
  2046                           postinc2	equ	0xFDE
  2047                           postdec2	equ	0xFDD
  2048                           fsr2h	equ	0xFDA
  2049                           fsr2l	equ	0xFD9
  2050                           status	equ	0xFD8
  2051                           
  2052 ;; *************** function _ADC_GetConversion *****************
  2053 ;; Defined at:
  2054 ;;		line 106 in file "mcc_generated_files/adc.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  channel         1    wreg     enum E6975
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  channel         1    4[COMRAM] enum E6975
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  2    0[COMRAM] unsigned int 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2068 ;;      Params:         2       0       0       0       0       0       0
  2069 ;;      Locals:         1       0       0       0       0       0       0
  2070 ;;      Temps:          2       0       0       0       0       0       0
  2071 ;;      Totals:         5       0       0       0       0       0       0
  2072 ;;Total ram usage:        5 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_INT0_ISR
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text17
  2082  000914                     __ptext17:
  2083                           	opt stack 0
  2084  000914                     _ADC_GetConversion:
  2085                           	opt stack 25
  2086                           
  2087                           ;incstack = 0
  2088                           ;ADC_GetConversion@channel stored from wreg
  2089  000914  6E05               	movwf	ADC_GetConversion@channel,c
  2090                           
  2091                           ;adc.c: 109: ADCON0bits.CHS = channel;
  2092  000916  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2093  00091A  4603               	rlncf	??_ADC_GetConversion,f,c
  2094  00091C  4603               	rlncf	??_ADC_GetConversion,f,c
  2095  00091E  50C2               	movf	4034,w,c	;volatile
  2096  000920  1803               	xorwf	??_ADC_GetConversion,w,c
  2097  000922  0B83               	andlw	-125
  2098  000924  1803               	xorwf	??_ADC_GetConversion,w,c
  2099  000926  6EC2               	movwf	4034,c	;volatile
  2100                           
  2101                           ;adc.c: 112: ADCON0bits.ADON = 1;
  2102  000928  80C2               	bsf	4034,0,c	;volatile
  2103                           
  2104                           ;adc.c: 115: ADCON0bits.GO_nDONE = 1;
  2105  00092A  82C2               	bsf	4034,1,c	;volatile
  2106  00092C                     
  2107                           ;adc.c: 119: {
  2108  00092C  B2C2               	btfsc	4034,1,c	;volatile
  2109  00092E  D7FE               	goto	i2l31
  2110                           
  2111                           ;adc.c: 120: }
  2112                           ;adc.c: 123: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2113  000930  50C4               	movf	4036,w,c	;volatile
  2114  000932  6E04               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  2115  000934  6A03               	clrf	??_ADC_GetConversion& (0+255),c
  2116  000936  50C3               	movf	4035,w,c	;volatile
  2117  000938  2403               	addwf	??_ADC_GetConversion,w,c
  2118  00093A  6E01               	movwf	?_ADC_GetConversion,c
  2119  00093C  0E00               	movlw	0
  2120  00093E  2004               	addwfc	??_ADC_GetConversion+1,w,c
  2121  000940  6E02               	movwf	?_ADC_GetConversion+1,c
  2122  000942  0012               	return	
  2123  000944                     __end_of_ADC_GetConversion:
  2124                           	opt stack 0
  2125                           tosu	equ	0xFFF
  2126                           tosh	equ	0xFFE
  2127                           tosl	equ	0xFFD
  2128                           pclatu	equ	0xFFB
  2129                           pclath	equ	0xFFA
  2130                           tblptru	equ	0xFF8
  2131                           tblptrh	equ	0xFF7
  2132                           tblptrl	equ	0xFF6
  2133                           tablat	equ	0xFF5
  2134                           prodh	equ	0xFF4
  2135                           prodl	equ	0xFF3
  2136                           intcon	equ	0xFF2
  2137                           intcon2	equ	0xFF1
  2138                           postinc0	equ	0xFEE
  2139                           fsr0h	equ	0xFEA
  2140                           fsr0l	equ	0xFE9
  2141                           wreg	equ	0xFE8
  2142                           fsr1h	equ	0xFE2
  2143                           fsr1l	equ	0xFE1
  2144                           postinc2	equ	0xFDE
  2145                           postdec2	equ	0xFDD
  2146                           fsr2h	equ	0xFDA
  2147                           fsr2l	equ	0xFD9
  2148                           status	equ	0xFD8
  2149                           tosu	equ	0xFFF
  2150                           tosh	equ	0xFFE
  2151                           tosl	equ	0xFFD
  2152                           pclatu	equ	0xFFB
  2153                           pclath	equ	0xFFA
  2154                           tblptru	equ	0xFF8
  2155                           tblptrh	equ	0xFF7
  2156                           tblptrl	equ	0xFF6
  2157                           tablat	equ	0xFF5
  2158                           prodh	equ	0xFF4
  2159                           prodl	equ	0xFF3
  2160                           intcon	equ	0xFF2
  2161                           intcon2	equ	0xFF1
  2162                           postinc0	equ	0xFEE
  2163                           fsr0h	equ	0xFEA
  2164                           fsr0l	equ	0xFE9
  2165                           wreg	equ	0xFE8
  2166                           fsr1h	equ	0xFE2
  2167                           fsr1l	equ	0xFE1
  2168                           postinc2	equ	0xFDE
  2169                           postdec2	equ	0xFDD
  2170                           fsr2h	equ	0xFDA
  2171                           fsr2l	equ	0xFD9
  2172                           status	equ	0xFD8
  2173                           
  2174                           	psect	text18
  2175  000000                     __ptext18:
  2176                           	opt stack 0
  2177                           tosu	equ	0xFFF
  2178                           tosh	equ	0xFFE
  2179                           tosl	equ	0xFFD
  2180                           pclatu	equ	0xFFB
  2181                           pclath	equ	0xFFA
  2182                           tblptru	equ	0xFF8
  2183                           tblptrh	equ	0xFF7
  2184                           tblptrl	equ	0xFF6
  2185                           tablat	equ	0xFF5
  2186                           prodh	equ	0xFF4
  2187                           prodl	equ	0xFF3
  2188                           intcon	equ	0xFF2
  2189                           intcon2	equ	0xFF1
  2190                           postinc0	equ	0xFEE
  2191                           fsr0h	equ	0xFEA
  2192                           fsr0l	equ	0xFE9
  2193                           wreg	equ	0xFE8
  2194                           fsr1h	equ	0xFE2
  2195                           fsr1l	equ	0xFE1
  2196                           postinc2	equ	0xFDE
  2197                           postdec2	equ	0xFDD
  2198                           fsr2h	equ	0xFDA
  2199                           fsr2l	equ	0xFD9
  2200                           status	equ	0xFD8
  2201                           
  2202                           	psect	rparam
  2203  0000                     tosu	equ	0xFFF
  2204                           tosh	equ	0xFFE
  2205                           tosl	equ	0xFFD
  2206                           pclatu	equ	0xFFB
  2207                           pclath	equ	0xFFA
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           prodh	equ	0xFF4
  2213                           prodl	equ	0xFF3
  2214                           intcon	equ	0xFF2
  2215                           intcon2	equ	0xFF1
  2216                           postinc0	equ	0xFEE
  2217                           fsr0h	equ	0xFEA
  2218                           fsr0l	equ	0xFE9
  2219                           wreg	equ	0xFE8
  2220                           fsr1h	equ	0xFE2
  2221                           fsr1l	equ	0xFE1
  2222                           postinc2	equ	0xFDE
  2223                           postdec2	equ	0xFDD
  2224                           fsr2h	equ	0xFDA
  2225                           fsr2l	equ	0xFD9
  2226                           status	equ	0xFD8
  2227                           
  2228                           	psect	temp
  2229  00003C                     btemp:
  2230                           	opt stack 0
  2231  00003C                     	ds	1
  2232  0000                     int$flags	set	btemp
  2233  0000                     wtemp6	set	btemp+1
  2234                           tosu	equ	0xFFF
  2235                           tosh	equ	0xFFE
  2236                           tosl	equ	0xFFD
  2237                           pclatu	equ	0xFFB
  2238                           pclath	equ	0xFFA
  2239                           tblptru	equ	0xFF8
  2240                           tblptrh	equ	0xFF7
  2241                           tblptrl	equ	0xFF6
  2242                           tablat	equ	0xFF5
  2243                           prodh	equ	0xFF4
  2244                           prodl	equ	0xFF3
  2245                           intcon	equ	0xFF2
  2246                           intcon2	equ	0xFF1
  2247                           postinc0	equ	0xFEE
  2248                           fsr0h	equ	0xFEA
  2249                           fsr0l	equ	0xFE9
  2250                           wreg	equ	0xFE8
  2251                           fsr1h	equ	0xFE2
  2252                           fsr1l	equ	0xFE1
  2253                           postinc2	equ	0xFDE
  2254                           postdec2	equ	0xFDD
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        0
    BSS         17
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_drawToLeds
    _drawToLeds->_setLed
    _EXT_INT_Initialize->_INT0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_INT0_ISR
    _INT0_ISR->_setTCRT

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     652
                                             36 COMRAM     4     4      0
                     _ADC_Initialize
             _PIN_MANAGER_Initialize
                  _SPI2_Exchange8bit
                  _SYSTEM_Initialize
                         _drawToLeds
 ---------------------------------------------------------------------------------
 (1) _drawToLeds                                           4     4      0     440
                                             32 COMRAM     4     4      0
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               6     2      4     350
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Exchange8bit                                    2     2      0      23
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0     658
                                              8 COMRAM    18    18      0
                           _INT0_ISR
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             2     2      0     658
                                              6 COMRAM     2     2      0
                  _ADC_GetConversion
                      _INT0_CallBack
                            _setTCRT
 ---------------------------------------------------------------------------------
 (6) _setTCRT                                              6     2      4     502
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _INT0_CallBack                                        0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _PIN_MANAGER_Initialize
   _SPI2_Exchange8bit
   _SYSTEM_Initialize
     _ADC_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
   _drawToLeds
     _setLed

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _ADC_GetConversion
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
     _setTCRT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      3B       1       62.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B       9        0.0%
DATA                 0      0      3B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Dec 10 20:13:57 2017

                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l250 0676  
                                     l251 0616                                       l172 09A4  
                                     l253 0622                                       l254 062E  
                                     l255 063A                                       l263 0888  
                                     l256 0646                                       l257 0652  
                                     l265 08CE                                       l258 065E  
                                     l259 066A                                       l275 07FE  
                                     l277 0808                                       l279 0868  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                                     u525 061E                                       u630 09AE  
                                     u526 0620                                       u535 062A  
                                     u536 062C                                       u545 0636  
                                     u546 0638                                       u650 08BE  
                                     u555 0642                                       u556 0644  
                                     u660 08C0                                       u565 064E  
                                     u566 0650                                       u575 065A  
                                     u576 065C                                       u585 0666  
                                     u586 0668                                       u595 0672  
                                     u596 0674                ??_INT0_SetInterruptHandler 001D  
                             drawToLeds@i 0023                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                           _INT0_CallBack 0944                                      l1259 0878  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      i2l31 092C  
                                    i2l87 005C                                      _WPUB 000F61  
                                    _main 07EE                                      _tcrt 0029  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 003C                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A8                             __CFG_IESO$OFF 000000  
                            ___param_bank 000000                          __end_of_INT0_ISR 07EE  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 09F8  
                                   ?_main 0001                            __CFG_DEBUG$OFF 000000  
                                   i2l112 0778                                     i2l240 06C8  
                                   i2l241 06D4                                     i2l242 06E0  
                                   i2l243 06EC                                     i2l244 06F8  
                                   i2l237 071C                                     i2l245 0704  
                                   i2l246 0710                                     i2l238 06BC  
                                   _TRISA 000F92                                     _TRISB 000F93  
                          ?_INT0_CallBack 0001                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                          __end_of_TRESHOLD 0613  
                         __end_of_setTCRT 0760                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                                     wtemp6 003D  
                          __CFG_HFOFST$ON 000000                            __CFG_PBADEN$ON 000000  
                         __initialization 0964                         _SPI2_Exchange8bit 0998  
                            __end_of_main 0870                        ?_SPI2_Exchange8bit 0001  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0025  
                           __activetblptr 000002                  __size_of_SPI2_Initialize 000E  
                     ??_SPI2_Exchange8bit 001B                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                                    i2l1213 0768  
                                  i2l1229 07E2                            __CFG_WDTEN$OFF 000000  
                                  _OSCCON 000FD3                             main@dummyRead 0027  
               __end_of_SPI2_Exchange8bit 09B2                            __CFG_XINST$OFF 000000  
                          __CFG_STVREN$ON 000000                                    clear_0 096A  
                                  _setLed 0614                           ??_INT0_CallBack 0001  
                               ??_setTCRT 0005                              __mediumconst 0000  
                   main@ledPositionToSend 0028                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                ADC_GetConversion@channel 0005  INT0_SetInterruptHandler@InterruptHandler 001B  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 097E  
                              __accesstop 0060                   __end_of__initialization 0970  
                               ?_INT0_ISR 0001                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                                 INT0_ISR@i 0007  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 001D  
                      __end_of_AN_CHANNEL 0611               __size_of_EXT_INT_Initialize 0014  
               __end_of_SYSTEM_Initialize 0998                         ??_SPI2_Initialize 001B  
                         __CFG_PLLCFG$OFF 000000                               setLed@value 001D  
                   _INT0_InterruptHandler 003A                                ??_INT0_ISR 0007  
                              __pnvCOMRAM 003A                __size_of_SPI2_Exchange8bit 001A  
                      __CFG_CCP2MX$PORTC1 000000                        __CFG_CCP3MX$PORTB5 000000  
                                 ?_setLed 001B                   __size_of_ADC_Initialize 0016  
                                 _OSCCON2 000FD2                                _drawToLeds 0870  
                                 i2u42_45 06C4                                   i2u42_46 06C6  
                                 i2u43_45 06D0                                   i2u43_46 06D2  
                                 i2u51_48 0950                                   i2u44_45 06DC  
                                 i2u44_46 06DE                                   i2u61_40 07E2  
                                 i2u45_45 06E8                                   i2u45_46 06EA  
                                 _OSCTUNE 000F9B                                   i2u46_45 06F4  
                                 i2u46_46 06F6                                   i2u47_45 0700  
                                 i2u47_46 0702                                   i2u48_45 070C  
                                 i2u48_46 070E                                   i2u49_45 0718  
                                 i2u49_46 071A                                   i2u81_47 078E  
                                 _SSP2BUF 000F6F         __size_of_INT0_SetInterruptHandler 000A  
               ?_INT0_SetInterruptHandler 001B                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                            __psmallconst 0600                                   __pcinit 0964  
                                 __ramtop 0600                           __size_of_setLed 00A6  
                                 __ptext0 07EE                                   __ptext1 0870  
                                 __ptext2 0614                                   __ptext3 097E  
                                 __ptext4 09DC                                   __ptext5 08D0  
                                 __ptext6 09EA                                   __ptext7 0A02  
                                 __ptext8 09C8                                   __ptext9 09F8  
                   _OSCILLATOR_Initialize 09EA                                   _setTCRT 06BA  
                ??_PIN_MANAGER_Initialize 001B                __size_of_SYSTEM_Initialize 001A  
                    end_of_initialization 0970                             __Lmediumconst 0000  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                               ?_drawToLeds 0001  
                            setTCRT@value 0003                     SPI2_Exchange8bit@data 001C  
                       __size_of_INT0_ISR 008E              __end_of_INTERRUPT_Initialize 0A06  
    __end_of_INT0_DefaultInterruptHandler 0A08     __size_of_INT0_DefaultInterruptHandler 0002  
            _INT0_DefaultInterruptHandler 0A06                            _ADC_Initialize 09B2  
                  ?_OSCILLATOR_Initialize 0001                           _SPI2_Initialize 09DC  
                          __end_of_setLed 06BA                     __end_of_INT0_CallBack 0964  
                     start_initialization 0964           __size_of_PIN_MANAGER_Initialize 0044  
                     __size_of_drawToLeds 0060                    __end_of_ADC_Initialize 09C8  
              __end_of_EXT_INT_Initialize 09DC                                  ??_setLed 001F  
           ?_INT0_DefaultInterruptHandler 0001                               __pbssCOMRAM 0029  
                              setTCRT@pos 0001          __end_of_INT0_SetInterruptHandler 0A02  
                  _PIN_MANAGER_Initialize 08D0                                 __pintcode 0008  
                 __end_of_SPI2_Initialize 09EA                           ?_ADC_Initialize 0001  
            ??_INTERRUPT_InterruptManager 0009                          __CFG_PRICLKEN$ON 000000  
                             __smallconst 0600                                  ?_setTCRT 0001  
                    _INTERRUPT_Initialize 0A02                                  _INT0_ISR 0760  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                                _LATEbits 000F8D       __size_of_INTERRUPT_InterruptManager 00A0  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _SSP2CON1 000F6C                                  _SSP2CON3 000F69  
                                _SSP2STAT 000F6D                                  _TRESHOLD 0611  
                              _ADCON0bits 000FC2                              ??_drawToLeds 0021  
          ??_INT0_DefaultInterruptHandler 0001                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                  _INT0_SetInterruptHandler 09F8  
                                __Hrparam 0000                              _toRedrawLeds 0039  
                                __Lrparam 0000                         _ADC_GetConversion 0914  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTD2 000000  
                      __end_of_drawToLeds 08D0                          ?_SPI2_Initialize 0001  
                 ??_OSCILLATOR_Initialize 001B                        ?_ADC_GetConversion 0001  
                     ??_ADC_GetConversion 0003                                 setLed@pos 001B  
                        __size_of_setTCRT 00A6                                _AN_CHANNEL 0601  
                                __ptext10 09B2                                  __ptext11 0998  
                                __ptext13 0760                                  __ptext14 06BA  
                                __ptext15 0944                                  __ptext16 0A06  
                                __ptext17 0914                                  __ptext18 0000  
                            _SSP2CON1bits 000F6C                             __size_of_main 0082  
               __end_of_ADC_GetConversion 0944                                  int$flags 003C  
      __end_of_INTERRUPT_InterruptManager 00A8                _INTERRUPT_InterruptManager 0008  
                            _SSP2STATbits 000F6D                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 001B                        _EXT_INT_Initialize 09C8  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
                     ?_EXT_INT_Initialize 0001                          ??_ADC_Initialize 001B  
                  __size_of_INT0_CallBack 0020                      ??_EXT_INT_Initialize 001D  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 0914  
                       __CFG_FOSC$INTIO67 000000                __size_of_ADC_GetConversion 0030  
              SPI2_Exchange8bit@dummyRead 001B  
