

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Nov 30 21:45:00 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.44
    34                           ; Generated 14/09/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F45K22 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	smallconst
    69  000600                     __psmallconst:
    70                           	opt stack 0
    71  000600  00                 	db	0
    72  000601                     _AN_CHANNEL:
    73                           	opt stack 0
    74  000601  0012               	dw	18
    75  000603  001B               	dw	27
    76  000605  0009               	dw	9
    77  000607  000D               	dw	13
    78  000609  0001               	dw	1
    79  00060B  0004               	dw	4
    80  00060D  0007               	dw	7
    81  00060F  000F               	dw	15
    82  000611                     __end_of_AN_CHANNEL:
    83                           	opt stack 0
    84  000611                     _TRESHOLD:
    85                           	opt stack 0
    86  000611  8000               	dw	32768
    87  000613                     __end_of_TRESHOLD:
    88                           	opt stack 0
    89  000613  00                 	db	0	; dummy byte at the end
    90  0000                     
    91                           	psect	nvCOMRAM
    92  00003A                     __pnvCOMRAM:
    93                           	opt stack 0
    94  00003A                     _INT0_InterruptHandler:
    95                           	opt stack 0
    96  00003A                     	ds	2
    97  0000                     _ANSELA	set	3896
    98  0000                     _ANSELE	set	3900
    99  0000                     _ANSELD	set	3899
   100  0000                     _ANSELB	set	3897
   101  0000                     _ANSELC	set	3898
   102  0000                     _LATEbits	set	3981
   103  0000                     _LATAbits	set	3977
   104  0000                     _LATBbits	set	3978
   105  0000                     _LATDbits	set	3980
   106  0000                     _LATCbits	set	3979
   107  0000                     _SSP2STATbits	set	3949
   108  0000                     _SSP2CON1bits	set	3948
   109  0000                     _SSP2BUF	set	3951
   110  0000                     _SSP2CON3	set	3945
   111  0000                     _SSP2CON1	set	3948
   112  0000                     _SSP2STAT	set	3949
   113  0000                     _OSCTUNE	set	3995
   114  0000                     _OSCCON2	set	4050
   115  0000                     _OSCCON	set	4051
   116  0000                     _INTCONbits	set	4082
   117  0000                     _RCONbits	set	4048
   118  0000                     _INTCON2bits	set	4081
   119  0000                     _WPUB	set	3937
   120  0000                     _TRISD	set	3989
   121  0000                     _TRISC	set	3988
   122  0000                     _TRISB	set	3987
   123  0000                     _TRISA	set	3986
   124  0000                     _TRISE	set	3990
   125  0000                     _LATC	set	3979
   126  0000                     _LATB	set	3978
   127  0000                     _LATA	set	3977
   128  0000                     _LATD	set	3980
   129  0000                     _LATE	set	3981
   130  0000                     _ADCON0bits	set	4034
   131  0000                     _ADRESH	set	4036
   132  0000                     _ADRESL	set	4035
   133  0000                     _ADCON2	set	4032
   134  0000                     _ADCON1	set	4033
   135  0000                     _ADCON0	set	4034
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  000938                     __pcinit:
   141                           	opt stack 0
   142  000938                     start_initialization:
   143                           	opt stack 0
   144  000938                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to COMRAM (17 bytes)
   148  000938  EE00  F029         	lfsr	0,__pbssCOMRAM
   149  00093C  0E11               	movlw	17
   150  00093E                     clear_0:
   151  00093E  6AEE               	clrf	postinc0,c
   152  000940  06E8               	decf	wreg,f,c
   153  000942  E1FD               	bnz	clear_0
   154  000944                     end_of_initialization:
   155                           	opt stack 0
   156  000944                     __end_of__initialization:
   157                           	opt stack 0
   158  000944  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   159  000946  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   160  000948  0E00               	movlw	low (__Lmediumconst shr (0+16))
   161  00094A  6EF8               	movwf	tblptru,c
   162  00094C  0100               	movlb	0
   163  00094E  EF27  F004         	goto	_main	;jump to C main() function
   164                           tblptru	equ	0xFF8
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           
   168                           	psect	bssCOMRAM
   169  000029                     __pbssCOMRAM:
   170                           	opt stack 0
   171  000029                     _tcrt:
   172                           	opt stack 0
   173  000029                     	ds	16
   174  000039                     _toRedrawLeds:
   175                           	opt stack 0
   176  000039                     	ds	1
   177                           tblptru	equ	0xFF8
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           
   181                           	psect	cstackCOMRAM
   182  000001                     __pcstackCOMRAM:
   183                           	opt stack 0
   184  000001                     ?_ADC_GetConversion:
   185                           	opt stack 0
   186  000001                     setTCRT@pos:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x0
   190  000001                     	ds	2
   191  000003                     ??_ADC_GetConversion:
   192  000003                     setTCRT@value:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x2
   196  000003                     	ds	2
   197  000005                     ??_setTCRT:
   198  000005                     ADC_GetConversion@channel:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x4
   202  000005                     	ds	2
   203  000007                     INT0_ISR@i:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0x6
   207  000007                     	ds	2
   208  000009                     ??_INTERRUPT_InterruptManager:
   209                           
   210                           ; 1 bytes @ 0x8
   211  000009                     	ds	18
   212  00001B                     SPI2_Exchange8bit@dummyRead:
   213                           	opt stack 0
   214  00001B                     INT0_SetInterruptHandler@InterruptHandler:
   215                           	opt stack 0
   216  00001B                     setLed@pos:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x1A
   220  00001B                     	ds	1
   221  00001C                     SPI2_Exchange8bit@data:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x1B
   225  00001C                     	ds	1
   226  00001D                     setLed@value:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0x1C
   230  00001D                     	ds	2
   231  00001F                     ??_setLed:
   232                           
   233                           ; 1 bytes @ 0x1E
   234  00001F                     	ds	2
   235  000021                     
   236                           ; 1 bytes @ 0x20
   237  000021                     	ds	2
   238  000023                     drawToLeds@i:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x22
   242  000023                     	ds	2
   243  000025                     ??_main:
   244                           
   245                           ; 1 bytes @ 0x24
   246  000025                     	ds	2
   247  000027                     main@dummyRead:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x26
   251  000027                     	ds	1
   252  000028                     main@ledPositionToSend:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x27
   256  000028                     	ds	1
   257                           tblptru	equ	0xFF8
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 144 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;  ledPositionT    1   39[COMRAM] unsigned char 
   271 ;;  dummyRead       1   38[COMRAM] unsigned char 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   281 ;;      Params:         0       0       0       0       0       0       0
   282 ;;      Locals:         2       0       0       0       0       0       0
   283 ;;      Temps:          2       0       0       0       0       0       0
   284 ;;      Totals:         4       0       0       0       0       0       0
   285 ;;Total ram usage:        4 bytes
   286 ;; Hardware stack levels required when called:    7
   287 ;; This function calls:
   288 ;;		_ADC_Initialize
   289 ;;		_PIN_MANAGER_Initialize
   290 ;;		_SPI2_Exchange8bit
   291 ;;		_SYSTEM_Initialize
   292 ;;		_drawToLeds
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text0
   299  00084E                     __ptext0:
   300                           	opt stack 0
   301  00084E                     _main:
   302                           	opt stack 24
   303                           
   304                           ;main.c: 147: SYSTEM_Initialize();
   305                           
   306                           ;incstack = 0
   307  00084E  ECA9  F004         	call	_SYSTEM_Initialize	;wreg free
   308                           
   309                           ;main.c: 166: (INTCONbits.GIE = 1);
   310  000852  8EF2               	bsf	intcon,7,c	;volatile
   311                           
   312                           ;main.c: 172: (INTCONbits.PEIE = 1);
   313  000854  8CF2               	bsf	intcon,6,c	;volatile
   314                           
   315                           ;main.c: 177: PIN_MANAGER_Initialize();
   316  000856  EC52  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   317                           
   318                           ;main.c: 178: ADC_Initialize();
   319  00085A  ECC3  F004         	call	_ADC_Initialize	;wreg free
   320  00085E                     
   321                           ;main.c: 181: {
   322                           ;main.c: 185: drawToLeds();
   323  00085E  ECF7  F003         	call	_drawToLeds	;wreg free
   324                           
   325                           ;main.c: 186: toRedrawLeds = 0;
   326  000862  0E00               	movlw	0
   327  000864  6E39               	movwf	_toRedrawLeds,c
   328                           
   329                           ;main.c: 188: uint8_t ledPositionToSend;
   330                           ;main.c: 189: uint8_t dummyRead;
   331                           ;main.c: 191: while(!toRedrawLeds)
   332  000866  D01A               	goto	l278
   333  000868                     
   334                           ;main.c: 192: {
   335                           ;main.c: 193: ledPositionToSend = SPI2_Exchange8bit(0b11100011);
   336  000868  0EE3               	movlw	227
   337  00086A  ECB6  F004         	call	_SPI2_Exchange8bit
   338  00086E  6E28               	movwf	main@ledPositionToSend,c
   339                           
   340                           ;main.c: 194: if(ledPositionToSend < 8)
   341  000870  0E08               	movlw	8
   342  000872  6028               	cpfslt	main@ledPositionToSend,c
   343  000874  D013               	goto	l278
   344                           
   345                           ;main.c: 195: dummyRead = SPI2_Exchange8bit((uint8_t)(tcrt[ledPositionToSend] >> 8));
   346  000876  5028               	movf	main@ledPositionToSend,w,c
   347  000878  0D02               	mullw	2
   348  00087A  0E29               	movlw	low _tcrt
   349  00087C  24F3               	addwf	prodl,w,c
   350  00087E  6ED9               	movwf	fsr2l,c
   351  000880  0E00               	movlw	high _tcrt
   352  000882  20F4               	addwfc	prodh,w,c
   353  000884  6EDA               	movwf	fsr2h,c
   354  000886  CFDE F025          	movff	postinc2,??_main
   355  00088A  CFDD F026          	movff	postdec2,??_main+1
   356  00088E  C026  F025         	movff	??_main+1,??_main
   357  000892  6A26               	clrf	??_main+1,c
   358  000894  5025               	movf	??_main,w,c
   359  000896  ECB6  F004         	call	_SPI2_Exchange8bit
   360  00089A  6E27               	movwf	main@dummyRead,c
   361  00089C                     l278:
   362  00089C  5039               	movf	_toRedrawLeds,w,c
   363  00089E  A4D8               	btfss	status,2,c
   364  0008A0  D7DE               	goto	l275
   365  0008A2  D7E2               	goto	l277
   366  0008A4                     __end_of_main:
   367                           	opt stack 0
   368                           tblptru	equ	0xFF8
   369                           prodh	equ	0xFF4
   370                           prodl	equ	0xFF3
   371                           intcon	equ	0xFF2
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           postinc2	equ	0xFDE
   375                           postdec2	equ	0xFDD
   376                           fsr2h	equ	0xFDA
   377                           fsr2l	equ	0xFD9
   378                           status	equ	0xFD8
   379                           
   380 ;; *************** function _drawToLeds *****************
   381 ;; Defined at:
   382 ;;		line 127 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;  i               2   34[COMRAM] int 
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   396 ;;      Params:         0       0       0       0       0       0       0
   397 ;;      Locals:         2       0       0       0       0       0       0
   398 ;;      Temps:          2       0       0       0       0       0       0
   399 ;;      Totals:         4       0       0       0       0       0       0
   400 ;;Total ram usage:        4 bytes
   401 ;; Hardware stack levels used:    1
   402 ;; Hardware stack levels required when called:    5
   403 ;; This function calls:
   404 ;;		_setLed
   405 ;; This function is called by:
   406 ;;		_main
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           	psect	text1
   411  0007EE                     __ptext1:
   412                           	opt stack 0
   413  0007EE                     _drawToLeds:
   414                           	opt stack 25
   415                           
   416                           ;main.c: 129: for(int i = 0; i<8; i++)
   417                           
   418                           ;incstack = 0
   419  0007EE  0E00               	movlw	0
   420  0007F0  6E24               	movwf	drawToLeds@i+1,c
   421  0007F2  0E00               	movlw	0
   422  0007F4  6E23               	movwf	drawToLeds@i,c
   423  0007F6                     l1254:
   424  0007F6  BE24               	btfsc	drawToLeds@i+1,7,c
   425  0007F8  D006               	goto	l263
   426  0007FA  5024               	movf	drawToLeds@i+1,w,c
   427  0007FC  E127               	bnz	l265
   428  0007FE  0E08               	movlw	8
   429  000800  5C23               	subwf	drawToLeds@i,w,c
   430  000802  B0D8               	btfsc	status,0,c
   431  000804  0012               	return	
   432  000806                     l263:
   433                           
   434                           ;main.c: 130: setLed(i, tcrt[i]<TRESHOLD);
   435  000806  C023  F01B         	movff	drawToLeds@i,setLed@pos
   436  00080A  C024  F01C         	movff	drawToLeds@i+1,setLed@pos+1
   437  00080E  0E11               	movlw	low _TRESHOLD
   438  000810  6EF6               	movwf	tblptrl,c
   439  000812                     	if	1	;There is more than 1 active tblptr byte
   440  000812  0E06               	movlw	high _TRESHOLD
   441  000814  6EF7               	movwf	tblptrh,c
   442  000816                     	endif
   443  000816                     	if	0	;There are less than 3 active tblptr bytes
   444  000816                     	endif
   445  000816  90D8               	bcf	status,0,c
   446  000818  3423               	rlcf	drawToLeds@i,w,c
   447  00081A  6ED9               	movwf	fsr2l,c
   448  00081C  3424               	rlcf	drawToLeds@i+1,w,c
   449  00081E  6EDA               	movwf	fsr2h,c
   450  000820  0E29               	movlw	low _tcrt
   451  000822  26D9               	addwf	fsr2l,f,c
   452  000824  0E00               	movlw	high _tcrt
   453  000826  22DA               	addwfc	fsr2h,f,c
   454  000828  0009               	tblrd		*+
   455  00082A  50F5               	movf	tablat,w,c
   456  00082C  5CDE               	subwf	postinc2,w,c
   457  00082E  0009               	tblrd		*+
   458  000830  50F5               	movf	tablat,w,c
   459  000832  58DE               	subwfb	postinc2,w,c
   460  000834  B0D8               	btfsc	status,0,c
   461  000836  D002               	goto	u640
   462  000838  0E01               	movlw	1
   463  00083A  D001               	goto	u650
   464  00083C                     u640:
   465  00083C  0E00               	movlw	0
   466  00083E                     u650:
   467  00083E  6E1D               	movwf	setLed@value,c
   468  000840  6A1E               	clrf	setLed@value+1,c
   469  000842  EC0A  F003         	call	_setLed	;wreg free
   470  000846  4A23               	infsnz	drawToLeds@i,f,c
   471  000848  2A24               	incf	drawToLeds@i+1,f,c
   472  00084A  D7D5               	goto	l1254
   473  00084C                     l265:
   474  00084C  0012               	return		;funcret
   475  00084E                     __end_of_drawToLeds:
   476                           	opt stack 0
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           prodh	equ	0xFF4
   482                           prodl	equ	0xFF3
   483                           intcon	equ	0xFF2
   484                           postinc0	equ	0xFEE
   485                           wreg	equ	0xFE8
   486                           postinc2	equ	0xFDE
   487                           postdec2	equ	0xFDD
   488                           fsr2h	equ	0xFDA
   489                           fsr2l	equ	0xFD9
   490                           status	equ	0xFD8
   491                           
   492 ;; *************** function _setLed *****************
   493 ;; Defined at:
   494 ;;		line 96 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  pos             2   26[COMRAM] int 
   497 ;;  value           2   28[COMRAM] int 
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   509 ;;      Params:         4       0       0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0       0       0
   511 ;;      Temps:          2       0       0       0       0       0       0
   512 ;;      Totals:         6       0       0       0       0       0       0
   513 ;;Total ram usage:        6 bytes
   514 ;; Hardware stack levels used:    1
   515 ;; Hardware stack levels required when called:    4
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_drawToLeds
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text2
   524  000614                     __ptext2:
   525                           	opt stack 0
   526  000614                     _setLed:
   527                           	opt stack 25
   528                           
   529                           ;main.c: 98: switch(pos)
   530                           
   531                           ;incstack = 0
   532  000614  D030               	goto	l250
   533  000616                     l251:
   534                           
   535                           ;main.c: 101: LATCbits.LATC4 = value;
   536  000616  B01D               	btfsc	setLed@value,0,c
   537  000618  D002               	bra	u515
   538  00061A  988B               	bcf	3979,4,c	;volatile
   539  00061C  D001               	bra	u516
   540  00061E                     u515:
   541  00061E  888B               	bsf	3979,4,c	;volatile
   542  000620                     u516:
   543                           
   544                           ;main.c: 102: break;
   545  000620  0012               	return	
   546  000622                     l253:
   547                           
   548                           ;main.c: 104: LATDbits.LATD5 = value;
   549  000622  B01D               	btfsc	setLed@value,0,c
   550  000624  D002               	bra	u525
   551  000626  9A8C               	bcf	3980,5,c	;volatile
   552  000628  D001               	bra	u526
   553  00062A                     u525:
   554  00062A  8A8C               	bsf	3980,5,c	;volatile
   555  00062C                     u526:
   556                           
   557                           ;main.c: 105: break;
   558  00062C  0012               	return	
   559  00062E                     l254:
   560                           
   561                           ;main.c: 107: LATBbits.LATB1 = value;
   562  00062E  B01D               	btfsc	setLed@value,0,c
   563  000630  D002               	bra	u535
   564  000632  928A               	bcf	3978,1,c	;volatile
   565  000634  D001               	bra	u536
   566  000636                     u535:
   567  000636  828A               	bsf	3978,1,c	;volatile
   568  000638                     u536:
   569                           
   570                           ;main.c: 108: break;
   571  000638  0012               	return	
   572  00063A                     l255:
   573                           
   574                           ;main.c: 110: LATDbits.LATD2 = value;
   575  00063A  B01D               	btfsc	setLed@value,0,c
   576  00063C  D002               	bra	u545
   577  00063E  948C               	bcf	3980,2,c	;volatile
   578  000640  D001               	bra	u546
   579  000642                     u545:
   580  000642  848C               	bsf	3980,2,c	;volatile
   581  000644                     u546:
   582                           
   583                           ;main.c: 111: break;
   584  000644  0012               	return	
   585  000646                     l256:
   586                           
   587                           ;main.c: 113: LATAbits.LATA0 = value;
   588  000646  B01D               	btfsc	setLed@value,0,c
   589  000648  D002               	bra	u555
   590  00064A  9089               	bcf	3977,0,c	;volatile
   591  00064C  D001               	bra	u556
   592  00064E                     u555:
   593  00064E  8089               	bsf	3977,0,c	;volatile
   594  000650                     u556:
   595                           
   596                           ;main.c: 114: break;
   597  000650  0012               	return	
   598  000652                     l257:
   599                           
   600                           ;main.c: 116: LATAbits.LATA3 = value;
   601  000652  B01D               	btfsc	setLed@value,0,c
   602  000654  D002               	bra	u565
   603  000656  9689               	bcf	3977,3,c	;volatile
   604  000658  D001               	bra	u566
   605  00065A                     u565:
   606  00065A  8689               	bsf	3977,3,c	;volatile
   607  00065C                     u566:
   608                           
   609                           ;main.c: 117: break;
   610  00065C  0012               	return	
   611  00065E                     l258:
   612                           
   613                           ;main.c: 119: LATEbits.LATE0 = value;
   614  00065E  B01D               	btfsc	setLed@value,0,c
   615  000660  D002               	bra	u575
   616  000662  908D               	bcf	3981,0,c	;volatile
   617  000664  D001               	bra	u576
   618  000666                     u575:
   619  000666  808D               	bsf	3981,0,c	;volatile
   620  000668                     u576:
   621                           
   622                           ;main.c: 120: break;
   623  000668  0012               	return	
   624  00066A                     l259:
   625                           
   626                           ;main.c: 122: LATCbits.LATC1 = value;
   627  00066A  B01D               	btfsc	setLed@value,0,c
   628  00066C  D002               	bra	u585
   629  00066E  928B               	bcf	3979,1,c	;volatile
   630  000670  D001               	bra	u586
   631  000672                     u585:
   632  000672  828B               	bsf	3979,1,c	;volatile
   633  000674                     u586:
   634                           
   635                           ;main.c: 124: }
   636                           
   637                           ;main.c: 123: break;
   638  000674  0012               	return	
   639  000676                     l250:
   640  000676  C01B  F01F         	movff	setLed@pos,??_setLed
   641  00067A  C01C  F020         	movff	setLed@pos+1,??_setLed+1
   642                           
   643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   644                           ; Switch size 1, requested type "space"
   645                           ; Number of cases is 1, Range of values is 0 to 0
   646                           ; switch strategies available:
   647                           ; Name         Instructions Cycles
   648                           ; simple_byte            4     3 (average)
   649                           ;	Chosen strategy is simple_byte
   650  00067E  5020               	movf	??_setLed+1,w,c
   651  000680  0A00               	xorlw	0	; case 0
   652  000682  A4D8               	btfss	status,2,c
   653  000684  0012               	return	
   654                           
   655                           ; Switch size 1, requested type "space"
   656                           ; Number of cases is 8, Range of values is 0 to 7
   657                           ; switch strategies available:
   658                           ; Name         Instructions Cycles
   659                           ; simple_byte           25    13 (average)
   660                           ;	Chosen strategy is simple_byte
   661  000686  501F               	movf	??_setLed,w,c
   662  000688  0A00               	xorlw	0	; case 0
   663  00068A  B4D8               	btfsc	status,2,c
   664  00068C  D7C4               	goto	l251
   665  00068E  0A01               	xorlw	1	; case 1
   666  000690  B4D8               	btfsc	status,2,c
   667  000692  D7C7               	goto	l253
   668  000694  0A03               	xorlw	3	; case 2
   669  000696  B4D8               	btfsc	status,2,c
   670  000698  D7CA               	goto	l254
   671  00069A  0A01               	xorlw	1	; case 3
   672  00069C  B4D8               	btfsc	status,2,c
   673  00069E  D7CD               	goto	l255
   674  0006A0  0A07               	xorlw	7	; case 4
   675  0006A2  B4D8               	btfsc	status,2,c
   676  0006A4  D7D0               	goto	l256
   677  0006A6  0A01               	xorlw	1	; case 5
   678  0006A8  B4D8               	btfsc	status,2,c
   679  0006AA  D7D3               	goto	l257
   680  0006AC  0A03               	xorlw	3	; case 6
   681  0006AE  B4D8               	btfsc	status,2,c
   682  0006B0  D7D6               	goto	l258
   683  0006B2  0A01               	xorlw	1	; case 7
   684  0006B4  A4D8               	btfss	status,2,c
   685  0006B6  0012               	return	
   686  0006B8  D7D8               	goto	l259
   687  0006BA                     __end_of_setLed:
   688                           	opt stack 0
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           prodh	equ	0xFF4
   694                           prodl	equ	0xFF3
   695                           intcon	equ	0xFF2
   696                           postinc0	equ	0xFEE
   697                           wreg	equ	0xFE8
   698                           postinc2	equ	0xFDE
   699                           postdec2	equ	0xFDD
   700                           fsr2h	equ	0xFDA
   701                           fsr2l	equ	0xFD9
   702                           status	equ	0xFD8
   703                           
   704 ;; *************** function _SYSTEM_Initialize *****************
   705 ;; Defined at:
   706 ;;		line 111 in file "mcc_generated_files/mcc.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   720 ;;      Params:         0       0       0       0       0       0       0
   721 ;;      Locals:         0       0       0       0       0       0       0
   722 ;;      Temps:          0       0       0       0       0       0       0
   723 ;;      Totals:         0       0       0       0       0       0       0
   724 ;;Total ram usage:        0 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    6
   727 ;; This function calls:
   728 ;;		_ADC_Initialize
   729 ;;		_EXT_INT_Initialize
   730 ;;		_INTERRUPT_Initialize
   731 ;;		_OSCILLATOR_Initialize
   732 ;;		_PIN_MANAGER_Initialize
   733 ;;		_SPI2_Initialize
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text3
   740  000952                     __ptext3:
   741                           	opt stack 0
   742  000952                     _SYSTEM_Initialize:
   743                           	opt stack 24
   744                           
   745                           ;mcc.c: 114: INTERRUPT_Initialize();
   746                           
   747                           ;incstack = 0
   748  000952  ECEB  F004         	call	_INTERRUPT_Initialize	;wreg free
   749                           
   750                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   751  000956  EC52  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   752                           
   753                           ;mcc.c: 116: OSCILLATOR_Initialize();
   754  00095A  ECDF  F004         	call	_OSCILLATOR_Initialize	;wreg free
   755                           
   756                           ;mcc.c: 117: SPI2_Initialize();
   757  00095E  ECD8  F004         	call	_SPI2_Initialize	;wreg free
   758                           
   759                           ;mcc.c: 118: EXT_INT_Initialize();
   760  000962  ECCE  F004         	call	_EXT_INT_Initialize	;wreg free
   761                           
   762                           ;mcc.c: 119: ADC_Initialize();
   763  000966  ECC3  F004         	call	_ADC_Initialize	;wreg free
   764  00096A  0012               	return		;funcret
   765  00096C                     __end_of_SYSTEM_Initialize:
   766                           	opt stack 0
   767                           tblptru	equ	0xFF8
   768                           tblptrh	equ	0xFF7
   769                           tblptrl	equ	0xFF6
   770                           tablat	equ	0xFF5
   771                           prodh	equ	0xFF4
   772                           prodl	equ	0xFF3
   773                           intcon	equ	0xFF2
   774                           postinc0	equ	0xFEE
   775                           wreg	equ	0xFE8
   776                           postinc2	equ	0xFDE
   777                           postdec2	equ	0xFDD
   778                           fsr2h	equ	0xFDA
   779                           fsr2l	equ	0xFD9
   780                           status	equ	0xFD8
   781                           
   782 ;; *************** function _SPI2_Initialize *****************
   783 ;; Defined at:
   784 ;;		line 65 in file "mcc_generated_files/spi2.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   798 ;;      Params:         0       0       0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    4
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_SYSTEM_Initialize
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text4
   813  0009B0                     __ptext4:
   814                           	opt stack 0
   815  0009B0                     _SPI2_Initialize:
   816                           	opt stack 25
   817                           
   818                           ;spi2.c: 70: SSP2STAT = 0x00;
   819                           
   820                           ;incstack = 0
   821  0009B0  0E00               	movlw	0
   822  0009B2  6E6D               	movwf	3949,c	;volatile
   823                           
   824                           ;spi2.c: 73: SSP2CON1 = 0x24;
   825  0009B4  0E24               	movlw	36
   826  0009B6  6E6C               	movwf	3948,c	;volatile
   827                           
   828                           ;spi2.c: 76: SSP2CON3 = 0x00;
   829  0009B8  0E00               	movlw	0
   830  0009BA  6E69               	movwf	3945,c	;volatile
   831  0009BC  0012               	return		;funcret
   832  0009BE                     __end_of_SPI2_Initialize:
   833                           	opt stack 0
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           prodh	equ	0xFF4
   839                           prodl	equ	0xFF3
   840                           intcon	equ	0xFF2
   841                           postinc0	equ	0xFEE
   842                           wreg	equ	0xFE8
   843                           postinc2	equ	0xFDE
   844                           postdec2	equ	0xFDD
   845                           fsr2h	equ	0xFDA
   846                           fsr2l	equ	0xFD9
   847                           status	equ	0xFD8
   848                           
   849 ;; *************** function _PIN_MANAGER_Initialize *****************
   850 ;; Defined at:
   851 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, status,2
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   865 ;;      Params:         0       0       0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0
   868 ;;      Totals:         0       0       0       0       0       0       0
   869 ;;Total ram usage:        0 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    4
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_SYSTEM_Initialize
   876 ;;		_main
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text5
   881  0008A4                     __ptext5:
   882                           	opt stack 0
   883  0008A4                     _PIN_MANAGER_Initialize:
   884                           	opt stack 25
   885                           
   886                           ;pin_manager.c: 57: LATE = 0x00;
   887                           
   888                           ;incstack = 0
   889  0008A4  0E00               	movlw	0
   890  0008A6  6E8D               	movwf	3981,c	;volatile
   891                           
   892                           ;pin_manager.c: 58: LATD = 0x00;
   893  0008A8  0E00               	movlw	0
   894  0008AA  6E8C               	movwf	3980,c	;volatile
   895                           
   896                           ;pin_manager.c: 59: LATA = 0x00;
   897  0008AC  0E00               	movlw	0
   898  0008AE  6E89               	movwf	3977,c	;volatile
   899                           
   900                           ;pin_manager.c: 60: LATB = 0x00;
   901  0008B0  0E00               	movlw	0
   902  0008B2  6E8A               	movwf	3978,c	;volatile
   903                           
   904                           ;pin_manager.c: 61: LATC = 0x00;
   905  0008B4  0E00               	movlw	0
   906  0008B6  6E8B               	movwf	3979,c	;volatile
   907                           
   908                           ;pin_manager.c: 66: TRISE = 0x04;
   909  0008B8  0E04               	movlw	4
   910  0008BA  6E96               	movwf	3990,c	;volatile
   911                           
   912                           ;pin_manager.c: 67: TRISA = 0xE2;
   913  0008BC  0EE2               	movlw	226
   914  0008BE  6E92               	movwf	3986,c	;volatile
   915                           
   916                           ;pin_manager.c: 68: TRISB = 0xE9;
   917  0008C0  0EE9               	movlw	233
   918  0008C2  6E93               	movwf	3987,c	;volatile
   919                           
   920                           ;pin_manager.c: 69: TRISC = 0xC9;
   921  0008C4  0EC9               	movlw	201
   922  0008C6  6E94               	movwf	3988,c	;volatile
   923                           
   924                           ;pin_manager.c: 70: TRISD = 0x8B;
   925  0008C8  0E8B               	movlw	139
   926  0008CA  6E95               	movwf	3989,c	;volatile
   927                           
   928                           ;pin_manager.c: 75: ANSELC = 0xFC;
   929  0008CC  0EFC               	movlw	252
   930  0008CE  010F               	movlb	15	; () banked
   931  0008D0  6F3A               	movwf	58,b	;volatile
   932                           
   933                           ;pin_manager.c: 76: ANSELB = 0x3E;
   934  0008D2  0E3E               	movlw	62
   935  0008D4  6F39               	movwf	57,b	;volatile
   936                           
   937                           ;pin_manager.c: 77: ANSELD = 0xE4;
   938  0008D6  0EE4               	movlw	228
   939  0008D8  6F3B               	movwf	59,b	;volatile
   940                           
   941                           ;pin_manager.c: 78: ANSELE = 0x07;
   942  0008DA  0E07               	movlw	7
   943  0008DC  6F3C               	movwf	60,b	;volatile
   944                           
   945                           ;pin_manager.c: 79: ANSELA = 0x2F;
   946  0008DE  0E2F               	movlw	47
   947  0008E0  6F38               	movwf	56,b	;volatile
   948                           
   949                           ; BSR set to: 15
   950                           ;pin_manager.c: 84: WPUB = 0xFF;
   951  0008E2  6861               	setf	3937,c	;volatile
   952                           
   953                           ; BSR set to: 15
   954                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
   955  0008E4  9EF1               	bcf	intcon2,7,c	;volatile
   956                           
   957                           ; BSR set to: 15
   958  0008E6  0012               	return		;funcret
   959  0008E8                     __end_of_PIN_MANAGER_Initialize:
   960                           	opt stack 0
   961                           tblptru	equ	0xFF8
   962                           tblptrh	equ	0xFF7
   963                           tblptrl	equ	0xFF6
   964                           tablat	equ	0xFF5
   965                           prodh	equ	0xFF4
   966                           prodl	equ	0xFF3
   967                           intcon	equ	0xFF2
   968                           intcon2	equ	0xFF1
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           postinc2	equ	0xFDE
   972                           postdec2	equ	0xFDD
   973                           fsr2h	equ	0xFDA
   974                           fsr2l	equ	0xFD9
   975                           status	equ	0xFD8
   976                           
   977 ;; *************** function _OSCILLATOR_Initialize *****************
   978 ;; Defined at:
   979 ;;		line 122 in file "mcc_generated_files/mcc.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, status,2
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   993 ;;      Params:         0       0       0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0       0       0
   995 ;;      Temps:          0       0       0       0       0       0       0
   996 ;;      Totals:         0       0       0       0       0       0       0
   997 ;;Total ram usage:        0 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; Hardware stack levels required when called:    4
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_SYSTEM_Initialize
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text6
  1008  0009BE                     __ptext6:
  1009                           	opt stack 0
  1010  0009BE                     _OSCILLATOR_Initialize:
  1011                           	opt stack 25
  1012                           
  1013                           ;mcc.c: 125: OSCCON = 0x70;
  1014                           
  1015                           ; BSR set to: 15
  1016                           ;incstack = 0
  1017  0009BE  0E70               	movlw	112
  1018  0009C0  6ED3               	movwf	4051,c	;volatile
  1019                           
  1020                           ;mcc.c: 127: OSCCON2 = 0x04;
  1021  0009C2  0E04               	movlw	4
  1022  0009C4  6ED2               	movwf	4050,c	;volatile
  1023                           
  1024                           ;mcc.c: 129: OSCTUNE = 0x00;
  1025  0009C6  0E00               	movlw	0
  1026  0009C8  6E9B               	movwf	3995,c	;volatile
  1027  0009CA  0012               	return		;funcret
  1028  0009CC                     __end_of_OSCILLATOR_Initialize:
  1029                           	opt stack 0
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           prodh	equ	0xFF4
  1035                           prodl	equ	0xFF3
  1036                           intcon	equ	0xFF2
  1037                           intcon2	equ	0xFF1
  1038                           postinc0	equ	0xFEE
  1039                           wreg	equ	0xFE8
  1040                           postinc2	equ	0xFDE
  1041                           postdec2	equ	0xFDD
  1042                           fsr2h	equ	0xFDA
  1043                           fsr2l	equ	0xFD9
  1044                           status	equ	0xFD8
  1045                           
  1046 ;; *************** function _INTERRUPT_Initialize *****************
  1047 ;; Defined at:
  1048 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		None
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1062 ;;      Params:         0       0       0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    4
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_SYSTEM_Initialize
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text7
  1077  0009D6                     __ptext7:
  1078                           	opt stack 0
  1079  0009D6                     _INTERRUPT_Initialize:
  1080                           	opt stack 25
  1081                           
  1082                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1083                           
  1084                           ;incstack = 0
  1085  0009D6  9ED0               	bcf	4048,7,c	;volatile
  1086  0009D8  0012               	return		;funcret
  1087  0009DA                     __end_of_INTERRUPT_Initialize:
  1088                           	opt stack 0
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           prodh	equ	0xFF4
  1094                           prodl	equ	0xFF3
  1095                           intcon	equ	0xFF2
  1096                           intcon2	equ	0xFF1
  1097                           postinc0	equ	0xFEE
  1098                           wreg	equ	0xFE8
  1099                           postinc2	equ	0xFDE
  1100                           postdec2	equ	0xFDD
  1101                           fsr2h	equ	0xFDA
  1102                           fsr2l	equ	0xFD9
  1103                           status	equ	0xFD8
  1104                           
  1105 ;; *************** function _EXT_INT_Initialize *****************
  1106 ;; Defined at:
  1107 ;;		line 103 in file "mcc_generated_files/ext_int.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1121 ;;      Params:         0       0       0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0
  1124 ;;      Totals:         0       0       0       0       0       0       0
  1125 ;;Total ram usage:        0 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    5
  1128 ;; This function calls:
  1129 ;;		_INT0_SetInterruptHandler
  1130 ;; This function is called by:
  1131 ;;		_SYSTEM_Initialize
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text8
  1136  00099C                     __ptext8:
  1137                           	opt stack 0
  1138  00099C                     _EXT_INT_Initialize:
  1139                           	opt stack 24
  1140                           
  1141                           ;ext_int.c: 112: (INTCONbits.INT0IF = 0);
  1142                           
  1143                           ;incstack = 0
  1144  00099C  92F2               	bcf	intcon,1,c	;volatile
  1145                           
  1146                           ;ext_int.c: 113: (INTCON2bits.INTEDG0 = 1);
  1147  00099E  8CF1               	bsf	intcon2,6,c	;volatile
  1148                           
  1149                           ;ext_int.c: 115: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  1150  0009A0  0EDA               	movlw	low _INT0_DefaultInterruptHandler
  1151  0009A2  6E1B               	movwf	INT0_SetInterruptHandler@InterruptHandler,c
  1152  0009A4  0E09               	movlw	high _INT0_DefaultInterruptHandler
  1153  0009A6  6E1C               	movwf	INT0_SetInterruptHandler@InterruptHandler+1,c
  1154  0009A8  ECE6  F004         	call	_INT0_SetInterruptHandler	;wreg free
  1155                           
  1156                           ;ext_int.c: 116: (INTCONbits.INT0IE = 1);
  1157  0009AC  88F2               	bsf	intcon,4,c	;volatile
  1158  0009AE  0012               	return		;funcret
  1159  0009B0                     __end_of_EXT_INT_Initialize:
  1160                           	opt stack 0
  1161                           tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           tblptrl	equ	0xFF6
  1164                           tablat	equ	0xFF5
  1165                           prodh	equ	0xFF4
  1166                           prodl	equ	0xFF3
  1167                           intcon	equ	0xFF2
  1168                           intcon2	equ	0xFF1
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           postinc2	equ	0xFDE
  1172                           postdec2	equ	0xFDD
  1173                           fsr2h	equ	0xFDA
  1174                           fsr2l	equ	0xFD9
  1175                           status	equ	0xFD8
  1176                           
  1177 ;; *************** function _INT0_SetInterruptHandler *****************
  1178 ;; Defined at:
  1179 ;;		line 83 in file "mcc_generated_files/ext_int.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  InterruptHan    2   26[COMRAM] PTR FTN()void 
  1182 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2, status,0
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1194 ;;      Params:         2       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0
  1197 ;;      Totals:         2       0       0       0       0       0       0
  1198 ;;Total ram usage:        2 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    4
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_EXT_INT_Initialize
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text9
  1209  0009CC                     __ptext9:
  1210                           	opt stack 0
  1211  0009CC                     _INT0_SetInterruptHandler:
  1212                           	opt stack 24
  1213                           
  1214                           ;ext_int.c: 84: INT0_InterruptHandler = InterruptHandler;
  1215                           
  1216                           ;incstack = 0
  1217  0009CC  C01B  F03A         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1218  0009D0  C01C  F03B         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1219  0009D4  0012               	return		;funcret
  1220  0009D6                     __end_of_INT0_SetInterruptHandler:
  1221                           	opt stack 0
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           prodh	equ	0xFF4
  1227                           prodl	equ	0xFF3
  1228                           intcon	equ	0xFF2
  1229                           intcon2	equ	0xFF1
  1230                           postinc0	equ	0xFEE
  1231                           wreg	equ	0xFE8
  1232                           postinc2	equ	0xFDE
  1233                           postdec2	equ	0xFDD
  1234                           fsr2h	equ	0xFDA
  1235                           fsr2l	equ	0xFD9
  1236                           status	equ	0xFD8
  1237                           
  1238 ;; *************** function _ADC_Initialize *****************
  1239 ;; Defined at:
  1240 ;;		line 58 in file "mcc_generated_files/adc.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, status,2
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1254 ;;      Params:         0       0       0       0       0       0       0
  1255 ;;      Locals:         0       0       0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0
  1257 ;;      Totals:         0       0       0       0       0       0       0
  1258 ;;Total ram usage:        0 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    4
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_SYSTEM_Initialize
  1265 ;;		_main
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text10
  1270  000986                     __ptext10:
  1271                           	opt stack 0
  1272  000986                     _ADC_Initialize:
  1273                           	opt stack 25
  1274                           
  1275                           ;adc.c: 63: ADCON0 = 0x01;
  1276                           
  1277                           ;incstack = 0
  1278  000986  0E01               	movlw	1
  1279  000988  6EC2               	movwf	4034,c	;volatile
  1280                           
  1281                           ;adc.c: 66: ADCON1 = 0x00;
  1282  00098A  0E00               	movlw	0
  1283  00098C  6EC1               	movwf	4033,c	;volatile
  1284                           
  1285                           ;adc.c: 69: ADCON2 = 0x00;
  1286  00098E  0E00               	movlw	0
  1287  000990  6EC0               	movwf	4032,c	;volatile
  1288                           
  1289                           ;adc.c: 72: ADRESL = 0x00;
  1290  000992  0E00               	movlw	0
  1291  000994  6EC3               	movwf	4035,c	;volatile
  1292                           
  1293                           ;adc.c: 75: ADRESH = 0x00;
  1294  000996  0E00               	movlw	0
  1295  000998  6EC4               	movwf	4036,c	;volatile
  1296  00099A  0012               	return		;funcret
  1297  00099C                     __end_of_ADC_Initialize:
  1298                           	opt stack 0
  1299                           tblptru	equ	0xFF8
  1300                           tblptrh	equ	0xFF7
  1301                           tblptrl	equ	0xFF6
  1302                           tablat	equ	0xFF5
  1303                           prodh	equ	0xFF4
  1304                           prodl	equ	0xFF3
  1305                           intcon	equ	0xFF2
  1306                           intcon2	equ	0xFF1
  1307                           postinc0	equ	0xFEE
  1308                           wreg	equ	0xFE8
  1309                           postinc2	equ	0xFDE
  1310                           postdec2	equ	0xFDD
  1311                           fsr2h	equ	0xFDA
  1312                           fsr2l	equ	0xFD9
  1313                           status	equ	0xFD8
  1314                           
  1315 ;; *************** function _SPI2_Exchange8bit *****************
  1316 ;; Defined at:
  1317 ;;		line 79 in file "mcc_generated_files/spi2.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  data            1    wreg     unsigned char 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  data            1   27[COMRAM] unsigned char 
  1322 ;;  dummyRead       1   26[COMRAM] unsigned char 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      unsigned char 
  1325 ;; Registers used:
  1326 ;;		wreg, status,2
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1332 ;;      Params:         0       0       0       0       0       0       0
  1333 ;;      Locals:         2       0       0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0
  1335 ;;      Totals:         2       0       0       0       0       0       0
  1336 ;;Total ram usage:        2 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    4
  1339 ;; This function calls:
  1340 ;;		Nothing
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;;		_SPI2_Exchange8bitBuffer
  1344 ;;		_sendOverSpi
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text11
  1349  00096C                     __ptext11:
  1350                           	opt stack 0
  1351  00096C                     _SPI2_Exchange8bit:
  1352                           	opt stack 26
  1353                           
  1354                           ;incstack = 0
  1355                           ;SPI2_Exchange8bit@data stored from wreg
  1356  00096C  6E1C               	movwf	SPI2_Exchange8bit@data,c
  1357                           
  1358                           ;spi2.c: 81: uint8_t dummyRead = SSP2BUF;
  1359  00096E  CF6F F01B          	movff	3951,SPI2_Exchange8bit@dummyRead	;volatile
  1360                           
  1361                           ;spi2.c: 84: SSP2CON1bits.WCOL = 0;
  1362  000972  9E6C               	bcf	3948,7,c	;volatile
  1363                           
  1364                           ;spi2.c: 86: SSP2BUF = data;
  1365  000974  C01C  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
  1366  000978                     
  1367                           ;spi2.c: 89: {
  1368  000978  B06D               	btfsc	3949,0,c	;volatile
  1369  00097A  D003               	goto	u620
  1370  00097C  5039               	movf	_toRedrawLeds,w,c
  1371  00097E  B4D8               	btfsc	status,2,c
  1372  000980  D7FB               	goto	l172
  1373  000982                     u620:
  1374                           
  1375                           ;spi2.c: 90: }
  1376                           ;spi2.c: 92: return (SSP2BUF);
  1377  000982  506F               	movf	3951,w,c	;volatile
  1378  000984  0012               	return	
  1379  000986                     __end_of_SPI2_Exchange8bit:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           prodh	equ	0xFF4
  1386                           prodl	equ	0xFF3
  1387                           intcon	equ	0xFF2
  1388                           intcon2	equ	0xFF1
  1389                           postinc0	equ	0xFEE
  1390                           wreg	equ	0xFE8
  1391                           postinc2	equ	0xFDE
  1392                           postdec2	equ	0xFDD
  1393                           fsr2h	equ	0xFDA
  1394                           fsr2l	equ	0xFD9
  1395                           status	equ	0xFD8
  1396                           
  1397 ;; *************** function _INTERRUPT_InterruptManager *****************
  1398 ;; Defined at:
  1399 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1413 ;;      Params:         0       0       0       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0       0       0
  1415 ;;      Temps:         18       0       0       0       0       0       0
  1416 ;;      Totals:        18       0       0       0       0       0       0
  1417 ;;Total ram usage:       18 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:    3
  1420 ;; This function calls:
  1421 ;;		_INT0_ISR
  1422 ;; This function is called by:
  1423 ;;		Interrupt level 2
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	intcode
  1428  000008                     __pintcode:
  1429                           	opt stack 0
  1430  000008                     _INTERRUPT_InterruptManager:
  1431                           	opt stack 24
  1432                           
  1433                           ;incstack = 0
  1434  000008  823C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1435  00000A  CFFA F009          	movff	pclath,??_INTERRUPT_InterruptManager
  1436  00000E  CFFB F00A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1437  000012  CFE9 F00B          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1438  000016  CFEA F00C          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1439  00001A  CFE1 F00D          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1440  00001E  CFE2 F00E          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1441  000022  CFD9 F00F          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1442  000026  CFDA F010          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1443  00002A  CFF3 F011          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1444  00002E  CFF4 F012          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1445  000032  CFF6 F013          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1446  000036  CFF7 F014          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1447  00003A  CFF8 F015          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1448  00003E  CFF5 F016          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1449  000042  C03C  F017         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1450  000046  C03D  F018         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1451  00004A  C03E  F019         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1452  00004E  C03F  F01A         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1453                           
  1454                           ;interrupt_manager.c: 60: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  1455  000052  B8F2               	btfsc	intcon,4,c	;volatile
  1456  000054  A2F2               	btfss	intcon,1,c	;volatile
  1457  000056  D002               	goto	i2l87
  1458                           
  1459                           ;interrupt_manager.c: 61: {
  1460                           ;interrupt_manager.c: 62: INT0_ISR();
  1461  000058  ECB0  F003         	call	_INT0_ISR	;wreg free
  1462  00005C                     i2l87:
  1463                           
  1464                           ;interrupt_manager.c: 64: else
  1465                           ;interrupt_manager.c: 65: {
  1466  00005C  C01A  F03F         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1467  000060  C019  F03E         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1468  000064  C018  F03D         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1469  000068  C017  F03C         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1470  00006C  C016  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1471  000070  C015  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1472  000074  C014  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1473  000078  C013  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1474  00007C  C012  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1475  000080  C011  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1476  000084  C010  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1477  000088  C00F  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1478  00008C  C00E  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1479  000090  C00D  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1480  000094  C00C  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1481  000098  C00B  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1482  00009C  C00A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1483  0000A0  C009  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1484  0000A4  923C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1485  0000A6  0011               	retfie		f
  1486  0000A8                     __end_of_INTERRUPT_InterruptManager:
  1487                           	opt stack 0
  1488                           pclatu	equ	0xFFB
  1489                           pclath	equ	0xFFA
  1490                           tblptru	equ	0xFF8
  1491                           tblptrh	equ	0xFF7
  1492                           tblptrl	equ	0xFF6
  1493                           tablat	equ	0xFF5
  1494                           prodh	equ	0xFF4
  1495                           prodl	equ	0xFF3
  1496                           intcon	equ	0xFF2
  1497                           intcon2	equ	0xFF1
  1498                           postinc0	equ	0xFEE
  1499                           fsr0h	equ	0xFEA
  1500                           fsr0l	equ	0xFE9
  1501                           wreg	equ	0xFE8
  1502                           fsr1h	equ	0xFE2
  1503                           fsr1l	equ	0xFE1
  1504                           postinc2	equ	0xFDE
  1505                           postdec2	equ	0xFDD
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _INT0_ISR *****************
  1511 ;; Defined at:
  1512 ;;		line 49 in file "mcc_generated_files/ext_int.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  i               2    6[COMRAM] int 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1526 ;;      Params:         0       0       0       0       0       0       0
  1527 ;;      Locals:         2       0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0
  1529 ;;      Totals:         2       0       0       0       0       0       0
  1530 ;;Total ram usage:        2 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    2
  1533 ;; This function calls:
  1534 ;;		_ADC_GetConversion
  1535 ;;		_INT0_CallBack
  1536 ;;		_setTCRT
  1537 ;; This function is called by:
  1538 ;;		_INTERRUPT_InterruptManager
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text13
  1543  000760                     __ptext13:
  1544                           	opt stack 0
  1545  000760                     _INT0_ISR:
  1546                           	opt stack 24
  1547                           
  1548                           ;ext_int.c: 52: for(int i = 0; i < 8; i++)
  1549                           
  1550                           ;incstack = 0
  1551  000760  0E00               	movlw	0
  1552  000762  6E08               	movwf	INT0_ISR@i+1,c
  1553  000764  0E00               	movlw	0
  1554  000766  6E07               	movwf	INT0_ISR@i,c
  1555  000768                     i2l1208:
  1556  000768  BE08               	btfsc	INT0_ISR@i+1,7,c
  1557  00076A  D006               	goto	i2l112
  1558  00076C  5008               	movf	INT0_ISR@i+1,w,c
  1559  00076E  E139               	bnz	i2l1224
  1560  000770  0E08               	movlw	8
  1561  000772  5C07               	subwf	INT0_ISR@i,w,c
  1562  000774  B0D8               	btfsc	status,0,c
  1563  000776  D035               	goto	i2u60_40
  1564  000778                     i2l112:
  1565                           
  1566                           ;ext_int.c: 53: {
  1567                           ;ext_int.c: 54: setTCRT(i, 1);
  1568  000778  C007  F001         	movff	INT0_ISR@i,setTCRT@pos
  1569  00077C  C008  F002         	movff	INT0_ISR@i+1,setTCRT@pos+1
  1570  000780  0E00               	movlw	0
  1571  000782  6E04               	movwf	setTCRT@value+1,c
  1572  000784  0E01               	movlw	1
  1573  000786  6E03               	movwf	setTCRT@value,c
  1574  000788  EC5D  F003         	call	_setTCRT	;wreg free
  1575                           
  1576                           ;ext_int.c: 55: _delay((unsigned long)((50)*(16000000/4000000.0)));
  1577  00078C  0E42               	movlw	66
  1578  00078E                     i2u79_47:
  1579  00078E  2EE8               	decfsz	wreg,f,c
  1580  000790  D7FE               	bra	i2u79_47
  1581  000792  D000               	nop2	
  1582                           
  1583                           ;ext_int.c: 56: tcrt[i] = ADC_GetConversion(AN_CHANNEL[i]);
  1584  000794  90D8               	bcf	status,0,c
  1585  000796  3407               	rlcf	INT0_ISR@i,w,c
  1586  000798  6EF6               	movwf	tblptrl,c
  1587  00079A  3408               	rlcf	INT0_ISR@i+1,w,c
  1588  00079C  6EF7               	movwf	tblptrh,c
  1589  00079E  0E01               	movlw	low _AN_CHANNEL
  1590  0007A0  26F6               	addwf	tblptrl,f,c
  1591  0007A2  0E06               	movlw	high _AN_CHANNEL
  1592  0007A4  22F7               	addwfc	tblptrh,f,c
  1593  0007A6                     	if	0	;There are less than 3 active tblptr bytes
  1594  0007A6                     	endif
  1595  0007A6  0008               	tblrd		*
  1596  0007A8  50F5               	movf	tablat,w,c
  1597  0007AA  EC74  F004         	call	_ADC_GetConversion
  1598  0007AE  90D8               	bcf	status,0,c
  1599  0007B0  3407               	rlcf	INT0_ISR@i,w,c
  1600  0007B2  6ED9               	movwf	fsr2l,c
  1601  0007B4  3408               	rlcf	INT0_ISR@i+1,w,c
  1602  0007B6  6EDA               	movwf	fsr2h,c
  1603  0007B8  0E29               	movlw	low _tcrt
  1604  0007BA  26D9               	addwf	fsr2l,f,c
  1605  0007BC  0E00               	movlw	high _tcrt
  1606  0007BE  22DA               	addwfc	fsr2h,f,c
  1607  0007C0  C001  FFDE         	movff	?_ADC_GetConversion,postinc2
  1608  0007C4  C002  FFDD         	movff	?_ADC_GetConversion+1,postdec2
  1609                           
  1610                           ;ext_int.c: 57: setTCRT(i, 0);
  1611  0007C8  C007  F001         	movff	INT0_ISR@i,setTCRT@pos
  1612  0007CC  C008  F002         	movff	INT0_ISR@i+1,setTCRT@pos+1
  1613  0007D0  0E00               	movlw	0
  1614  0007D2  6E04               	movwf	setTCRT@value+1,c
  1615  0007D4  0E00               	movlw	0
  1616  0007D6  6E03               	movwf	setTCRT@value,c
  1617  0007D8  EC5D  F003         	call	_setTCRT	;wreg free
  1618  0007DC  4A07               	infsnz	INT0_ISR@i,f,c
  1619  0007DE  2A08               	incf	INT0_ISR@i+1,f,c
  1620  0007E0  D7C3               	goto	i2l1208
  1621  0007E2                     i2u60_40:
  1622  0007E2                     i2l1224:
  1623                           
  1624                           ;ext_int.c: 58: }
  1625                           ;ext_int.c: 59: toRedrawLeds = 1;
  1626  0007E2  0E01               	movlw	1
  1627  0007E4  6E39               	movwf	_toRedrawLeds,c
  1628                           
  1629                           ;ext_int.c: 62: (INTCONbits.INT0IF = 0);
  1630  0007E6  92F2               	bcf	intcon,1,c	;volatile
  1631                           
  1632                           ;ext_int.c: 65: INT0_CallBack();
  1633  0007E8  EC8C  F004         	call	_INT0_CallBack	;wreg free
  1634  0007EC  0012               	return		;funcret
  1635  0007EE                     __end_of_INT0_ISR:
  1636                           	opt stack 0
  1637                           pclatu	equ	0xFFB
  1638                           pclath	equ	0xFFA
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           prodh	equ	0xFF4
  1644                           prodl	equ	0xFF3
  1645                           intcon	equ	0xFF2
  1646                           intcon2	equ	0xFF1
  1647                           postinc0	equ	0xFEE
  1648                           fsr0h	equ	0xFEA
  1649                           fsr0l	equ	0xFE9
  1650                           wreg	equ	0xFE8
  1651                           fsr1h	equ	0xFE2
  1652                           fsr1l	equ	0xFE1
  1653                           postinc2	equ	0xFDE
  1654                           postdec2	equ	0xFDD
  1655                           fsr2h	equ	0xFDA
  1656                           fsr2l	equ	0xFD9
  1657                           status	equ	0xFD8
  1658                           
  1659 ;; *************** function _setTCRT *****************
  1660 ;; Defined at:
  1661 ;;		line 65 in file "main.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  pos             2    0[COMRAM] int 
  1664 ;;  value           2    2[COMRAM] int 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1676 ;;      Params:         4       0       0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0
  1678 ;;      Temps:          2       0       0       0       0       0       0
  1679 ;;      Totals:         6       0       0       0       0       0       0
  1680 ;;Total ram usage:        6 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_INT0_ISR
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text14
  1690  0006BA                     __ptext14:
  1691                           	opt stack 0
  1692  0006BA                     _setTCRT:
  1693                           	opt stack 25
  1694                           
  1695                           ;main.c: 67: switch(pos)
  1696                           
  1697                           ;incstack = 0
  1698  0006BA  D030               	goto	i2l237
  1699  0006BC                     i2l238:
  1700                           
  1701                           ;main.c: 70: LATCbits.LATC5 = value;
  1702  0006BC  B003               	btfsc	setTCRT@value,0,c
  1703  0006BE  D002               	bra	i2u41_45
  1704  0006C0  9A8B               	bcf	3979,5,c	;volatile
  1705  0006C2  D001               	bra	i2u41_46
  1706  0006C4                     i2u41_45:
  1707  0006C4  8A8B               	bsf	3979,5,c	;volatile
  1708  0006C6                     i2u41_46:
  1709                           
  1710                           ;main.c: 71: break;
  1711  0006C6  0012               	return	
  1712  0006C8                     i2l240:
  1713                           
  1714                           ;main.c: 73: LATDbits.LATD6 = value;
  1715  0006C8  B003               	btfsc	setTCRT@value,0,c
  1716  0006CA  D002               	bra	i2u42_45
  1717  0006CC  9C8C               	bcf	3980,6,c	;volatile
  1718  0006CE  D001               	bra	i2u42_46
  1719  0006D0                     i2u42_45:
  1720  0006D0  8C8C               	bsf	3980,6,c	;volatile
  1721  0006D2                     i2u42_46:
  1722                           
  1723                           ;main.c: 74: break;
  1724  0006D2  0012               	return	
  1725  0006D4                     i2l241:
  1726                           
  1727                           ;main.c: 76: LATBbits.LATB2 = value;
  1728  0006D4  B003               	btfsc	setTCRT@value,0,c
  1729  0006D6  D002               	bra	i2u43_45
  1730  0006D8  948A               	bcf	3978,2,c	;volatile
  1731  0006DA  D001               	bra	i2u43_46
  1732  0006DC                     i2u43_45:
  1733  0006DC  848A               	bsf	3978,2,c	;volatile
  1734  0006DE                     i2u43_46:
  1735                           
  1736                           ;main.c: 77: break;
  1737  0006DE  0012               	return	
  1738  0006E0                     i2l242:
  1739                           
  1740                           ;main.c: 79: LATBbits.LATB4 = value;
  1741  0006E0  B003               	btfsc	setTCRT@value,0,c
  1742  0006E2  D002               	bra	i2u44_45
  1743  0006E4  988A               	bcf	3978,4,c	;volatile
  1744  0006E6  D001               	bra	i2u44_46
  1745  0006E8                     i2u44_45:
  1746  0006E8  888A               	bsf	3978,4,c	;volatile
  1747  0006EA                     i2u44_46:
  1748                           
  1749                           ;main.c: 80: break;
  1750  0006EA  0012               	return	
  1751  0006EC                     i2l243:
  1752                           
  1753                           ;main.c: 82: LATAbits.LATA2 = value;
  1754  0006EC  B003               	btfsc	setTCRT@value,0,c
  1755  0006EE  D002               	bra	i2u45_45
  1756  0006F0  9489               	bcf	3977,2,c	;volatile
  1757  0006F2  D001               	bra	i2u45_46
  1758  0006F4                     i2u45_45:
  1759  0006F4  8489               	bsf	3977,2,c	;volatile
  1760  0006F6                     i2u45_46:
  1761                           
  1762                           ;main.c: 83: break;
  1763  0006F6  0012               	return	
  1764  0006F8                     i2l244:
  1765                           
  1766                           ;main.c: 85: LATAbits.LATA4 = value;
  1767  0006F8  B003               	btfsc	setTCRT@value,0,c
  1768  0006FA  D002               	bra	i2u46_45
  1769  0006FC  9889               	bcf	3977,4,c	;volatile
  1770  0006FE  D001               	bra	i2u46_46
  1771  000700                     i2u46_45:
  1772  000700  8889               	bsf	3977,4,c	;volatile
  1773  000702                     i2u46_46:
  1774                           
  1775                           ;main.c: 86: break;
  1776  000702  0012               	return	
  1777  000704                     i2l245:
  1778                           
  1779                           ;main.c: 88: LATEbits.LATE1 = value;
  1780  000704  B003               	btfsc	setTCRT@value,0,c
  1781  000706  D002               	bra	i2u47_45
  1782  000708  928D               	bcf	3981,1,c	;volatile
  1783  00070A  D001               	bra	i2u47_46
  1784  00070C                     i2u47_45:
  1785  00070C  828D               	bsf	3981,1,c	;volatile
  1786  00070E                     i2u47_46:
  1787                           
  1788                           ;main.c: 89: break;
  1789  00070E  0012               	return	
  1790  000710                     i2l246:
  1791                           
  1792                           ;main.c: 91: LATCbits.LATC2 = value;
  1793  000710  B003               	btfsc	setTCRT@value,0,c
  1794  000712  D002               	bra	i2u48_45
  1795  000714  948B               	bcf	3979,2,c	;volatile
  1796  000716  D001               	bra	i2u48_46
  1797  000718                     i2u48_45:
  1798  000718  848B               	bsf	3979,2,c	;volatile
  1799  00071A                     i2u48_46:
  1800                           
  1801                           ;main.c: 93: }
  1802                           
  1803                           ;main.c: 92: break;
  1804  00071A  0012               	return	
  1805  00071C                     i2l237:
  1806  00071C  C001  F005         	movff	setTCRT@pos,??_setTCRT
  1807  000720  C002  F006         	movff	setTCRT@pos+1,??_setTCRT+1
  1808                           
  1809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1810                           ; Switch size 1, requested type "space"
  1811                           ; Number of cases is 1, Range of values is 0 to 0
  1812                           ; switch strategies available:
  1813                           ; Name         Instructions Cycles
  1814                           ; simple_byte            4     3 (average)
  1815                           ;	Chosen strategy is simple_byte
  1816  000724  5006               	movf	??_setTCRT+1,w,c
  1817  000726  0A00               	xorlw	0	; case 0
  1818  000728  A4D8               	btfss	status,2,c
  1819  00072A  0012               	return	
  1820                           
  1821                           ; Switch size 1, requested type "space"
  1822                           ; Number of cases is 8, Range of values is 0 to 7
  1823                           ; switch strategies available:
  1824                           ; Name         Instructions Cycles
  1825                           ; simple_byte           25    13 (average)
  1826                           ;	Chosen strategy is simple_byte
  1827  00072C  5005               	movf	??_setTCRT,w,c
  1828  00072E  0A00               	xorlw	0	; case 0
  1829  000730  B4D8               	btfsc	status,2,c
  1830  000732  D7C4               	goto	i2l238
  1831  000734  0A01               	xorlw	1	; case 1
  1832  000736  B4D8               	btfsc	status,2,c
  1833  000738  D7C7               	goto	i2l240
  1834  00073A  0A03               	xorlw	3	; case 2
  1835  00073C  B4D8               	btfsc	status,2,c
  1836  00073E  D7CA               	goto	i2l241
  1837  000740  0A01               	xorlw	1	; case 3
  1838  000742  B4D8               	btfsc	status,2,c
  1839  000744  D7CD               	goto	i2l242
  1840  000746  0A07               	xorlw	7	; case 4
  1841  000748  B4D8               	btfsc	status,2,c
  1842  00074A  D7D0               	goto	i2l243
  1843  00074C  0A01               	xorlw	1	; case 5
  1844  00074E  B4D8               	btfsc	status,2,c
  1845  000750  D7D3               	goto	i2l244
  1846  000752  0A03               	xorlw	3	; case 6
  1847  000754  B4D8               	btfsc	status,2,c
  1848  000756  D7D6               	goto	i2l245
  1849  000758  0A01               	xorlw	1	; case 7
  1850  00075A  A4D8               	btfss	status,2,c
  1851  00075C  0012               	return	
  1852  00075E  D7D8               	goto	i2l246
  1853  000760                     __end_of_setTCRT:
  1854                           	opt stack 0
  1855                           pclatu	equ	0xFFB
  1856                           pclath	equ	0xFFA
  1857                           tblptru	equ	0xFF8
  1858                           tblptrh	equ	0xFF7
  1859                           tblptrl	equ	0xFF6
  1860                           tablat	equ	0xFF5
  1861                           prodh	equ	0xFF4
  1862                           prodl	equ	0xFF3
  1863                           intcon	equ	0xFF2
  1864                           intcon2	equ	0xFF1
  1865                           postinc0	equ	0xFEE
  1866                           fsr0h	equ	0xFEA
  1867                           fsr0l	equ	0xFE9
  1868                           wreg	equ	0xFE8
  1869                           fsr1h	equ	0xFE2
  1870                           fsr1l	equ	0xFE1
  1871                           postinc2	equ	0xFDE
  1872                           postdec2	equ	0xFDD
  1873                           fsr2h	equ	0xFDA
  1874                           fsr2l	equ	0xFD9
  1875                           status	equ	0xFD8
  1876                           
  1877 ;; *************** function _INT0_CallBack *****************
  1878 ;; Defined at:
  1879 ;;		line 71 in file "mcc_generated_files/ext_int.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1893 ;;      Params:         0       0       0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0
  1896 ;;      Totals:         0       0       0       0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    1
  1900 ;; This function calls:
  1901 ;;		Absolute function
  1902 ;;		_INT0_DefaultInterruptHandler
  1903 ;; This function is called by:
  1904 ;;		_INT0_ISR
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text15
  1909  000918                     __ptext15:
  1910                           	opt stack 0
  1911  000918                     _INT0_CallBack:
  1912                           	opt stack 24
  1913                           
  1914                           ;ext_int.c: 74: if(INT0_InterruptHandler)
  1915                           
  1916                           ;incstack = 0
  1917  000918  503A               	movf	_INT0_InterruptHandler,w,c
  1918  00091A  103B               	iorwf	_INT0_InterruptHandler+1,w,c
  1919  00091C  B4D8               	btfsc	status,2,c
  1920  00091E  0012               	return	
  1921                           
  1922                           ;ext_int.c: 75: {
  1923                           ;ext_int.c: 76: INT0_InterruptHandler();
  1924  000920  D801               	call	i2u50_48
  1925  000922  0012               	return	
  1926  000924                     i2u50_48:
  1927  000924  0005               	push	
  1928  000926  6EFA               	movwf	pclath,c
  1929  000928  503A               	movf	_INT0_InterruptHandler,w,c
  1930  00092A  6EFD               	movwf	tosl,c
  1931  00092C  503B               	movf	_INT0_InterruptHandler+1,w,c
  1932  00092E  6EFE               	movwf	tosh,c
  1933  000930  50F8               	movf	tblptru,w,c
  1934  000932  6EFF               	movwf	tosu,c
  1935  000934  50FA               	movf	pclath,w,c
  1936  000936  0012               	return		;indir
  1937  000938                     __end_of_INT0_CallBack:
  1938                           	opt stack 0
  1939                           tosu	equ	0xFFF
  1940                           tosh	equ	0xFFE
  1941                           tosl	equ	0xFFD
  1942                           pclatu	equ	0xFFB
  1943                           pclath	equ	0xFFA
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           prodh	equ	0xFF4
  1949                           prodl	equ	0xFF3
  1950                           intcon	equ	0xFF2
  1951                           intcon2	equ	0xFF1
  1952                           postinc0	equ	0xFEE
  1953                           fsr0h	equ	0xFEA
  1954                           fsr0l	equ	0xFE9
  1955                           wreg	equ	0xFE8
  1956                           fsr1h	equ	0xFE2
  1957                           fsr1l	equ	0xFE1
  1958                           postinc2	equ	0xFDE
  1959                           postdec2	equ	0xFDD
  1960                           fsr2h	equ	0xFDA
  1961                           fsr2l	equ	0xFD9
  1962                           status	equ	0xFD8
  1963                           
  1964 ;; *************** function _INT0_DefaultInterruptHandler *****************
  1965 ;; Defined at:
  1966 ;;		line 90 in file "mcc_generated_files/ext_int.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		None
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1980 ;;      Params:         0       0       0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_EXT_INT_Initialize
  1990 ;;		_INT0_CallBack
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text16
  1995  0009DA                     __ptext16:
  1996                           	opt stack 0
  1997  0009DA                     _INT0_DefaultInterruptHandler:
  1998                           	opt stack 24
  1999                           
  2000                           ;incstack = 0
  2001  0009DA  0012               	return		;funcret
  2002  0009DC                     __end_of_INT0_DefaultInterruptHandler:
  2003                           	opt stack 0
  2004                           tosu	equ	0xFFF
  2005                           tosh	equ	0xFFE
  2006                           tosl	equ	0xFFD
  2007                           pclatu	equ	0xFFB
  2008                           pclath	equ	0xFFA
  2009                           tblptru	equ	0xFF8
  2010                           tblptrh	equ	0xFF7
  2011                           tblptrl	equ	0xFF6
  2012                           tablat	equ	0xFF5
  2013                           prodh	equ	0xFF4
  2014                           prodl	equ	0xFF3
  2015                           intcon	equ	0xFF2
  2016                           intcon2	equ	0xFF1
  2017                           postinc0	equ	0xFEE
  2018                           fsr0h	equ	0xFEA
  2019                           fsr0l	equ	0xFE9
  2020                           wreg	equ	0xFE8
  2021                           fsr1h	equ	0xFE2
  2022                           fsr1l	equ	0xFE1
  2023                           postinc2	equ	0xFDE
  2024                           postdec2	equ	0xFDD
  2025                           fsr2h	equ	0xFDA
  2026                           fsr2l	equ	0xFD9
  2027                           status	equ	0xFD8
  2028                           
  2029 ;; *************** function _ADC_GetConversion *****************
  2030 ;; Defined at:
  2031 ;;		line 106 in file "mcc_generated_files/adc.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  channel         1    wreg     enum E6975
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  channel         1    4[COMRAM] enum E6975
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2    0[COMRAM] unsigned int 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2045 ;;      Params:         2       0       0       0       0       0       0
  2046 ;;      Locals:         1       0       0       0       0       0       0
  2047 ;;      Temps:          2       0       0       0       0       0       0
  2048 ;;      Totals:         5       0       0       0       0       0       0
  2049 ;;Total ram usage:        5 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_INT0_ISR
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text17
  2059  0008E8                     __ptext17:
  2060                           	opt stack 0
  2061  0008E8                     _ADC_GetConversion:
  2062                           	opt stack 25
  2063                           
  2064                           ;incstack = 0
  2065                           ;ADC_GetConversion@channel stored from wreg
  2066  0008E8  6E05               	movwf	ADC_GetConversion@channel,c
  2067                           
  2068                           ;adc.c: 109: ADCON0bits.CHS = channel;
  2069  0008EA  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2070  0008EE  4603               	rlncf	??_ADC_GetConversion,f,c
  2071  0008F0  4603               	rlncf	??_ADC_GetConversion,f,c
  2072  0008F2  50C2               	movf	4034,w,c	;volatile
  2073  0008F4  1803               	xorwf	??_ADC_GetConversion,w,c
  2074  0008F6  0B83               	andlw	-125
  2075  0008F8  1803               	xorwf	??_ADC_GetConversion,w,c
  2076  0008FA  6EC2               	movwf	4034,c	;volatile
  2077                           
  2078                           ;adc.c: 112: ADCON0bits.ADON = 1;
  2079  0008FC  80C2               	bsf	4034,0,c	;volatile
  2080                           
  2081                           ;adc.c: 115: ADCON0bits.GO_nDONE = 1;
  2082  0008FE  82C2               	bsf	4034,1,c	;volatile
  2083  000900                     
  2084                           ;adc.c: 119: {
  2085  000900  B2C2               	btfsc	4034,1,c	;volatile
  2086  000902  D7FE               	goto	i2l31
  2087                           
  2088                           ;adc.c: 120: }
  2089                           ;adc.c: 123: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2090  000904  50C4               	movf	4036,w,c	;volatile
  2091  000906  6E04               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  2092  000908  6A03               	clrf	??_ADC_GetConversion& (0+255),c
  2093  00090A  50C3               	movf	4035,w,c	;volatile
  2094  00090C  2403               	addwf	??_ADC_GetConversion,w,c
  2095  00090E  6E01               	movwf	?_ADC_GetConversion,c
  2096  000910  0E00               	movlw	0
  2097  000912  2004               	addwfc	??_ADC_GetConversion+1,w,c
  2098  000914  6E02               	movwf	?_ADC_GetConversion+1,c
  2099  000916  0012               	return	
  2100  000918                     __end_of_ADC_GetConversion:
  2101                           	opt stack 0
  2102                           tosu	equ	0xFFF
  2103                           tosh	equ	0xFFE
  2104                           tosl	equ	0xFFD
  2105                           pclatu	equ	0xFFB
  2106                           pclath	equ	0xFFA
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           prodh	equ	0xFF4
  2112                           prodl	equ	0xFF3
  2113                           intcon	equ	0xFF2
  2114                           intcon2	equ	0xFF1
  2115                           postinc0	equ	0xFEE
  2116                           fsr0h	equ	0xFEA
  2117                           fsr0l	equ	0xFE9
  2118                           wreg	equ	0xFE8
  2119                           fsr1h	equ	0xFE2
  2120                           fsr1l	equ	0xFE1
  2121                           postinc2	equ	0xFDE
  2122                           postdec2	equ	0xFDD
  2123                           fsr2h	equ	0xFDA
  2124                           fsr2l	equ	0xFD9
  2125                           status	equ	0xFD8
  2126                           tosu	equ	0xFFF
  2127                           tosh	equ	0xFFE
  2128                           tosl	equ	0xFFD
  2129                           pclatu	equ	0xFFB
  2130                           pclath	equ	0xFFA
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           prodh	equ	0xFF4
  2136                           prodl	equ	0xFF3
  2137                           intcon	equ	0xFF2
  2138                           intcon2	equ	0xFF1
  2139                           postinc0	equ	0xFEE
  2140                           fsr0h	equ	0xFEA
  2141                           fsr0l	equ	0xFE9
  2142                           wreg	equ	0xFE8
  2143                           fsr1h	equ	0xFE2
  2144                           fsr1l	equ	0xFE1
  2145                           postinc2	equ	0xFDE
  2146                           postdec2	equ	0xFDD
  2147                           fsr2h	equ	0xFDA
  2148                           fsr2l	equ	0xFD9
  2149                           status	equ	0xFD8
  2150                           
  2151                           	psect	text18
  2152  000000                     __ptext18:
  2153                           	opt stack 0
  2154                           tosu	equ	0xFFF
  2155                           tosh	equ	0xFFE
  2156                           tosl	equ	0xFFD
  2157                           pclatu	equ	0xFFB
  2158                           pclath	equ	0xFFA
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           prodh	equ	0xFF4
  2164                           prodl	equ	0xFF3
  2165                           intcon	equ	0xFF2
  2166                           intcon2	equ	0xFF1
  2167                           postinc0	equ	0xFEE
  2168                           fsr0h	equ	0xFEA
  2169                           fsr0l	equ	0xFE9
  2170                           wreg	equ	0xFE8
  2171                           fsr1h	equ	0xFE2
  2172                           fsr1l	equ	0xFE1
  2173                           postinc2	equ	0xFDE
  2174                           postdec2	equ	0xFDD
  2175                           fsr2h	equ	0xFDA
  2176                           fsr2l	equ	0xFD9
  2177                           status	equ	0xFD8
  2178                           
  2179                           	psect	rparam
  2180  0000                     tosu	equ	0xFFF
  2181                           tosh	equ	0xFFE
  2182                           tosl	equ	0xFFD
  2183                           pclatu	equ	0xFFB
  2184                           pclath	equ	0xFFA
  2185                           tblptru	equ	0xFF8
  2186                           tblptrh	equ	0xFF7
  2187                           tblptrl	equ	0xFF6
  2188                           tablat	equ	0xFF5
  2189                           prodh	equ	0xFF4
  2190                           prodl	equ	0xFF3
  2191                           intcon	equ	0xFF2
  2192                           intcon2	equ	0xFF1
  2193                           postinc0	equ	0xFEE
  2194                           fsr0h	equ	0xFEA
  2195                           fsr0l	equ	0xFE9
  2196                           wreg	equ	0xFE8
  2197                           fsr1h	equ	0xFE2
  2198                           fsr1l	equ	0xFE1
  2199                           postinc2	equ	0xFDE
  2200                           postdec2	equ	0xFDD
  2201                           fsr2h	equ	0xFDA
  2202                           fsr2l	equ	0xFD9
  2203                           status	equ	0xFD8
  2204                           
  2205                           	psect	temp
  2206  00003C                     btemp:
  2207                           	opt stack 0
  2208  00003C                     	ds	1
  2209  0000                     int$flags	set	btemp
  2210  0000                     wtemp6	set	btemp+1
  2211                           tosu	equ	0xFFF
  2212                           tosh	equ	0xFFE
  2213                           tosl	equ	0xFFD
  2214                           pclatu	equ	0xFFB
  2215                           pclath	equ	0xFFA
  2216                           tblptru	equ	0xFF8
  2217                           tblptrh	equ	0xFF7
  2218                           tblptrl	equ	0xFF6
  2219                           tablat	equ	0xFF5
  2220                           prodh	equ	0xFF4
  2221                           prodl	equ	0xFF3
  2222                           intcon	equ	0xFF2
  2223                           intcon2	equ	0xFF1
  2224                           postinc0	equ	0xFEE
  2225                           fsr0h	equ	0xFEA
  2226                           fsr0l	equ	0xFE9
  2227                           wreg	equ	0xFE8
  2228                           fsr1h	equ	0xFE2
  2229                           fsr1l	equ	0xFE1
  2230                           postinc2	equ	0xFDE
  2231                           postdec2	equ	0xFDD
  2232                           fsr2h	equ	0xFDA
  2233                           fsr2l	equ	0xFD9
  2234                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        0
    BSS         17
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_drawToLeds
    _drawToLeds->_setLed
    _EXT_INT_Initialize->_INT0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_INT0_ISR
    _INT0_ISR->_setTCRT

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     607
                                             36 COMRAM     4     4      0
                     _ADC_Initialize
             _PIN_MANAGER_Initialize
                  _SPI2_Exchange8bit
                  _SYSTEM_Initialize
                         _drawToLeds
 ---------------------------------------------------------------------------------
 (1) _drawToLeds                                           4     4      0     440
                                             32 COMRAM     4     4      0
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               6     2      4     350
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Exchange8bit                                    2     2      0      23
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0     658
                                              8 COMRAM    18    18      0
                           _INT0_ISR
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             2     2      0     658
                                              6 COMRAM     2     2      0
                  _ADC_GetConversion
                      _INT0_CallBack
                            _setTCRT
 ---------------------------------------------------------------------------------
 (6) _setTCRT                                              6     2      4     502
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _INT0_CallBack                                        0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _PIN_MANAGER_Initialize
   _SPI2_Exchange8bit
   _SYSTEM_Initialize
     _ADC_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
   _drawToLeds
     _setLed

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _ADC_GetConversion
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
     _setTCRT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      3B       1       62.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B       9        0.0%
DATA                 0      0      3B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Nov 30 21:45:00 2017

                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l250 0676  
                                     l251 0616                                       l172 0978  
                                     l253 0622                                       l254 062E  
                                     l255 063A                                       l263 0806  
                                     l256 0646                                       l257 0652  
                                     l265 084C                                       l258 065E  
                                     l259 066A                                       l275 085E  
                                     l277 0868                                       l278 089C  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                                     u515 061E                                       u620 0982  
                                     u516 0620                                       u525 062A  
                                     u526 062C                                       u535 0636  
                                     u536 0638                                       u640 083C  
                                     u545 0642                                       u546 0644  
                                     u650 083E                                       u555 064E  
                                     u556 0650                                       u565 065A  
                                     u566 065C                                       u575 0666  
                                     u576 0668                                       u585 0672  
                                     u586 0674                ??_INT0_SetInterruptHandler 001D  
                             drawToLeds@i 0023                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                           _INT0_CallBack 0918                                      l1254 07F6  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      i2l31 0900  
                                    i2l87 005C                                      _WPUB 000F61  
                                    _main 084E                                      _tcrt 0029  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 003C                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A8                             __CFG_IESO$OFF 000000  
                            ___param_bank 000000                          __end_of_INT0_ISR 07EE  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 09CC  
                                   ?_main 0001                            __CFG_DEBUG$OFF 000000  
                                   i2l112 0778                                     i2l240 06C8  
                                   i2l241 06D4                                     i2l242 06E0  
                                   i2l243 06EC                                     i2l244 06F8  
                                   i2l237 071C                                     i2l245 0704  
                                   i2l246 0710                                     i2l238 06BC  
                                   _TRISA 000F92                                     _TRISB 000F93  
                          ?_INT0_CallBack 0001                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                          __end_of_TRESHOLD 0613  
                         __end_of_setTCRT 0760                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                                     wtemp6 003D  
                          __CFG_HFOFST$ON 000000                            __CFG_PBADEN$ON 000000  
                         __initialization 0938                         _SPI2_Exchange8bit 096C  
                            __end_of_main 08A4                        ?_SPI2_Exchange8bit 0001  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0025  
                           __activetblptr 000002                  __size_of_SPI2_Initialize 000E  
                     ??_SPI2_Exchange8bit 001B                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                                    i2l1224 07E2  
                                  i2l1208 0768                            __CFG_WDTEN$OFF 000000  
                                  _OSCCON 000FD3                             main@dummyRead 0027  
               __end_of_SPI2_Exchange8bit 0986                            __CFG_XINST$OFF 000000  
                          __CFG_STVREN$ON 000000                                    clear_0 093E  
                                  _setLed 0614                           ??_INT0_CallBack 0001  
                               ??_setTCRT 0005                              __mediumconst 0000  
                   main@ledPositionToSend 0028                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                ADC_GetConversion@channel 0005  INT0_SetInterruptHandler@InterruptHandler 001B  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 0952  
                              __accesstop 0060                   __end_of__initialization 0944  
                               ?_INT0_ISR 0001                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                                 INT0_ISR@i 0007  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 001D  
                      __end_of_AN_CHANNEL 0611               __size_of_EXT_INT_Initialize 0014  
               __end_of_SYSTEM_Initialize 096C                         ??_SPI2_Initialize 001B  
                         __CFG_PLLCFG$OFF 000000                               setLed@value 001D  
                   _INT0_InterruptHandler 003A                                ??_INT0_ISR 0007  
                              __pnvCOMRAM 003A                __size_of_SPI2_Exchange8bit 001A  
                      __CFG_CCP2MX$PORTC1 000000                        __CFG_CCP3MX$PORTB5 000000  
                                 ?_setLed 001B                   __size_of_ADC_Initialize 0016  
                                 _OSCCON2 000FD2                                _drawToLeds 07EE  
                                 i2u41_45 06C4                                   i2u41_46 06C6  
                                 i2u42_45 06D0                                   i2u42_46 06D2  
                                 i2u50_48 0924                                   i2u43_45 06DC  
                                 i2u43_46 06DE                                   i2u60_40 07E2  
                                 i2u44_45 06E8                                   i2u44_46 06EA  
                                 i2u45_45 06F4                                   i2u45_46 06F6  
                                 _OSCTUNE 000F9B                                   i2u46_45 0700  
                                 i2u46_46 0702                                   i2u47_45 070C  
                                 i2u47_46 070E                                   i2u48_45 0718  
                                 i2u48_46 071A                                   i2u79_47 078E  
                                 _SSP2BUF 000F6F         __size_of_INT0_SetInterruptHandler 000A  
               ?_INT0_SetInterruptHandler 001B                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                            __psmallconst 0600                                   __pcinit 0938  
                                 __ramtop 0600                           __size_of_setLed 00A6  
                                 __ptext0 084E                                   __ptext1 07EE  
                                 __ptext2 0614                                   __ptext3 0952  
                                 __ptext4 09B0                                   __ptext5 08A4  
                                 __ptext6 09BE                                   __ptext7 09D6  
                                 __ptext8 099C                                   __ptext9 09CC  
                   _OSCILLATOR_Initialize 09BE                                   _setTCRT 06BA  
                ??_PIN_MANAGER_Initialize 001B                __size_of_SYSTEM_Initialize 001A  
                    end_of_initialization 0944                             __Lmediumconst 0000  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                               ?_drawToLeds 0001  
                            setTCRT@value 0003                     SPI2_Exchange8bit@data 001C  
                       __size_of_INT0_ISR 008E              __end_of_INTERRUPT_Initialize 09DA  
    __end_of_INT0_DefaultInterruptHandler 09DC     __size_of_INT0_DefaultInterruptHandler 0002  
            _INT0_DefaultInterruptHandler 09DA                            _ADC_Initialize 0986  
                  ?_OSCILLATOR_Initialize 0001                           _SPI2_Initialize 09B0  
                          __end_of_setLed 06BA                     __end_of_INT0_CallBack 0938  
                     start_initialization 0938           __size_of_PIN_MANAGER_Initialize 0044  
                     __size_of_drawToLeds 0060                    __end_of_ADC_Initialize 099C  
              __end_of_EXT_INT_Initialize 09B0                                  ??_setLed 001F  
           ?_INT0_DefaultInterruptHandler 0001                               __pbssCOMRAM 0029  
                              setTCRT@pos 0001          __end_of_INT0_SetInterruptHandler 09D6  
                  _PIN_MANAGER_Initialize 08A4                                 __pintcode 0008  
                 __end_of_SPI2_Initialize 09BE                           ?_ADC_Initialize 0001  
            ??_INTERRUPT_InterruptManager 0009                          __CFG_PRICLKEN$ON 000000  
                             __smallconst 0600                                  ?_setTCRT 0001  
                    _INTERRUPT_Initialize 09D6                                  _INT0_ISR 0760  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                                _LATEbits 000F8D       __size_of_INTERRUPT_InterruptManager 00A0  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _SSP2CON1 000F6C                                  _SSP2CON3 000F69  
                                _SSP2STAT 000F6D                                  _TRESHOLD 0611  
                              _ADCON0bits 000FC2                              ??_drawToLeds 0021  
          ??_INT0_DefaultInterruptHandler 0001                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                  _INT0_SetInterruptHandler 09CC  
                                __Hrparam 0000                              _toRedrawLeds 0039  
                                __Lrparam 0000                         _ADC_GetConversion 08E8  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTD2 000000  
                      __end_of_drawToLeds 084E                          ?_SPI2_Initialize 0001  
                 ??_OSCILLATOR_Initialize 001B                        ?_ADC_GetConversion 0001  
                     ??_ADC_GetConversion 0003                                 setLed@pos 001B  
                        __size_of_setTCRT 00A6                                _AN_CHANNEL 0601  
                                __ptext10 0986                                  __ptext11 096C  
                                __ptext13 0760                                  __ptext14 06BA  
                                __ptext15 0918                                  __ptext16 09DA  
                                __ptext17 08E8                                  __ptext18 0000  
                            _SSP2CON1bits 000F6C                             __size_of_main 0056  
               __end_of_ADC_GetConversion 0918                                  int$flags 003C  
      __end_of_INTERRUPT_InterruptManager 00A8                _INTERRUPT_InterruptManager 0008  
                            _SSP2STATbits 000F6D                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 001B                        _EXT_INT_Initialize 099C  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
                     ?_EXT_INT_Initialize 0001                          ??_ADC_Initialize 001B  
                  __size_of_INT0_CallBack 0020                      ??_EXT_INT_Initialize 001D  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 08E8  
                       __CFG_FOSC$INTIO67 000000                __size_of_ADC_GetConversion 0030  
              SPI2_Exchange8bit@dummyRead 001B  
